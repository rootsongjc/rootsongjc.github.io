[{"categories":["kubernetes"],"date":1505033007,"description":"事前须知。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"6d6a789cd87cf0c3bc7b78f7d11b0d50","permalink":"https://jimmysong.io/blog/3-things-every-cto-should-know-about-kubernetes/","summary":"Kubernetes 是一个自动发布、扩缩容和管理容器化应用的开源软件。 尽管kubernetes非常强大，有如此多有用的技术特性，但是工具从来都不会被隔离起来单独使用，这要取决与底层基础架构，使用它的团队等等。 在将kub","title":"每位CTO都该知道的关于Kubernetes的三件事"},{"categories":["kubernetes"],"date":1511266381,"description":"关于在kubenretes中暴露Pod及服务的5种方式。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"157a1674236d1f5708507cd7359b3f9b","permalink":"https://jimmysong.io/blog/accessing-kubernetes-pods-from-outside-of-the-cluster/","summary":"本文主要讲解访问kubenretes中的Pod和Serivce的几种方式，包括如下几种： hostNetwork hostPort NodePort LoadBalancer Ingress 说是暴露Pod其实跟暴露Service是一回事，因为Pod就是Service的backend。 hostNetwork: true 这是","title":"从外部访问Kubernetes中的Pod"},{"categories":["kubernetes"],"date":1500546078,"description":"本书有两个优点，一个是每个章节都给出了问题的起因和kubernetes的解决方案，二是几乎所有的命令和操作都附有截图，说明很详细。","image":"https://jimmysong.ioimages/banner/kubernets-management-design-patterns.jpg","objectID":"0e1ee9919e1fbbe64d08211402bbde9b","permalink":"https://jimmysong.io/blog/book-kubernetes-management-design-patterns/","summary":"下面是这本书的基本信息。 书名： Kubernetes Management Design Patterns: With Docker, CoreOS Linux, and Other Platforms Amazon购买链接：链接 作者：Deepak Vohra 发行日期：2017年1月20日 出版社：Apress 页数：399 简介 Kubernetes引领容器集群管理","tags":["kubernetes","图书"],"title":"记一本关于kubernetes management design patterns的书"},{"categories":["其他"],"date":1489759705,"description":"Hugo是一种通用的网站框架，本问教你如何使用Hugo来构建静态网站。","image":"https://jimmysong.ioimages/banner/hugo-logo.jpg","objectID":"6f76314e3af99d6290c73bb407f53ac7","permalink":"https://jimmysong.io/blog/building-github-pages-with-hugo/","summary":"亲，你还在为虚拟主机、域名、空间而发愁吗？你想拥有自己的网站吗？你想拥有一个分享知识、留住感动，为开源事业而奋斗终身吗？那么赶快拿起你手中的📱拨打16899168，不对，是看这篇文章吧，不用998，也","tags":["hugo"],"title":"零基础使用Hugo和GitHub Pages创建自己的博客"},{"categories":["kubernetes"],"date":1528979604,"description":"TheNewStack的报告解读，介绍了Kubernetes中CI/CD的现状。","image":"https://jimmysong.ioimages/banner/ci-cd-with-kubernetes.jpg","objectID":"c4c9dd5a60af34ed4f967931a52b6cc5","permalink":"https://jimmysong.io/blog/ci-cd-in-kubernetes/","summary":"众所周知Kubernetes并不提供代码构建、发布和部署，所有的这些工作都是由CI/CD工作流完成的，最近TheNewStack又出了本小册子（117页）介绍了Kubernetes中CI/CD的现状，","tags":["图书","TheNewStack"],"title":"Kubernetes中的CI/CD"},{"categories":["其他"],"date":1655954869,"description":"近日 InfoQ 发布了 DevOps and Cloud InfoQ Trends Report – June 2022，因为报告中所覆盖的技术领域过于宽泛，本文仅仅是对这篇报告的一点个人解读。","image":"https://jimmysong.ioimages/banner/infoq-2022.jpg","objectID":"571e8ded0c1fb30ae58859ad284b766b","permalink":"https://jimmysong.io/blog/cloud-and-devops-trend-2022/","summary":"近日 InfoQ 发布了 DevOps and Cloud InfoQ Trends Report – June 2022 ，因为报告中所覆盖的技术领域过于宽泛，本文仅仅是对这篇报告的一点个人解读。我基本认同我关注的这些技术中「创新者」和「后期大众」阶段技术的划分。 报告概括 下面这段节选自原文的","tags":["DevOps","趋势","InfoQ"],"title":"2022 年云和 DevOps 趋势报告"},{"categories":["其他"],"date":1490280858,"description":"最近研究了下Pivotal的Cloud foundry，CF本身是一款开源软件，很多PAAS厂商都加入了CF。","image":"https://jimmysong.ioimages/banner/cloudfoundry.jpg","objectID":"5e3a72ceede7307fc5880680cf375a51","permalink":"https://jimmysong.io/blog/cloud-foundry-tryout/","summary":"前言 最近研究了下Pivotal的Cloud foundry，CF本身是一款开源软件，很多PAAS厂商都加入了CF，我们用的是的PCF Dev（PCF Dev是一款可以在工作站上运行的轻量级PCF安装）来试用","tags":["CloudFoundry"],"title":"Pivotal Cloud foundry快速开始指南"},{"categories":["云原生"],"date":1611794080,"description":"本文为应 CSDN《云原生人物志》栏目约稿，知微见著，窥见云原生价值与趋势。","image":"https://jimmysong.ioimages/banner/2021.jpg","objectID":"c4e120f1509def1621405e8834a93190","permalink":"https://jimmysong.io/blog/cloud-native-2021/","summary":"很荣幸收到 CSDN 的邀请，接受” 云原生人物志 “专栏采访，其实我从 2017 年起就已经在撰写 Kubernetes 和云原生年度总结和新年展望 ，今天在此聊抒己见，欢迎大家讨论和指正。 云原生在演进 云原生是一种行为方式和设计理念，究其本质，凡","tags":["云原生"],"title":"“寒武纪大爆发” 之后的云原生，2021 年走向何处？"},{"categories":["云原生"],"date":1559470399,"description":"本书是 TheNewStack 编辑集结 DevOps 领域的专家在各种大会上的发言、演讲编纂而成。","image":"https://jimmysong.ioimages/banner/cloud-native-devops-book.jpg","objectID":"da9e6cc2ac78003e230f237e8b99543a","permalink":"https://jimmysong.io/blog/cloud-native-devops-book/","summary":"本书的主旨是：如果没有成熟的 DevOps 实践，云原生是玩转不起来的。DevOps 已经不是什么新鲜的话题，但到底什么是 \u0026ldquo;Cloud Native DevOps” 及如何实践 Cloud Native DevOps，这正是本书要探讨的内容。 DevOps 正在经历一次转型，从自","tags":["thenewstack","图书"],"title":"TheNewStack 云原生 Devops 报告解读"},{"categories":["service mesh"],"date":1564817077,"description":"云原生服务网格 Istio（华为云原生技术丛书）图书读后感，原理、实践、架构与源码解析（张超盟、章鑫、徐中虎、徐飞编著）。","image":"https://jimmysong.ioimages/banner/cloud-native-service-mesh-istio.jpg","objectID":"14ff501752b21ad783e294d9c77da355","permalink":"https://jimmysong.io/blog/cloud-native-service-mesh-istio-book/","summary":"《云原生服务网格 Istio：原理、实践、架构与源码解析（张超盟、章鑫、徐中虎、徐飞编著）》 是 2019 年国内出版的第四本 Istio 相关图书，前三本分别是： 深入浅出Istio：Service Mesh快速入门与实践，崔秀","tags":["istio","图书"],"title":"云原生服务网格 Istio 图书"},{"categories":["云原生"],"date":1550049781,"description":"本文是对 CNCF（云原生计算基金会）2018年年度报告的解读。","image":"https://jimmysong.ioimages/banner/cncf-annual-report.jpg","objectID":"41140ce7e3ad216344f63d60bf3a1ece","permalink":"https://jimmysong.io/blog/cncf-annual-report-2018-review/","summary":"2019年2月初，CNCF 发布了2018年的年度报告，这是 CNCF 继2017年度报告之后，第二次发布年度报告，2017年度的报告只有区区14页，今年的报告长度增长了一倍达31页。下面我将带大家一起来深度解读","tags":["cncf"],"title":"CNCF年度报告解读（2018年）"},{"categories":["云原生"],"date":1520157819,"description":"CNCF云原生计算基金会简介以及CNCF的运作方式与项目成熟度级别标准介绍。","image":"https://jimmysong.ioimages/banner/cncf-logo.jpg","objectID":"241f86b964dc82b8f12e844c224f4743","permalink":"https://jimmysong.io/blog/cncf-introduction/","summary":"CNCF，全称Cloud Native Computing Foundation（云原生计算基金会），口号是坚持和整合开源技术来编排容器作为微服务架构的一部分，其作为致力于云原生应用推广和普及的一支重要力量，不论您是云原生应用的开发","tags":["CNCF"],"title":"CNCF - 云原生计算基金会简介"},{"categories":["kubernetes"],"date":1497441789,"description":"本文档旨在汇总和强调用户指南、快速开始文档和示例中的最佳实践。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"7e236e451d89e8a1f7bb5441d1aa73a1","permalink":"https://jimmysong.io/blog/configuration-best-practice/","summary":"前言 本文档旨在汇总和强调用户指南、快速开始文档和示例中的最佳实践。该文档会很很活跃并持续更新中。如果你觉得很有用的最佳实践但是本文档中没有包含，欢迎给我们提Pull Request。 本文已上传到kube","title":"Kubernetes配置最佳实践"},{"categories":["kubernetes"],"date":1520732209,"description":"iTerm2 + kubectl + kubectx + kube-ps1 + oh-my-zsh","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"af16863b4ac9df0e58d55431c75158e9","permalink":"https://jimmysong.io/blog/configuring-efficient-kubernetes-cli-terminal/","summary":"本文介绍如何打造一个高效的Kubernetes命令行终端以及Kubernetes命令行操作。 为什么我们要打造高效的Kubernetes命令行终端呢？因为下面的三点原因： Kubernetes作为云原生时","title":"打造高效的Kubernetes命令行终端"},{"categories":["kubernetes"],"date":1514967361,"description":"配置 Kubernetes DNS Pod 的提示和定义 DNS 解析过程以及诊断 DNS 问题的指南。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"be8acf1bd93b06c9156027ef65743e31","permalink":"https://jimmysong.io/blog/configuring-kubernetes-kube-dns/","summary":"在我们安装Kubernetes集群的时候就已经安装了kube-dns插件，这个插件也是官方推荐安装的。通过将 Service 注册到 DNS 中，Kuberentes 可以为我们提供一种简单的服务注册发现与负载均衡方式。 CoreDNS 作为","title":"配置Kubernetes DNS服务kube-dns"},{"categories":["容器"],"date":1498126131,"description":"本文介绍了wercker和它的基本用法。","image":"https://jimmysong.ioimages/banner/wercker.jpg","objectID":"702ed63af38c4668baa8bc6e455e976d","permalink":"https://jimmysong.io/blog/continuous-integration-with-wercker/","summary":"本文介绍了wercker和它的基本用法，并用我GitHub上的magpie 应用作为示例，讲解如何给GitHub项目增加wercker构建流程，并将生成的镜像自动上传到Docker Hub上。 注：本文参考","tags":["wercker"],"title":"使用Wercker进行持续构建与发布"},{"categories":["容器"],"date":1489030114,"description":"Contiv是思科开发的docker网络插件，从2015年就开源了，业界通常拿它和Calico比较。","image":"https://jimmysong.ioimages/banner/contiv.jpg","objectID":"947f6a87276921f4712ba0829ac7ee0a","permalink":"https://jimmysong.io/blog/contiv-guide/","summary":"Contiv是思科开发的docker网络插件，从2015年就开源了，业界通常拿它和Calico比较。貌似Contiv以前还开发过volume plugin，现在销声匿迹了，只有netplugin仍在活跃","tags":["contiv","docker"],"title":"思科开源docker网络插件Contiv简介"},{"categories":["容器"],"date":1489744357,"description":"今天这篇文章将带领大家用正确的姿势编译和打包一个contiv netplugin。","image":"https://jimmysong.ioimages/banner/contiv.jpg","objectID":"85d02ba15b3e3ea13afd84d367e265c2","permalink":"https://jimmysong.io/blog/contiv-ultimate/","summary":"前几天写的几篇关于Contiv的文章 已经把引入坑了😂 今天这篇文章将带领大家用正确的姿势编译和打包一个contiv netplugin。 请一定要在Linux环境中编译。docker中编译也会报错，最好还是","tags":["contiv","docker"],"title":"Docker17.03CE下思科docker网络插件contiv趟坑终极版"},{"categories":["容器"],"date":1489117869,"description":"继续趟昨天挖的坑。","image":"https://jimmysong.ioimages/banner/contiv.jpg","objectID":"aa6eb7c2442a92d42c2cca4bf9546736","permalink":"https://jimmysong.io/blog/contiv-v2plugin/","summary":"继续趟昨天挖的坑。 昨天的issue-776 已经得到@gkvijay的回复，原来是因为没有安装contiv/v2plugin的缘故，所以create contiv network失败，我需要自己build一个dock","tags":["contiv","docker"],"title":"Contiv入坑指南-v2plugin"},{"categories":["开源"],"date":1555328222,"description":" CNCF 基金会的开源项目治理规则和组织架构，还有如何将一个开源项目加入到 CNCF。","image":"https://jimmysong.ioimages/banner/cncf-logo.jpg","objectID":"8cdef8d98768b4ecdd9e40c8e1011c49","permalink":"https://jimmysong.io/blog/contribute-project-to-cncf/","summary":"前段时间看了一篇文章为什么中国没有 Apache 基金会这样的组织？ ，二叉树视频中采访了开源社 的理事长老刘，他的一番话也让我很受启发，在关注和参与 CNCF 基金会这几年来我也有很多收获，有一点就是了解到了一个开源社区（基金","tags":["cncf"],"title":"如何将一个开源项目加入CNCF？"},{"categories":["其他"],"date":1498191852,"description":"在进行微服务开发的过程中的API设计文档化工具。","image":"https://jimmysong.ioimages/banner/api-blueprint.jpg","objectID":"f78a87b4871a624d84f9e5a561e8fcf6","permalink":"https://jimmysong.io/blog/creating-api-document-with-api-blueprint/","summary":"在进行微服务开发的过程中，为了保证最终开发的系统跟最初的设计保持一致，约定RESTful接口之间的调用方法，我们需要将API设计文档化，因此我们引入了API Blueprint。 API Blueprint 是什么 API Blueprint 用来编写A","title":"使用API blueprint创建API文档"},{"categories":["Kubernetes"],"date":1522075724,"description":"本文讲解了如何开发容器化应用，并集成Istio service mesh中的详细过程。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"738fa0d62894b61c61ab9b03f1aedc08","permalink":"https://jimmysong.io/blog/creating-cloud-native-app-with-kubernetes/","summary":"本文讲解了如何开发容器化应用，并使用Wercker持续集成工具构建docker镜像上传到docker镜像仓库中，然后在本地使用docker-compose测试后，再使用kompose自动生成kuber","tags":["istio"],"title":"适用于kubernetes的应用开发部署流程同时集成Istio service mesh"},{"categories":["文化"],"date":1641696207,"description":"本文将为读者分享一些关于“鸿沟理论”有关的一些知识，希望能够引发大家对于新技术推广的一些思考。","image":"https://jimmysong.ioimages/banner/crossing-the-chasm.jpg","objectID":"4accf3e4f0141ab05dd083b26c4527f3","permalink":"https://jimmysong.io/blog/crossing-the-chasm/","summary":"最近为某网站撰写服务网格技术的 2021 年总结，笔者关注该领域也有 4 年时间了，再结合自己最近这几年对云原生行业发展的观察，越发觉得《跨越鸿沟》（Crossing the chasm）这本书中所写的新技术的推广生命周期","tags":["文化"],"title":"跨越鸿沟：理解鸿沟理论"},{"categories":["Kubernetes"],"date":1499776401,"description":"以日志收集问题为例来讨论和解决方案探究。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"e02536a0f0fab73d2376fbd7bb4ea543","permalink":"https://jimmysong.io/blog/data-persistence-problem/","summary":"数据落盘问题的由来 这本质上是数据持久化问题，对于有些应用依赖持久化数据，比如应用自身产生的日志需要持久化存储的情况，需要保证容器里的数据不丢失，在Pod挂掉后，其他应用依然可以访问到这些数据，因此我们","title":"Kubernetes中的数据持久化问题"},{"categories":["Kubernetes"],"date":1500550913,"description":"以两个应用来说明。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"994deab236ce169c6245c481ac11fa64","permalink":"https://jimmysong.io/blog/deploy-applications-in-kubernetes/","summary":"本文已归档在kubernetes-handbook 中的第3章【用户指南】中，一切更新以kubernetes-handbook中为准。 为了详细说明，我特意写了两个示例程序放在GitHub中，模拟应用开发","title":"适用于kubernetes的应用开发与部署流程详解"},{"categories":["Kubernetes"],"date":1493040772,"description":"该教程描述如何在Kubernetes中进行分布式负载均衡测试。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"43190dc0fc5c197db19e081f39b83f64","permalink":"https://jimmysong.io/blog/distributed-load-testing-using-kubernetes/","summary":"前言 本示例来自 GitHub - distributed-load-testing-using-kubernetes 。 该教程描述如何在Kubernetes 中进行分布式负载均衡测试，包括一个web应用、docker镜像和Kubernetes controllers/services。更多资料请查看D","title":"运用kubernetes进行分布式负载测试"},{"categories":["Kubernetes"],"date":1505566446,"description":"对于没有使用过 kubernetes 的 docker 用户，如何快速掌握 kubectl 命令？","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"5b3b086b18cc2d03c1ab098ca4fe11e2","permalink":"https://jimmysong.io/blog/docker-cli-to-kubectl/","summary":"对于没有使用过 kubernetes 的 docker 用户，如何快速掌握 kubectl 命令？kubectl 跟 docker 命令之间有什么区别和联系？ 在本文中，我们将向 docker-cli 用户介绍 Kubernetes 命令行如何与 api 进行交互。该命令行工具——kubectl，被设计成 docker-cli 用户所熟悉的样","tags":["kubernetes","docker"],"title":"docker用户过渡到kubectl命令行指南"},{"categories":["容器"],"date":1489550966,"description":"今天来看下docker create plugin的源码。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"38894a7f4cd0e86862d4ec79454d0d22","permalink":"https://jimmysong.io/blog/docker-create-plugin/","summary":"继续上一篇Docker17.03-CE插件开发的🌰 ，今天来看下docker create plugin的源码。 cli/command/plugin/create.go Docker命令行docker plugin create调用的，使用的是cobra ，这个命令行工具开发包很好用，推","tags":["docker"],"title":"Docker 17.03-CE create plugin源码解析"},{"categories":["容器"],"date":1488790999,"description":"本文将讲解如何进行 Docker 源码编译及开发环境搭建。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"6378d76ee29c418162b54c16f5860ff9","permalink":"https://jimmysong.io/blog/docker-dev-env/","summary":"看了下网上其他人写的docker开发环境搭建，要么是在ubuntu下搭建，要么就是使用官方说明的build docker-dev镜像的方式一步步搭建的，甚是繁琐，docker hub上有一个docker官","tags":["docker"],"title":"Docker源码编译和开发环境搭建"},{"categories":["容器"],"date":1544101682,"description":"CentOS7官方Docker版本docker 1.13现Bug导致docker exec失败，可致Kubernetes中的检测探针失败，官方推荐降级docker版本解决。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"0236804d78f06ad865c6ce74bbd17fcf","permalink":"https://jimmysong.io/blog/docker-exec-bug-on-centos7/","summary":"TL;DR Cannot ssh into a running pod/container \u0026ndash; rpc error: code = 2 desc = oci runtime error: exec failed: container_linux.go:247: starting container process caused \u0026ldquo;process_linux.go:110: decoding init error from pipe caused \u0026quot;read parent: connection reset by peer\u0026quot;\u0026rdquo; command terminated with exit code 126 #21590 Bug 影响 如果你使用的是 CentOS7，需要用到 kubectl exec 或者为 Pod 配置了基于命令返回值的健康检查（非常用的 HTTP Get 方式）的话","tags":["docker"],"title":"CentOS7官方Docker发行版现重大Bug可致Kubernetes中的健康检测探针失败并影响容器交互"},{"categories":["容器"],"date":1489557446,"description":"看了文章后你可能会觉得，官网上的可能是个假例子。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"b07ef35e22591fb8b31788832dbeadb6","permalink":"https://jimmysong.io/blog/docker-plugin-develop/","summary":"当你看到这篇文章时，如果你也正在进行docker1.13+版本下的plugin开发，恭喜你也入坑了，如果你趟出坑，麻烦告诉你的方法，感恩不尽🙏 看了文章后你可能会觉得，官网上的可能是个假🌰。虽然官网上的","tags":["docker"],"title":"Docker17.03-CE插件开发案例"},{"categories":["容器"],"date":1489935629,"description":"之前陆陆续续看过一点docker的源码，都未成体系，最近在研究Docker-17.03-CE，趁此机会研究下docker的源码。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"53e908e3964a9e3ad6203f26d5d14296","permalink":"https://jimmysong.io/blog/docker-source-code-analysis-code-structure/","summary":"前言 之前陆陆续续看过一点docker的源码，都未成体系，最近在研究Docker-17.03-CE，趁此机会研究下docker的源码，在网上找到一些相关资料，都比较过时了，发现孙宏亮写过一本书叫《Doc","tags":["docker"],"title":"Docker源码分析第一篇——代码结构"},{"categories":["容器"],"date":1488940621,"description":"本文讲述如何做 Docker 的技术选型。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"2b8eb4ed9784e2dc9376ba1ccbf8e0ca","permalink":"https://jimmysong.io/blog/docker-tech-selection/","summary":"回顾历史 多少次我回过头看看走过的路，你还在小村旁。 去年基于docker1.11对Hadoop yarn进行了docker化改造，详情请看大数据集群虚拟化-Yarn on docker始末 ，我将这个事件命名为m","tags":["docker"],"title":"Docker技术选型"},{"categories":["容器"],"date":1489151387,"description":"这一系列文章是对比kubernetes 和docker两者之间的差异。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"d895ac2213a00c19f05f7ca63778c2fc","permalink":"https://jimmysong.io/blog/docker-vs-kubernetes-part1/","summary":"前言 这一系列文章是对比kubernetes 和docker两者之间的差异，鉴于我之前从docker1.10.3起开始使用docker，对原生docker的了解比较多，最近又正在看**Kunernetes","tags":["docker"],"title":"Docker对比Kubernetes第一部分"},{"categories":["容器"],"date":1489154792,"description":"这一系列文章是对比kubernetes 和docker两者之间的差异。","image":"https://jimmysong.ioimages/banner/docker-logo.jpg","objectID":"19580c744b74e4f23aba4a4e97b16fca","permalink":"https://jimmysong.io/blog/docker-vs-kubernetes-part2/","summary":"本文是Docker v.s Kubernetes 系列第二篇，续接上文Docker对比Kuberntes第一部分 。 Kubernetes是典型的Master/Slave架构模式，本文简要的介绍kubenetes的架构和组件构成。 K","tags":["docker"],"title":"Docker对比Kubernetes第二部分"},{"categories":["Service Mesh"],"date":1654916929,"description":"不管有没有 eBPF，在可预见的未来，服务网格都会基于运行在用户空间的 sidecar 代理（proxyless 模式除外）。","image":"https://jimmysong.ioimages/banner/ebpf-service-mesh.jpg","objectID":"d8dc29d09e193ccfaae983c91f2de015","permalink":"https://jimmysong.io/blog/ebpf-sidecar-and-service-mesh/","summary":"最近 eBPF 技术在云原生社区中持续火热，在我翻译了《什么是 eBPF 》之后，当阅读“云原生环境中的 eBPF”之后就一直在思考 eBPF 在云原生环境中究竟处于什么地位，发挥什么样的作用。当时我评论说“eBPF 开启了上帝视角，","tags":["eBPF","sidecar","Service Mesh"],"title":"请暂时抛弃使用 eBPF 取代服务网格和 sidecar 模式的幻想"},{"categories":["service mesh"],"date":1609136320,"description":"本文将为你解析 EKS-D 的战略意义，说明它是如何与 Istio 共同保证混合云环境一致性的。","image":"https://jimmysong.ioimages/banner/aws-istio.jpg","objectID":"e2c3b075d90893e326fd16da30d15868","permalink":"https://jimmysong.io/blog/eks-eksd-istio-hybrid-cloud/","summary":"AWS 在 2020 年12 月举行的 re:Invent 大会上发布了 EKS-D ，此举旨在联合合作伙伴，开源 AWS 维护大规模 EKS 集群的经验，帮助用户实现混合云场景下 Kubernetes 的一致性的体验。本文将为你解析 EKS-D 的战略意义，说明它是如何与 Istio 共同保证混合云环境一致性","tags":["Istio","AWS"],"title":"使用 EKS-D 和 Istio 保证混合云环境一致性"},{"categories":["service mesh"],"date":1524820610,"description":"本文介绍了 Envoy proxy 中的基本概念、配置与架构解析。","image":"https://jimmysong.ioimages/banner/envoyproxy.jpg","objectID":"54d4bf8aeb5e1c4e7c574a116a4941a4","permalink":"https://jimmysong.io/blog/envoy-archiecture-and-terminology/","summary":"在了解一门技术之前一开始就要了解其中的基本概念和术语，只有融入了该语境才能理解这门技术。本文将为大家介绍 Envoy 中的基本术语和重点概念。 架构 下图是 Envoy proxy 的架构图，显示了 host B 经过 Envoy 访问 host A 的过程。每个 host 上都可能","tags":["envoy"],"title":"Envoy 的架构与基本配置解析"},{"categories":["service mesh"],"date":1524388395,"description":"本文是使用 Envoy 作为前端代理的介绍，仅使用 docker 容器和 docker-compose 做编排在单机中运行，帮助我们从更底层了解 Envoy，当我们将 Envoy 作为 Istio Service Mesh 的 data panel 的时候将更加游刃有余。","image":"https://jimmysong.ioimages/banner/envoyproxy.jpg","objectID":"7607c6806d439f234f722d3d0ff2830c","permalink":"https://jimmysong.io/blog/envoy-as-front-proxy/","summary":"Envoy 是一款由 Lyft 开源的，使用 C++ 编写的 L7 代理和通信总线，目前是 CNCF 旗下的开源项目，代码托管在 GitHub 上，它也是 Istio service mesh 中默认的 data plane。本文将给出使用 Envoy 作为 service mesh 的数据平面的示例，应用使用 docker-compose 编排。 特性 Envoy 包括如下特性","tags":["envoy"],"title":"使用 Envoy 作为前端代理"},{"categories":["service mesh"],"date":1524918413,"description":"本文是在 Kubernetes 集群中，使用 Envoy 来做 mesh，来为一个简单的使用 Python 编写的 Flask 应用程序做反向代理和负载均衡。","image":"https://jimmysong.ioimages/banner/envoyproxy.jpg","objectID":"77ebed2c3f4b441199d0b1dbd356532d","permalink":"https://jimmysong.io/blog/envoy-mesh-in-kubernetes-tutorial/","summary":"本文是在 Kubernetes 集群中，使用 Envoy 来做 mesh，来为一个简单的使用 Python 编写的 Flask 应用程序做反向代理和负载均衡。 注：本教程中的示例来自 envoy-steps ，本文中使用的所有的代码和 YAML 配置见 envoy-tutorial 。 Envoy Mesh架构图 前提条件 使用 kubernetes-vagrant-centos-cluster 部署 kubernetes 集群，","tags":["envoy"],"title":"在 Kubernetes 中使用 Envoy mesh 教程"},{"categories":["service mesh"],"date":1546848687,"description":"本文介绍了 Envoy proxy 的概念，对应的 xDS 的版本以及配置的详细解析。","image":"https://jimmysong.ioimages/banner/envoyproxy.jpg","objectID":"648378fa01ebdd6ae4daae717ade2fbf","permalink":"https://jimmysong.io/blog/envoy-proxy-config-deep-dive/","summary":"Envoy 是 Istio Service Mesh 中默认的 Sidecar，Istio 在 Enovy 的基础上按照 Envoy 的 xDS 协议扩展了其控制平面，在讲到 Envoy xDS 协议之前还需要我们先熟悉下 Envoy 的基本术语。下面列举了 Envoy 里的基本术语及其数据结构解析，关于 Envoy 的详细介绍请参","tags":["envoy"],"title":"Istio 的数据平面 Envoy Proxy 配置详解"},{"categories":["service mesh"],"date":1536633582,"description":"以往有很多文章讲解 Istio 是如何做 Sidecar 注入的，但是没有讲解注入之后 Sidecar 工作的细节。本文将带大家详细了解 Istio 是如何将 Envoy 作为 Sidecar 的方式注入到应用程序 Pod 中，及 Sidecar 是如何做劫持流量的。","image":"https://jimmysong.ioimages/banner/istio-logo.webp","objectID":"07b71b029951bb3924c6c222f5bfc887","permalink":"https://jimmysong.io/blog/envoy-sidecar-injection-in-istio-service-mesh-deep-dive/","summary":"本文最新更新于 2022 年 3 月 7 日。 以往有很多文章讲解 Istio 是如何做 Sidecar 注入的，但是没有讲解注入之后 Sidecar 工作的细节。本文将带大家详细了解 Istio 是如何将 Envoy 作为 Sidecar 的方式注入到应用程序 Pod 中，及 Sidecar 是如何做劫持流量的。 在讲解 Istio 如何","tags":["istio"],"title":"理解 Istio Service Mesh 中 Envoy 代理 Sidecar 注入及流量劫持"},{"categories":["service mesh"],"date":1545820347,"description":"Sidecar proxy 中 Indbound/Outbound 流量处理过程详解。","image":"https://jimmysong.ioimages/banner/istio-logo.webp","objectID":"ccd8a5e6ebf1b31113320288ead4fa6c","permalink":"https://jimmysong.io/blog/envoy-sidecar-routing-of-istio-service-mesh-deep-dive/","summary":"本文以 Istio 官方的 bookinfo 示例 来讲解在进入 Pod 的流量被 iptables 转交给 Envoy sidecar 后，Envoy 是如何做路由转发的，详述了 Inbound 和 Outbound 处理过程。关于流量拦截的详细分析请参考理解 Istio Service Mesh 中 Envoy 代理 Sidecar 注入及流量劫持 。 下面是 Istio 官方提供的 bookinfo 的请求","tags":["istio"],"title":"理解 Istio Service Mesh 中 Envoy Sidecar 代理的路由转发"},{"categories":["kubernetes"],"date":1500477301,"description":"基于实际应用研究。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"2c70178d77c2cb71ba023faf74d45109","permalink":"https://jimmysong.io/blog/exploring-kubernetes-env-with-docker/","summary":"前言 今天创建了两个kubernetes示例应用： k8s-app-monitor-test ：启动server用来产生metrics k8s-app-monitor-agent ：获取metrics并绘图，显示在web上 注：相关的kubernetes应用manifest.yaml文件分","title":"Kubernetes中的服务发现与docker容器间的环境变量传递源码探究"},{"categories":["其他"],"date":1491831540,"description":"本文介绍了开源的微服务管理平台 Fabric8。","image":"https://jimmysong.ioimages/banner/blog-banner.jpg","objectID":"a3189648af79f49d1acb1a0e49fd59f5","permalink":"https://jimmysong.io/blog/fabric8-introduction/","summary":"无意中发现Fabric8 这个对于Java友好的开源微服务管理平台。 其实这在这里发现的Achieving CI/CD with Kubernetes （by Ramit Surana,on February 17, 2017），其实是先在slideshare 上看到的。 fabric8 大家可能以前听过一个叫做","title":"开源微服务管理平台fabric8简介"},{"categories":["其他"],"date":1562332257,"description":"实测推荐使用 Certbot 为网站设置永久免费的 HTTPS 证书，超简单，全程不用五分钟！","image":"https://jimmysong.ioimages/banner/certbot.jpg","objectID":"b06b1be318465ade7a108a72017240fe","permalink":"https://jimmysong.io/blog/free-certificates-with-certbot/","summary":"我的博客从上线第一天起就使用了 HTTPS，用的是 Cloudflare ，直接在其后台配置即可。如果你是用 nginx、apache、haproxy 等服务器来运行自己的网站，给大家推荐 Certbot ，可以自动化来配置 SSL 证书和定时更新。 下","title":"使用 Certbot 为网站设置永久免费的 HTTPS 证书"},{"categories":["云原生"],"date":1513753682,"description":"本文简要介绍了容器技术发展的路径，为何Kubernetes的出现是容器技术发展到这一步的必然选择，而为何Kuberentes又将成为云原生应用的基石。","image":"https://jimmysong.ioimages/banner/cloud-native-blog.jpg","objectID":"27154b53e6a68a6c7b0a91846d1d2799","permalink":"https://jimmysong.io/blog/from-kubernetes-to-cloud-native/","summary":"从Kubernetes到Cloud Native——云原生应用之路，这是我最近在 ArchSummit2017北京站 和 数人云\u0026amp;TalkingData合办的Service Mesh is comming meetup 中分享的话题。 本文简","tags":["Kubernetes","Service Mesh"],"title":"云原生应用之路"},{"categories":["其他"],"date":1562735595,"description":"通过本文你将了解到如何使用 GitHub Webhook 来自动化发布您的网站。","image":"https://jimmysong.ioimages/banner/webhook.jpg","objectID":"fed6cccb2574447568375341b61fd680","permalink":"https://jimmysong.io/blog/github-webhook-website-auto-deploy/","summary":"本文介绍如何为 ServiceMesher.com 网站配置自动化部署的详细说明，通过本文你将了解到： 如何使用 GitHub Webhook 来自动化发布您的网站 如何配置 Nginx 代理根据 URI 请求转发到本地服务器的指定端口 自动发布脚本 使用名为 deploy.sh 的 Shell 脚本编译 Hugo 生成 HTML 文件，并放","title":"使用 GitHub Webhook 实现静态网站自动化部署"},{"categories":["其他"],"date":1654072069,"description":"O'Reilly 宣布将于 6 月 15 日关闭在线学习网站 KataCoda。","image":"https://jimmysong.ioimages/banner/katacoda-rip.jpg","objectID":"638339a1ca922b4120dee3fce20a85dc","permalink":"https://jimmysong.io/blog/goodbye-katacoda/","summary":"近日听闻 O\u0026rsquo;Reilly 将永久关闭在线学习网站 KataCoda，对于广大程序员和学习者来说，这无疑是一件痛心疾首的事情，以后我们再也看不到那只会变成的功夫猫了。 KataCoda 简介 KataCoda 成立于 2016 年，它是一个在线学习平台，提供了上百个","tags":["KataCoda"],"title":"再见 KataCoda！"},{"categories":["云原生"],"date":1529811510,"description":"2018年6月18日 Joe Duffy在他的博客中宣布开源了云原生编程语言Pulumi。","image":"https://jimmysong.ioimages/banner/pulumi.jpg","objectID":"4cf3f5574222dc1484ed87ceef8ae03e","permalink":"https://jimmysong.io/blog/hello-pulumi-from-jeo-duffy/","summary":"2018年6月18日 Joe Duffy在他的博客 中宣布开源了云原生编程语言Pulumi 。这是继Ballerina 之后我看到的另一款云原生编程语言，他们之间有一些共同的特点，例如都是为了支持多种云环境，基于不","title":"云原生编程语言Pulumi开源宣言"},{"categories":["云原生"],"date":1505478767,"description":"Kevin Hoffman address that 15 Factors of Cloud Native.","image":"https://jimmysong.ioimages/banner/blog-banner.jpg","objectID":"1ea74dcb21a7e6fbda1d7ed89565a75a","permalink":"https://jimmysong.io/blog/high-level-cloud-native-from-kevin-hoffman/","summary":"Kevin Hoffman(From Capital One, twitter @KevinHoffman ) was making a speech on TalkingData T11 Smart Data Summit. Kevin Hoffman Talking on T11 He addressed that 15 Factors of Cloud Native which based on Heroku\u0026rsquo;s original Twelve-Factor App , but he add more 3 another factors on it. Let\u0026rsquo;s have a look at the 15 factors of Cloud Native. 1. One codebase, one App Single version-controlled codebase, many deploys Multiple apps should not share code Microservices need separate release schedules Upgrade, deploy one without impacting others Tie build and deploy pipelines to single codebase 2. API first Service ecosystem requires a","title":"High Level Cloud Native From Kevin Hoffman"},{"categories":["Istio"],"date":1652595520,"description":"本文将指导你如何在 macOS 上编译 Istio。","image":"https://jimmysong.ioimages/banner/build-istio.jpg","objectID":"cb1e6f2024eba4d0bfd6edf1a022479c","permalink":"https://jimmysong.io/blog/how-to-build-istio/","summary":"本文将指导你如何在 macOS 上编译 Istio 二进制文件和 Docker 镜像。 构建前的准备 在正式开始构建前，参考这篇文档 ，以下是我的构建环境信息： macOS 12.3.1 Darwin AMD64 Docker Desktop 4.8.1(78998) Docker Engine v20.10.14 开始构建 参考这篇文档 编译 Istio。 首先在 GitHub 上 下载 Istio 代码，将代码","tags":["istio"],"title":"如何编译 Istio？"},{"categories":["istio"],"date":1625494920,"description":"本文讲解了调试 Kubernetes 中微服务的三种模式/工具，以及 Istio 的引入为微服务的调试带来的变革。","image":"https://jimmysong.io/images/banner/debug.jpg","objectID":"200d371631a86a888bac85875f092d92","permalink":"https://jimmysong.io/blog/how-to-debug-microservices-in-kubernetes-with-proxy-sidecar-or-service-mesh/","summary":"Kubernetes 可以说是目前为止用来运行微服务的最佳载体，但是在调试 Kubernetes 环境中的微服务时的体验可能就没那么友好了。本文将带你了解如何调试 Kubernetes 中的微服务，介绍常用的工具，以及 Istio 的引入为微服务的调试带来的变革。 调试微服务与","tags":["istio","service mesh","telepresence","nocalhost"],"title":"如何调试 Kubernetes 中的微服务 ——proxy、sidecar 还是 service mesh？"},{"categories":["Istio"],"date":1656584869,"description":"本文将带你一步一步在 Istio 中集成 SPIRE 身份认证。","image":"https://jimmysong.ioimages/banner/auth.jpg","objectID":"17c6de9bf7868e764eff644ce6df5be4","permalink":"https://jimmysong.io/blog/how-to-integrate-spire-with-istio/","summary":"读者须知 SPIRE 支持是 Istio 1.14 的新特性，请确保安装 1.14 及以上版本的 Istio。 安装 Istio 到 GitHub 上下载 Istio 安装包，解压后，建议使用 istioctl 安装 Istio。 istioctl install --set profile=demo 如果你安装了低于 1.14 版本的 Istio，请先升级 Istio。 安装 SPIRE 我们","tags":["Istio","How-to","SPIRE","SPIFFE","零信任","安全","身份","身份认证"],"title":"如何在 Istio 中集成 SPIRE？"},{"categories":["Service Mesh"],"date":1604306607,"description":"将基于虚拟机的工作负载更好地集成到服务网格中，是 Istio 团队今年的一大重点。Tetrate 还通过其产品 Tetrate Service Bridge 提供了无缝的多云连接、安全性和可观察性，包括针对虚拟机的。本文将带您了解为什么 Istio 需要与虚拟机整合，以及如何整合。","image":"https://jimmysong.ioimages/banner/istio-logo.webp","objectID":"ac0050ad556dd1bfce8bbaa866099d4e","permalink":"https://jimmysong.io/blog/how-to-integrate-virtual-machines-into-istio-service-mesh/","summary":"Istio 是目前最流行的服务网格，用于连接、保护、控制和观察服务。当其 2017 年开源时，Kubernetes 已赢得容器编排之战，Istio 为了满足组织转向微服务的需求。虽然 Istio 声称支持异构环境，如 Nomad、Cons","tags":["istio"],"title":"如何在 Istio Service Mesh 中集成虚拟机？"},{"categories":["其他"],"date":1509116143,"description":"如何翻译一本外文书，从图书引进到翻译出版全攻略。","image":"https://jimmysong.ioimages/banner/blog-banner.jpg","objectID":"475dc444898e18291d3c6be0183a8514","permalink":"https://jimmysong.io/blog/how-to-translate-a-book/","summary":"截止本文发稿时，笔者是以下两本云原生图书的译者： Cloud Native Go ：已由电子工业出版社出版 Cloud Native Python ：正在翻译中 同时我还参与了 Kubernetes 、Istio 的文档翻译，撰写了开源电子书 kubernetes-handbook ，下面是我本人在翻译过程中的的一些心得。 说明：","title":"如何翻译一本外文书"},{"categories":["Kubernetes"],"date":1509102659,"description":"Nginx ingress 使用ConfigMap来管理Nginx配置，nginx是大家熟知的代理和负载均衡软件，比起Traefik来说功能更加强大，我们使用helm来部署，chart保存在私有的仓库中。","image":"https://jimmysong.ioimages/banner/helm.jpg","objectID":"3439c69b8f3ef72e2b4affa1294d71d1","permalink":"https://jimmysong.io/blog/install-nginx-ingress-with-helm/","summary":"Nginx ingress 使用ConfigMap来管理Nginx配置，nginx是大家熟知的代理和负载均衡软件，比起Traefik 来说功能更加强大，我们使用helm 来部署，chart 保存在私有的仓库中，helm安装使用见使","tags":["helm","kubernetes"],"title":"使用Helm安装Nginx ingress"},{"categories":["云原生"],"date":1526138869,"description":"编译式强类型基于序列图理念的开源编程语言。","image":"https://jimmysong.ioimages/banner/ballerina.jpg","objectID":"50f93241cf7bd13d15c357d5b0ff51ec","permalink":"https://jimmysong.io/blog/introducing-cloud-native-programming-language-ballerina/","summary":"当我第一眼看到 Ballerina 还真有点惊艳的感觉。Ballerina 这个单词的意思是“芭蕾舞女演员”。我想他们之所以给公司和这们语言起这个名字，可能是希望它成为云原生这个大舞台中，Ballerina 能像一个灵活的芭","title":"云原生编程语言Ballerina介绍"},{"categories":["kubernetes"],"date":1493021476,"description":"几种 IP 的来历。","image":"https://jimmysong.ioimages/banner/kubernetes.jpg","objectID":"d88acf73226c555f459c4e3a4fa4f635","permalink":"https://jimmysong.io/blog/ip-and-service-discovry-in-kubernetes/","summary":"Cluster IP 即Service的IP，通常在集群内部使用Service Name来访问服务，用户不需要知道该IP地址，kubedns会自动根据service name解析到服务的IP地址，将流量分发给Pod。 Service Na","title":"Kubernetes中的IP和服务发现体系"},{"categories":["service mesh"],"date":1605832480,"description":"Istio 信守了年初的承诺，从1.1开始，几乎每三个月一个版本，更能体会用户的需求了。此次是2020年的最后一个版本，引入了 WorkloadGroup 和 DNS proxy，对如虚拟机的非 Kubernetes 负载的支持更进了一步。","image":"https://jimmysong.ioimages/banner/istio18.jpg","objectID":"63de50cec85b671cc3fd53553e024453","permalink":"https://jimmysong.io/blog/istio-18-release/","summary":"今天 Istio 1.8 发布了，这是 Istio 在 2020 年发布的最后一个版本，按照 Istio 社区在今年初设定的目标 继续推进，该版本主要有以下更新： 支持使用 Helm 3 进行安装和升级 正式移除了 Mixer 新增了 Istio DNS proxy，透明地拦截应用程序的 DNS 查询，实现","tags":["istio"],"title":"Istio 1.8——用户至上的选择"},{"categories":["service mesh"],"date":1621814400,"description":"今天是 Istio 开源四周年，让我们一起来回顾一下 Istio 四年来的发展并展望一下它的未来。","image":"https://jimmysong.io/images/banner/dream.jpg","objectID":"c4e6b4b4e5827b45719003403dff2958","permalink":"https://jimmysong.io/blog/istio-4-year-birthday/","summary":"Istio 是由 Tetrate 创始人 Varun Talwar 和谷歌首席工程师 Louis Ryan 命名并在 2017 年 5 月 24 日开源。今天是 Istio 开源四周年，让我们一起来回顾一下 Istio 四年来的发展并展望一下它的未来。 Istio 的开源历史 2017 年是 Kubernetes 结束容器编排之战的一年，Google 为了巩","tags":["kubernetes","istio","service mesh"],"title":"Istio 开源四周年回顾与展望"},{"categories":["service mesh"],"date":1523702080,"description":"本文讲述了参与 Istio 社区和进行 Istio 开发时需要注意的事项。","image":"https://jimmysong.ioimages/banner/istio-logo.webp","objectID":"19be5ece36357fd37ebd6dca9a951a10","permalink":"https://jimmysong.io/blog/istio-community-tips/","summary":"本文讲述了参与 Istio 社区和进行 Istio 开发时需要注意的事项。 工作组 绝大多数复杂的开源项目都是以工作组的方式组织的，要想为 Istio 社区做贡献可以加入到以下的工作组（Working Group）： API Management Config Environments Networking Performance \u0026amp; Scalability Policies \u0026amp; Telemetry Security Test","tags":["istio"],"title":"Istio 社区介绍与社区参与注意事项"},{"categories":["Istio"],"date":1651976320,"description":"本文将向你介绍 Istio 控制平面和数据平面的各个端口及功能。","image":"https://jimmysong.ioimages/banner/istio-ports.jpg","objectID":"8ee023b1b7c80c2f0a132f9d31bc8435","permalink":"https://jimmysong.io/blog/istio-components-and-ports/","summary":"在我的前两篇博客中： Istio 中的 Sidecar 注入、透明流量劫持及流量路由过程详解 Sidecar 中的流量类型及 iptables 规则详解 我向你详细介绍了 Istio 数据平面中的流量，但数据平面并不能孤立的存在，本文将向你展示 Istio 中的控制平面和数据平面各组件的","tags":["istio","sidecar"],"title":"Istio 中的各组件端口及功能详解"},{"categories":["Istio"],"date":1650936469,"description":"来自 Tetrate CEO、Istio 联合创始人 Varun Talwar 的解读。","image":"https://jimmysong.ioimages/banner/istio-apply-cncf.jpg","objectID":"b7974b3167345cdf927779f7a709f248","permalink":"https://jimmysong.io/blog/istio-has-applied-to-join-the-cncf/","summary":"在 2022 年 4 月 25 日， IstioCon 2022 开幕的当天，Istio 社区宣布正在申请将项目捐献给 CNCF ，这是 Istio 项目的一个里程碑，企业级服务网格公司 Tetrate 的 CEO/Istio 项目联合创始人 Varun Talwar 对此进行了解读。 以下是来自 Varun 对 Istio 捐献给 CNCF 的解读 。 将 Istio 纳入 CN","tags":["Istio","Tetrate"],"title":"Istio 捐献给 CNCF 意味着什么？"},{"categories":["Istio"],"date":1652354320,"description":"本文将为你讲解 Istio 的 Init 容器、Pod 内部进程及启动过程。","image":"https://jimmysong.ioimages/banner/istio-pod-process-lifecycle.jpg","objectID":"1b468062c27d50fec5bda44cbdc2fc90","permalink":"https://jimmysong.io/blog/istio-pod-process-lifecycle/","summary":"本文将为你讲解： Istio 中 sidecar 自动注入过程 Istio 中的 init 容器启动过程 启用了 Sidecar 自动注入的 Pod 的启动流程 下图中展示了 Istio 数据平面中的 Pod 启动完后的组件。 Istio 数据平面 Pod 内部组件 Istio 中的 sidecar 注入 Istio 中提供了以下两种 sidecar 注入方式： 使用 istioctl 手动","tags":["istio","sidecar"],"title":"Istio 数据平面 Pod 启动过程详解"},{"categories":["service mesh"],"date":1545053855,"description":"本文介绍了 Istio 和 Kubernetes 中的一些服务和流量的抽象模型。","image":"https://jimmysong.ioimages/banner/istio-logo.webp","objectID":"5156a7f021e15427e02f944b6b47d873","permalink":"https://jimmysong.io/blog/istio-service-and-traffic-model/","summary":"本文介绍了 Istio 和 Kubernetes 中的一些服务和流量的抽象模型。虽然 Istio 一开始确定的抽象模型与对接的底层平台无关，但目前来看基本绑定 Kubernetes，本文仅以 Kubernetes 说明。另外在 ServiceMesher 社区 中最近有很多关于 Istio、Envoy","tags":["istio"],"title":"Istio 中的服务和流量的抽象模型"},{"categories":["Istio"],"date":1655296069,"description":"三年磨一剑，云原生社区著《深入理解 Istio —— 云原生服务网格进阶实战》正式上市开售啦！","image":"https://jimmysong.ioimages/banner/istio-book.jpg","objectID":"1dc60d80da75100947fe0c759751cbda","permalink":"https://jimmysong.io/blog/istio-service-mesh-book/","summary":"云原生社区最新力作 —— 《深入理解 Istio》上市开售 2017 年 5 月，Google、IBM 和 Lyft 联合 宣布 将 Istio 开源，不知不觉中距今已5年有余。在这5年多的时间里，Istio 项目从一颗种子长成了参天大树。尤其是在 2018","tags":["Istio","图书","Service Mesh"],"title":"云原生社区著《深入理解 Istio》正式上市开售"},{"categories":["istio"],"date":1628216520,"description":"服务网格与 API 网关之间是什么关系？是不是使用了 Istio 就可以替代了 API 网关？Istio 的 API 网关是如何运作的？有哪些方式暴露 Istio mesh 中的服务？这篇文章给为你解答。","image":"https://jimmysong.io/images/banner/choices.jpg","objectID":"c91e4884c465daf442bdf3c38e566940","permalink":"https://jimmysong.io/blog/istio-servicemesh-api-gateway/","summary":"API 网关作为客户端访问后端的入口，已经存在很长时间了，它主要是用来管理”南北向“的流量；近几年服务网格开始流行，它主要是管理系统内部，即“东西向”流量，而像 Istio 这样的服务网格还内置了网关，从而将系统内外部","tags":["istio","service mesh","kubernetes","api gateway"],"title":"如何理解 Istio Ingress， 它与 API Gateway 有什么区别？"},{"categories":["Istio"],"date":1651893520,"description":"本文将向你展示 Istio sidecar 中的六种流量类型及其 iptables 规则，并以示意图的形式带你一览其全貌。","image":"https://jimmysong.ioimages/banner/mirror.jpg","objectID":"b584854d5fd76194c90f166b6acc77e2","permalink":"https://jimmysong.io/blog/istio-sidecar-traffic-types/","summary":"我在之前的一篇博客中 讲解过 Istio 中 sidecar 的注入、使用 iptables 进行透明流量拦截及流量路由的详细过程，并以 Bookinfo 示例中的 productpage 服务访问 reviews 服务，和 reviews 服务访问 ratings 服务为例绘制了透明流量劫持示意图。在那个示意图中仅展示了 reviews pod 接收流量和","tags":["istio","sidecar","iptables"],"title":"Istio sidecar 中的流量类型及 iptables 规则详解"},{"categories":["service mesh"],"date":1524064847,"description":"本文是 Istio 管理 Java 微服务的案例教程。","image":"https://jimmysong.ioimages/banner/istio-logo.webp","objectID":"e350437a35bae70845ed5dc0fcc17a1e","permalink":"https://jimmysong.io/blog/istio-tutorial/","summary":"本文是 Istio 管理 Java 微服务的案例教程，使用的所有工具和软件全部基于开源方案，替换了 redhat-developer-demos/istio-tutorial 中的 minishift 环境，使用 kubernetes-vagrant-centos-cluster 替代，沿用了原有的微服务示例，使用 Zipkin 做分布式追踪而不是 Jaeger。 本文中的代码和 YAML 文件见 https://github.com/rootsongjc/istio-tutorial 。 准备环境 在","tags":["istio"],"title":"Istio Service Mesh 教程"},{"categories":["service mesh"],"date":1608877120,"description":"本文将为你介绍 Istio 历史上对虚拟机负载的支持情况，尤其是 Istio 1.8 中引入的智能 DNS 代理及 WorkloadGroup 使得虚拟机与容器在资源抽象层面可以等同视之。我将为你展现一幅 Istio 支持虚拟机的波澜壮阔的奥德赛。","image":"https://jimmysong.ioimages/banner/vm.webp","objectID":"c338839d1ab4a9098f3d4875ec8d1d63","permalink":"https://jimmysong.io/blog/istio-vm-odysssey/","summary":"本文将为你介绍 Istio 历史上对虚拟机负载的支持情况，尤其是 Istio 1.8 中引入的智能 DNS 代理及 WorkloadGroup 使得虚拟机与容器在资源抽象层面可以等同视之。我将为你展现一幅 Istio 支持虚拟机的波澜壮阔的奥德赛。 前言 在我之前的博客 中谈到 Istio 1.7 如","tags":["Istio"],"title":"Istio 对虚拟机支持史话"},{"categories":["其他"],"date":1507980766,"description":"2017年10月15日，杭州，一场顶级的 Kubernetes 行业用户落地大会。","image":"https://jimmysong.ioimages/banner/keuc-2017.jpg","objectID":"923faf9829b8ab333fb6d7e730c7bdc2","permalink":"https://jimmysong.io/blog/keuc-china-2017/","summary":"今天有幸受k8smeetup社区邀请来到杭州，参加Kubernetes中国用户大会简称KEUC ，这已经是我第三次来杭州了，算是再续前缘吧！ 其实今年6月19日LinuxCon + ContainerCon + CloudOpen简称","title":"记Kubernetes中国用户大会KEUC2017"},{"categories":["其他"],"date":1542346838,"description":"KubeCon\u0026CloudNativeCon China 2018参会回顾。","image":"https://jimmysong.ioimages/banner/kubecon-shanghai-2018-banner.webp","objectID":"dd69b91349007130a2208b0a344b9937","permalink":"https://jimmysong.io/blog/kubecon-cloudnativecon-china-2018/","summary":"本次大会是一个难得的机会，让我见到了很多朋友，很多都是第一次在线下见面。 KubeCon\u0026amp;CloudNativeCon China 上海 2018 图中由上自下的大合影是：ServiceMesher 社区上海聚首合影；中美日的Kubernetes、Envoy、Isti","title":"KubeCon\u0026CloudNativeCon China 2018"},{"categories":["其他"],"date":1489218327,"description":"这本书中包括很多业界是用案例，比如Netflix和亚马逊。有兴趣的话大家一起看看讨论一下。","image":"https://jimmysong.ioimages/banner/microservices-book.jpg","objectID":"2eccef25135e8bb2f18786d1ae84428e","permalink":"https://jimmysong.io/blog/microservice-reading-notes/","summary":"最近在看 《微服务设计（Sam Newman著）》 这本书。作者是 ThoughtWorks 的Sam Newman。这本书中包括很多业界是用案例，比如 Netflix 和 亚马逊。有兴趣的话大家一起看看讨论一下。😄 P.S 这本书比较偏理论，另外还有一本中国","tags":["图书"],"title":"微服务设计读书笔记"},{"categories":["其他"],"date":1598833637,"description":"今天是我在蚂蚁的最后一天，明天我就要在 Tetrate 开始新的学期了。","image":"https://jimmysong.io/images/banner/new-beginning.jpg","objectID":"e9752495932f7d7bf8e878396816af4b","permalink":"https://jimmysong.io/blog/moving-on-from-ant-group/","summary":"今天是我加入蚂蚁的第 914 天，也是在蚂蚁 的最后一天，明天就是 9 月 1 日了，这一天通常都是学校开学的日子，在阿里巴巴大家都以”同学”相称，明天我将加入 Tetrate ，这也算开始我的新学期吧！ 蚂蚁/阿里巴巴与云原生社区 迄今","title":"新的开始——告别蚂蚁，加入 Tetrate"},{"categories":["istio"],"date":1626099720,"description":"这篇文章将带你了解使用 Kubernetes 和 Istio Service Mesh 构建多集群及混合云的过程和需要考虑的问题。","image":"https://jimmysong.io/images/banner/target.jpg","objectID":"122ec3e2bf50865c2c960c4a37b4e869","permalink":"https://jimmysong.io/blog/multicluster-management-with-kubernetes-and-istio/","summary":"这篇文章将带你了解使用 Kubernetes 和 Istio Service Mesh 构建多集群及混合云的过程和需要考虑的问题。 Kubernetes 使用 Kubernetes 可以快速部署一个分布式环境，实现了云的互操作性，统一了云上的控制平面。并提供了 Service、Ingress 和 Gateway 等资源","tags":["istio","service mesh","kubernetes","tsb","multicluster"],"title":"服务网格之旅——使用 Kubernetes 和 Istio Service Mesh 构建混合云"},{"categories":["云原生"],"date":1603001920,"description":"这篇文章将助于各位有志于从事云原生领域工作或需要了解该领域背景的人群快速入门 Kubernetes 和云原生。","image":"https://jimmysong.ioimages/banner/beginner.jpg","objectID":"0b7489b21672384c0eb06e9eb5d9e08d","permalink":"https://jimmysong.io/blog/must-read-for-cloud-native-beginner/","summary":"为什么写这篇文章 看到这个标题后，大家可能会问“都已经 2020 年了，Kubernetes 开源有 6 年时间了，为什么还要写一篇 Kubernetes 入门的文章？”我想说的是，Kubernetes 还远远没有达到我们想象的那么普及。众多","tags":["云原生","Kubernetes","Docker","Service Mesh"],"title":"云原生初学者入门必读"},{"categories":["云原生"],"date":1587536320,"description":"本文是对 OAM 及 Rudr 的初探，主要介绍了 OAM 诞生的背景和要解决的问题，同时介绍了它在云原生生态中的作用。","image":"https://jimmysong.ioimages/banner/oam.png","objectID":"155052d65104ec0837ab28dd2a8e322d","permalink":"https://jimmysong.io/blog/oam-intro/","summary":"OAM（Open Application Model） 是阿里巴巴和微软共同开源的云原生应用规范模型，同时开源了基于 OAM 的实现 Rudr ，自 2019 年 10 月宣布开源以来截止本文发稿已经有快半年时间了。 当前可能大部分人才刚刚开始了解 OAM，所以这","tags":["oam"],"title":"OAM（开放应用模型）——定义云原生应用标准的野望"},{"categories":["开源"],"date":1555744569,"description":"很多从事开源人可能会注意到有些开源项目要求贡献者在提交 PR 前首先签署 CLA。","image":"https://jimmysong.ioimages/banner/open-source.jpg","objectID":"332a6a7ec12aee7482b8590fddda264e","permalink":"https://jimmysong.io/blog/open-source-cla/","summary":"很多从事开源人可能会注意到有些开源项目要求贡献者在提交 PR 前首先签署 CLA，只有签署了 CLA 之后 PR 才可以合并。 开源贡献协议简介 下面列举了开源贡献协议的一些简介： 开源贡献协议有 CLA（Contributor License","title":"开源社区贡献者协议CLA介绍"},{"categories":["开源"],"date":1559988799,"description":"本文是开源软件合规实践的,介绍开源软件合规的流程及建议。","image":"https://jimmysong.ioimages/banner/open-source.jpg","objectID":"53f92c79b2fbb882cd50bd1e55904d22","permalink":"https://jimmysong.io/blog/open-source-compliance-practices/","summary":"总体概述 开源软件合规（Compliance）实践，从狭义上讲就是企业使用开源软件许可证（License）的合规。Recommended Open Source Compliance Practices for the Enterprise 电子书（共32 页）由 Ibrahim Haddad 博士撰写，本书从以下几个角度","title":"开源软件合规实践"},{"categories":["其他"],"date":1654136869,"description":"推荐一个 PingCAP 推出的 OSSInsight.io 网站，可以根据 GitHub 上的事件，提供开源软件洞察，这个项目本身也开源在 GitHub 上。","image":"https://jimmysong.io/images/banner/oss-insight.jpg","objectID":"bbfaa7c6b3fb5e7b6dce86fc34829b53","permalink":"https://jimmysong.io/blog/oss-insight/","summary":"不知道大家听说没有 PingCAP 推出的一个 OSSInsight.io 网站，可以根据 GitHub 上的事件，提供开源软件洞察，这个项目也开源在 GitHub 上。它可以提供以下方面的洞察能力，有点类似于 Google Analytics、Trends： 比较 GitHub 仓库历史 Star 趋势图 开发","tags":["开源","GitHub"],"title":"开源项目千千万，如何发现好项目？"},{"categories":["其他"],"date":1491136020,"description":"Google Guetzli和基于AI的Deep Photo Style Transfer。","image":"https://jimmysong.ioimages/banner/guetzli.jpg","objectID":"14fbfa5944b459c2861188002beb3d84","permalink":"https://jimmysong.io/blog/picture-process/","summary":"如果你看过美剧「硅谷」会记得剧中主角们所在的创业公司PiedPipper ，他们就是靠自己发明的视频压缩算法来跟大公司Hooli竞争的，这部剧现在已经发展到第4季，在腾讯视频 上可以免费观看。 最近关注了两","title":"两款开源图片处理工具对比"},{"categories":["云原生"],"date":1591006399,"description":"Kubernetes 的次世代在于解决 Kubernetes 生态的碎片化问题。","image":"https://jimmysong.ioimages/banner/cloud-native-era.webp","objectID":"1c364fbc2e3361e090e07e661ee23954","permalink":"https://jimmysong.io/blog/post-kubernetes-era/","summary":"Kubernetes 自开源至今已经走过六个年头了，云原生时代 也已到来，我关注云原生领域也四年有余了，最近开始思考云原生的未来走向，特此撰写本文作为《云原生应用白皮书》 的开篇，更多关于云原生应用的介绍请转到白皮书中浏览。","tags":["Kubernetes","云原生"],"title":"Kubernetes 次世代的云原生应用"},{"categories":["service mesh"],"date":1641892610,"description":"本文带您回顾了 2021 年服务网格的发展。","image":"https://jimmysong.ioimages/banner/y2021.jpg","objectID":"30f4305b32a7b952610d91c06302dfee","permalink":"https://jimmysong.io/blog/service-mesh-2021/","summary":"随着服务网格架构理念的深入人心，它的适用场景也慢慢为众人所了解，社区中也不乏争论，甚至是质疑的声音。笔者以在云原生和服务网格社区中多年的观察，将从亲历者的角度总结服务网格在 2021 年的进展。因为当前在国内 Istio","tags":["service mesh"],"title":"服务网格 2021 年终盘点：实用当先，生态为本"},{"categories":["service mesh"],"date":1546951844,"description":"顺便对比了下 Linkerd 和 Envoy，给读者一些我自己的建议。","image":"https://jimmysong.ioimages/banner/blog-banner.jpg","objectID":"a00eb20c25b763239b8967c87050ddcd","permalink":"https://jimmysong.io/blog/service-mesh-in-action-by-yangzhangxian-review/","summary":"最近在回顾 Service Mesh 技术在2018年的发展，想再看看 Linkerd，正好杨彰显的这本《Service Mesh 实战——基于 Linkerd 和 Kubernetes 的微服务实践》上市发售了，机械工业出版社的编辑送了我一本，🙏杨福川编辑，我看了下抽空写","tags":["图书"],"title":"《Service Mesh 实战—基于 Linkerd 和 Kubernetes 的微服务实践》读后感"},{"categories":["Service Mesh"],"date":1637657007,"description":"本文探讨了服务网格和云原生的关系，社区发展现状，开源生态，及未来发展。","image":"https://jimmysong.ioimages/banner/talk.jpg","objectID":"485d2ce7c5514fed15a9eb588b0af7b3","permalink":"https://jimmysong.io/blog/service-mesh-insight/","summary":"本文根据 2021 年 11 月 22 日晚我应极客邦邀请在「极客时间训练营」的直播分享《云原生漫谈：聊聊 Service Mesh 的现状》整理而成。 本来极客时间是想邀请我分享云原生的，但我觉得那个范围太大，在一次分享中只能泛泛而谈，无法聚焦到","tags":["istio","slime","aeraki"],"title":"服务网格现状之我见"},{"categories":["Service Mesh"],"date":1585713364,"description":"本文是以前所写内容的重新修订并收录于 ServiceMesher 社区的 Istio Handbook 中，其他章节仍在编纂中。","image":"https://jimmysong.ioimages/banner/era.webp","objectID":"1ff4f6fa0ef39a9952d178acef4caba2","permalink":"https://jimmysong.io/blog/service-mesh-the-microservices-in-post-kubernetes-era/","summary":"如果你刚听说 Service Mesh 不久，并试用过 Istio 的话，那么你可能都会有下面几个疑问： 为什么 Istio 要运行在 Kubernetes 上呢？ Kubernetes 和 Service Mesh 分别在云原生中扮演什么角色？ Istio 扩展了 Kubernetes 的哪些方面？解决了哪些问题？ Kubernetes、xDS 协议（","tags":["istio"],"title":"Service Mesh——后 Kubernetes 时代的微服务"},{"categories":["Istio"],"date":1652360939,"description":"本文基于 Istio 1.13 版本，介绍了 sidecar 模式及其优势 sidecar 如何注入到数据平面，Envoy 如何做流量劫持和路由转发的，包括 Inbound 流量和 Outbound 流量。","image":"https://jimmysong.ioimages/banner/istio-sidecar-iptables.jpg","objectID":"89a487babf4c0feef0b2156bc89150ab","permalink":"https://jimmysong.io/blog/sidecar-injection-iptables-and-traffic-routing/","summary":"本文最早是基于 Istio 1.11 撰写，之后随着 Istio 的版本陆续更新，最新更新时间为 2022 年 5 月 12 日，关于本文历史版本的更新说明请见文章最后。本文记录了详细的实践过程，力图能够让读者复现，因此事无巨细，想要理解某个部分过程的","tags":["istio","iptables","envoy","sidecar"],"title":"Istio 中的 Sidecar 注入、透明流量劫持及流量路由过程详解"},{"categories":["Service Mesh"],"date":1637736207,"description":"本文介绍的是由网易数帆微服务团队开源的一款基于 Istio 的智能网格管理器 Slime。","image":"https://jimmysong.ioimages/banner/slime.jpg","objectID":"98be206e1e648bf0f2f645a55aafe374","permalink":"https://jimmysong.io/blog/slime-intro/","summary":"最近我在研究 Istio 生态中的开源项目，Slime 这个项目开源与 2021 年初，是由网易数帆微服务团队开源的一款基于 Istio 的智能网格管理器。Slime 基于 Kubernetes Operator 实现，可作为 Istio 的 CRD 管理器，无须对 Istio 做任何定制化改造，就可以定义","tags":["istio","slime","envoy","service mesh"],"title":"网易开源 Istio 扩展项目 Slime 简介——基于 Istio 的智能服务网格管理器"},{"categories":["service mesh"],"date":1531734498,"description":"蚂蚁集团开源SOFAMesh—一款基于Istio改进和扩展而来的Service Mesh大规模落地实践方案。","image":"https://jimmysong.ioimages/banner/open-source.jpg","objectID":"e236ea1cb65cee6e22053c9c8e673443","permalink":"https://jimmysong.io/blog/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/","summary":"4月，蚂蚁集团自主研发的分布式中间件（Scalable Open Financial Architecture，以下简称 SOFA ）启动开源计划，并开放多个组件，（相关背景请点击链接阅读《开源 |蚂蚁集团启动分布式中间件开源计划，用于快速","title":"蚂蚁集团开源SOFAMesh"},{"categories":["其他"],"date":1543575995,"description":"今天给大家分享的是《软件定义交付宣言》，该宣言发出已经有一周多时间了，还在联署签名中。","image":"https://jimmysong.ioimages/banner/sdd.jpg","objectID":"66462eec6c9bf37aebdfa688fce69787","permalink":"https://jimmysong.io/blog/software-defined-delivery-manifesto/","summary":"今天给大家分享的是《软件定义交付宣言》，该宣言发出已经有一周多时间了，目前该宣言的官方网站（https://sdd-manifesto.org/ 已停止维护）还在联署签名中。 云原生通过不可变基础设施与声","title":"软件定义交付（SDD）宣言"},{"categories":["开源"],"date":1650878210,"description":"本文介绍了企业级服务网格公司 Tetrate 的几个围绕服务网格领域的开源项目。","image":"https://jimmysong.ioimages/banner/open.jpg","objectID":"4137eb9a1c29fa8815359c69adacb498","permalink":"https://jimmysong.io/blog/tetrate-open-source-projects/","summary":"Tetrate 是企业级服务网格领域的主要玩家之一，是 Istio、Envoy 和 SkyWalking 开源项目的发起者或主要参与者。本文将向你介绍 Tetrate 发起的几个开源项目： Tetrate Istio Distro/GetMesh ：Tetrate Istio 发行版 wazero ：使用 Go 语言编写的无需平依赖性的 WebAssembly 运","tags":["tetrate"],"title":"Tetrate 公司开源项目介绍"},{"categories":["kubernetes"],"date":1540300867,"description":"本文是对 Kubernetes 项目联合创始人 Brendan Burns 新书 Managing Kubernetes 介绍并发表了我个人对本书的评论。","image":"https://jimmysong.ioimages/banner/managing-kubernetes.jpg","objectID":"acc1eadd45d0155b522fa97a75b9550e","permalink":"https://jimmysong.io/blog/the-book-managing-kubernetes-by-brendan-burns/","summary":"Managing Kubernetes - Operating Kubernetes Cluster in the Real World 《管理 Kubernetes ——运维真实的 Kubernetes 集群》这本书的作者是： Brendan Burns：Kubernetes 项目的三位联合创始人之一，现就职于微软 Azure。 Craig Tracey：Heptio 公司的工程师，也是本书","tags":["图书"],"title":"图书 Managing Kubernetes 介绍及评论"},{"categories":["Istio"],"date":1652329120,"description":"本文将为大家简单介绍下 iptbles，其中的表及执行顺序。","image":"https://jimmysong.ioimages/banner/iptables.jpg","objectID":"383e9da990784923cc284eede5c347a3","permalink":"https://jimmysong.io/blog/understanding-iptables/","summary":"iptables 作为 Linux 内核中的重要功能，有着广泛的应用，在 Istio 中默认就是利用 iptables 做透明流量劫持的。理解 iptables，对于我们理解 Istio 的运作有十分重要的作用。本文将为大家简单介绍下 iptbles。 iptables 简介 iptables 是 Linux 内核中的防","tags":["iptables"],"title":"理解 iptalbes"},{"categories":["其他"],"date":1488976808,"description":"我在一年内使用Vagrant的心路历程。","image":"https://jimmysong.ioimages/banner/vagrant.jpg","objectID":"d2cd1bd14245295314c85a2d20340c5f","permalink":"https://jimmysong.io/blog/vagrant-intro/","summary":"起源 久闻Vagrant大名，之前经常看到有开源项目使用它作为分布式开发的环境配置。 因为今天在看contiv 正好里面使用vagrant搭建的开发测试环境，所以顺便了解下。它的Vagrantfile 文件中","tags":["vagrant"],"title":"Vagrant从使用到放弃再到掌握完全指南"},{"categories":["Service Mesh"],"date":1505915764,"description":"本文介绍了 Service Mesh 是什么，其工作原理并提供了一些有用的链接。","image":"https://jimmysong.ioimages/banner/service-mesh.jpg","objectID":"6fdda23fc1958527606457b33205ccb4","permalink":"https://jimmysong.io/blog/what-is-a-service-mesh/","summary":"Service Mesh 又译作 “服务网格”，作为服务间通信的基础设施层。Buoyant 公司的 CEO Willian Morgan 在他的这篇文章 WHAT’S A Service Mesh? AND WHY DO I NEED ONE? 中解释了什么是 Service Mesh，为什么云原生应用需要 Service Mesh。 下面是 Willian Morgan 对 Service Mesh 的解","tags":["istio"],"title":"什么是Service Mesh（服务网格）？"},{"categories":["文化"],"date":1616248564,"description":"在 IstioCon 2021 上，Istio 社区确定了 2021 年的社区的工作重点是 Day-2 Operation，很多人问我这个词是什么意思。我查了下中文互联网上，没有对这个词的解释，我在网上找到了一些解释，我发现大部分文章的源头都指向了这篇 Defining Day-2 Operations。因此，在此我将问翻译一下，同时再加上一些我自己的见解。","image":"https://jimmysong.ioimages/banner/laptop.jpg","objectID":"dcf0431d96c37ef2828bb716c2f679f5","permalink":"https://jimmysong.io/blog/what-is-day-2-operation/","summary":"在 IstioCon 2021 上，Istio 社区确定了 2021 年的社区的工作重点是 Day-2 Operation，很多人问我这个词是什么意思。我查了下中文互联网上，没有对这个词的解释，我在网上找到了一些解释，我发现大部分文章的源头都指向了这","tags":["文化","day2"],"title":"什么是 Day-2 Operation？"},{"categories":["istio"],"date":1619571974,"description":"本文将解释Istio是如何产生的，以及它与Kubernetes的关系。","image":"https://jimmysong.io/images/banner/istio-kubernetes.jpg","objectID":"d4406e4dc933ff76c156c2553558a24d","permalink":"https://jimmysong.io/blog/what-is-istio-and-why-does-kubernetes-need-it/","summary":"Istio 是当前最流行的服务网格实现 ，它是在 Kubernetes 的基础上开发的，它跟 Kubernetes 在云原生应用的生态中拥有着不同的定位。本文不是直接为你介绍 Istio 具有哪些功能，而是先向你介绍 Istio 诞生的历史条件，然后带你从 Kubernetes 与 Istio 的分工开始，了解什","tags":["istio","kubernetes"],"title":"什么是 Istio？为什么 Kubernetes 需要 Istio？"},{"categories":["istio"],"date":1647940610,"description":"2022 年 2 月 Istio 发布 Istio 1.13.0 和 Istio 1.13.1，这篇博客将想你介绍这两个版本中有哪些值得注意的新特性。","image":"https://jimmysong.ioimages/banner/istio-113.jpg","objectID":"1bcbf876e5a0307aa6fcdb35cbf69449","permalink":"https://jimmysong.io/blog/what-is-new-in-istio-1-13/","summary":"2022 年 2 月 Istio 发布 1.13.0 和 1.13.1 ，这篇博客将想你介绍这两个版本中有哪些值得注意的新特性。 Istio 1.13 是 2022 年的第一个版本，不出意外的话，Istio 团队会依然按照每个季度的频率发布新版本。总体来看，这个版本中的新特性包括： 对","tags":["istio","service mesh"],"title":"Istio 1.13 有哪些值得注意的更新？"},{"categories":["其他"],"date":1655900869,"description":"本文向你介绍零信任 —— 什么是零信任，它跟传统网络安全的区别，如何在企业内实施零信任。","image":"https://jimmysong.ioimages/banner/zero-trust.jpg","objectID":"16bbe2c8413e16ea2fc0d9493a40557d","permalink":"https://jimmysong.io/blog/what-is-zero-trust/","summary":"零信任（Zero Trust）是一种安全理念，而不是一种所有安全团队都要遵循的最佳实践。零信任概念的提出是为了给云原生世界带来更安全的网络。零信任是一种理论状态，即网络内的所有消费者都不仅没有任何权限，","tags":["零信任","安全"],"title":"什么是零信任？"},{"categories":["service mesh"],"date":1617755237,"description":"本文将带大家了解 Kubernetes 和 Istio 的内部工作原理。此外，我会介绍 Kubernetes 中的负载均衡方法，并解释为什么有了 Kubernetes 后可能还需要 Istio。","image":"https://jimmysong.io/images/banner/demand.jpg","objectID":"12ba9c7ca2e372f94caeafb4a3f2023d","permalink":"https://jimmysong.io/blog/why-do-you-need-istio-when-you-already-have-kubernetes/","summary":"如果你听说过服务网格，并尝试过 Istio ，你可能有以下问题。 为什么 Istio 要在 Kubernetes 上运行？ Kubernetes 和服务网格在云原生应用架构中分别扮演什么角色？ Istio 扩展了 Kubernetes 的哪些方面？它解决了哪些问题？ Kubernetes、Envoy 和 Istio 之","tags":["kubernetes","istio","service mesh"],"title":"为什么在使用了 Kubernetes 后你可能还需要 Istio？"},{"categories":["Istio"],"date":1655810869,"description":"本文将带你了解 SPIRE 对于零信任架构的意义，以及 Istio 是为什么使用 SPIRE 实现身份认证。","image":"https://jimmysong.ioimages/banner/spiffe.jpg","objectID":"cf3eeedfdf287001d9f07b8d69915744","permalink":"https://jimmysong.io/blog/why-istio-need-spire/","summary":"今年 6 月初，Istio 1.14 发布 ，该版本中最值得关注的特性是新增对 SPIRE 的支持。SPIFFE 和 SPIRE 都是 CNCF 孵化项目，其中 SPIRE 是 SPIFFE 的实现之一。本文将带你了解 SPIRE 对于零信任架构的意义，以及 Istio 是为何使用 SPIRE 实现身份认证。 Kubernetes 中","tags":["Istio","SPIFFE","SPIRE"],"title":"为什么 Istio 要使用 SPIRE 做身份认证？"},{"categories":["service mesh"],"date":1613801560,"description":"本文将向你介绍下一代权限控制模型——NGAC，并对比 ABAC、RABC，说明为什么要选择 NGAC。","image":"https://jimmysong.ioimages/banner/access-control.jpg","objectID":"c72628aecdaf32dff6be6a6c8316904f","permalink":"https://jimmysong.io/blog/why-you-should-choose-ngac-as-your-access-control-model/","summary":"本文为我跟 Ignasi Barrera 共同创作，本文英文版首发于 TheNewStack 。 不同的公司或软件供应商已经设计了无数种方法来控制用户对功能或资源的访问，如酌情访问控制（DAC）、强制访问控制（MAC）、基于角色的访问控制（RBAC）和基","tags":["NGAC","RBAC","ABAC"],"title":"为什么应该选择使用 NGAC 作为权限控制模型"},{"categories":["旅行"],"date":1627705120,"description":"记录我与 Addo 一行七天的房车自驾之旅。","image":"https://jimmysong.ioimages/banner/xinjiang.jpg","objectID":"abcf35a1c04be08d1b0953eff3773ed1","permalink":"https://jimmysong.io/blog/xinjiang-trip/","summary":"在琼库什台村与哈萨克族村民在一起 摄于新疆维吾尔自治区伊犁哈萨克自治州特克斯县琼库什台村，晓辉和我与哈萨克族村民在一起 我欲乘风破浪，踏遍黄沙海洋 与其误会一场，也要不负勇往 ——Jam，《七月上》 今天是七月","tags":["旅行"],"title":"新疆北疆房车自驾之旅"},{"categories":["容器"],"date":1491236344,"description":"基于docker swarm。","image":"https://jimmysong.ioimages/banner/hadoop.png","objectID":"bc1cd4953979435f0b9338e604d15456","permalink":"https://jimmysong.io/blog/yarn-on-docker/","summary":"前言 我已就该话题已在2016年上海Qcon上发表过演讲。另外InfoQ网站上的文字版数据中心的YARN on Docker集群方案 ，即本文。 项目代码开源在Github上：Magpie 当前数据中心存在的问题 数","tags":["hadoop","docker","swarm","yarn"],"title":"容器技术在大数据场景下的应用——YARN on Docker"},{"categories":["其他"],"date":1621952520,"description":"本文将指导你如何配置和使用 OBS + zoom在 Bilibili 上直播。","image":"https://jimmysong.io/images/banner/studio.jpg","objectID":"8d6d62c71e0bd9888e764e76755de63f","permalink":"https://jimmysong.io/blog/zoom-obs-bilibili-broadcast/","summary":"今晚我第一次使用 Zoom + OBS 和马若飞在 B 站上进行了《Istio 大咖说》 栏目的第一期分享——「Istio 开源四周年回顾与展望」。考虑到很多社区、主播、调音台会有在 B 站或其他平台上直播的需求，特别将我的个人经验","tags":["直播","OBS"],"title":"Zoom + OBS + B 站直播配置手册"}]