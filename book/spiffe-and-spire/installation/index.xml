
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – 安装</title>
    <link>https://jimmysong.io/book/spiffe-and-spire/installation/</link>
    <description>Recent content in 安装 on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>Jimmy Song</managingEditor>
    <webMaster>Jimmy Song</webMaster>
    
      <follow_challenge>
        <feedId>51621818828612637</feedId>
        <userId>59800919738273792</userId>
      </follow_challenge>
    
    
    <lastBuildDate>Mon, 23 Oct 2023 00:00:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/book/spiffe-and-spire/installation/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
                                                         
    
                                                   
                           
    <item>
      <title>获取 SPIRE</title>
      <link>https://jimmysong.io/book/spiffe-and-spire/installation/getting-spire/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/book/spiffe-and-spire/installation/getting-spire/</guid>
      <description>
        
        
        &lt;p&gt;本页面描述了一些开始使用 SPIRE 的选项。&lt;/p&gt;
&lt;h2 id=&#34;docker-compose&#34;&gt;Docker Compose&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://spiffe.io/docs/latest/try/spire101/&#34; title=&#34;SPIRE 101&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SPIRE 101&lt;/a&gt; 是一个在 Docker Compose 上运行的 SPIRE 入门介绍&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiffe/spire-tutorials&#34; title=&#34;spire-tutorials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spire-tutorials&lt;/a&gt; 存储库中提供了其他 Docker Compose 演示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SPIRE 没有官方的 Helm chart、Kustomize 文件或自定义资源操作器，但 &lt;a href=&#34;https://spiffe.io/docs/latest/spire/installing/getting-started-k8s/&#34; title=&#34;Kubernetes 快速入门&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 快速入门&lt;/a&gt; 包括一套用于测试 SPIRE Server 和 Agent 的基本 Kubernetes YAML 文件&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spiffe/spire-tutorials&#34; title=&#34;spire-tutorials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;spire-tutorials&lt;/a&gt; 存储库中提供了其他 Kubernetes 演示&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux&#34;&gt;Linux&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SPIRE GitHub &lt;a href=&#34;https://github.com/spiffe/spire/releases&#34; title=&#34;releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;releases&lt;/a&gt; 页面提供了每个 SPIRE 版本的下载链接和变更日志&lt;/li&gt;
&lt;li&gt;spiffe.io 的&lt;a href=&#34;https://spiffe.io/downloads/&#34; title=&#34;获取 SPIRE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;获取 SPIRE&lt;/a&gt; 页面提供了其他下载选项和构建 SPIRE 的说明&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://spiffe.io/docs/latest/spire/installing/getting-started-linux-macos-x/&#34; title=&#34;Linux 和 MacOS X 快速入门&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux 和 MacOS X 快速入门&lt;/a&gt; 介绍了如何下载和测试 SPIRE Server 和 Agent 的简单单节点安装&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;macos&#34;&gt;MacOS&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;没有预编译的 MacOS 可执行文件可用，但 &lt;a href=&#34;https://spiffe.io/docs/latest/spire/installing/getting-started-linux-macos-x/&#34; title=&#34;Linux 和 MacOS X 快速入门&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux 和 MacOS X 快速入门&lt;/a&gt; 介绍了如何下载和构建 SPIRE 以测试 SPIRE Server 和 Agent 的简单单节点安装&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
                           
    <item>
      <title>安装 SPIRE 服务器</title>
      <link>https://jimmysong.io/book/spiffe-and-spire/installation/install-server/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/book/spiffe-and-spire/installation/install-server/</guid>
      <description>
        
        
        &lt;p&gt;本文指导你如何在 Linux 和 Kubernetes 上安装 SPIRE 服务器。&lt;/p&gt;
&lt;h2 id=&#34;步骤-1获取-spire-二进制文件&#34;&gt;步骤 1：获取 SPIRE 二进制文件&lt;/h2&gt;
&lt;p&gt;预构建的 SPIRE 发行版可在 &lt;a href=&#34;https://spiffe.io/downloads/#spire-releases&#34; title=&#34;SPIRE 下载页面&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SPIRE 下载页面&lt;/a&gt;找到。tarball 包含服务器和代理二进制文件。&lt;/p&gt;
&lt;p&gt;如果需要，你也可以&lt;a href=&#34;https://github.com/spiffe/spire/blob/main/CONTRIBUTING.md&#34; title=&#34;从源代码构建 SPIRE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;从源代码构建 SPIRE&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;步骤-2安装服务器和代理&#34;&gt;步骤 2：安装服务器和代理&lt;/h2&gt;
&lt;p&gt;本入门指南描述了如何在同一节点上安装服务器和代理。在典型的生产部署中，服务器将安装在一个节点上，而一个或多个代理将安装在不同的节点上。&lt;/p&gt;
&lt;p&gt;要安装服务器和代理，请执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从 &lt;a href=&#34;https://spiffe.io/downloads/#spire-releases&#34; title=&#34;SPIRE 下载页面&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SPIRE 下载页面&lt;/a&gt;获取最新的 tarball，然后使用以下命令将其解压缩到 &lt;code&gt;/opt/spire&lt;/code&gt; 目录中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/spiffe/spire/releases/download/v1.8.2/spire-1.8.2-linux-amd64-musl.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar zvxf spire-1.8.2-linux-amd64-musl.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo cp -r spire-1.8.2/. /opt/spire/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了方便起见，将 &lt;code&gt;spire-server&lt;/code&gt; 和 &lt;code&gt;spire-agent&lt;/code&gt; 添加到你的 &lt;code&gt;$PATH&lt;/code&gt; 中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ln -s /opt/spire/bin/spire-server /usr/bin/spire-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ln -s /opt/spire/bin/spire-agent /usr/bin/spire-agent
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;步骤-3配置服务器&#34;&gt;步骤 3：配置服务器&lt;/h2&gt;
&lt;p&gt;要在 Linux 上配置服务器，你需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置信任域&lt;/li&gt;
&lt;li&gt;配置服务器证书颁发机构（CA），可能包括配置 UpstreamAuthority 插件&lt;/li&gt;
&lt;li&gt;配置节点认证插件&lt;/li&gt;
&lt;li&gt;配置用于持久化数据的默认 &lt;code&gt;.data&lt;/code&gt; 目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但是，为了简单起见，仅需完成步骤 1、2 和 3 即可快速部署演示目的。&lt;/p&gt;
&lt;p&gt;要配置步骤 1、2 和 4 中的项，请编辑服务器的配置文件，位于 &lt;code&gt;/opt/spire/conf/server/server.conf&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;有关如何配置 SPIRE 的详细信息，请参阅&lt;a href=&#34;https://spiffe.io/docs/latest/spire/using/configuring/&#34; title=&#34;配置 SPIRE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;配置 SPIRE&lt;/a&gt;，特别是节点认证和工作负载认证。&lt;/p&gt;
&lt;p&gt;注意，SPIRE 服务器在修改配置后必须重新启动才能生效。&lt;/p&gt;
&lt;p&gt;请参阅&lt;a href=&#34;https://spiffe.io/docs/latest/spire/installing/install-agents/&#34; title=&#34;安装 SPIRE 代理&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;安装 SPIRE 代理&lt;/a&gt;，了解如何安装 SPIRE 代理。&lt;/p&gt;
&lt;h1 id=&#34;如何在-kubernetes-上安装-spire-服务器&#34;&gt;如何在 Kubernetes 上安装 SPIRE 服务器&lt;/h1&gt;
&lt;p&gt;本节将逐步向你介绍在 Kubernetes 集群中运行服务器并配置工作负载容器以访问 SPIRE 的方法。&lt;/p&gt;
&lt;p&gt;你必须从包含用于配置的 &lt;code&gt;.yaml&lt;/code&gt; 文件的目录中运行所有命令。&lt;/p&gt;
&lt;h2 id=&#34;步骤-1获取所需文件&#34;&gt;步骤 1：获取所需文件&lt;/h2&gt;
&lt;p&gt;要获取所需的.yaml 文件，请克隆 &lt;a href=&#34;https://github.com/spiffe/spire-tutorials&#34; title=&#34;https://github.com/spiffe/spire-tutorials&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/spiffe/spire-tutorials&lt;/a&gt; 并从 &lt;code&gt;spire-tutorials/k8s/quickstart&lt;/code&gt; 子目录复制 &lt;code&gt;.yaml&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h2 id=&#34;步骤-2为-spire-组件配置-kubernetes-命名空间&#34;&gt;步骤 2：为 SPIRE 组件配置 Kubernetes 命名空间&lt;/h2&gt;
&lt;p&gt;按照以下步骤配置部署 SPIRE 服务器和 SPIRE 代理的 spire 命名空间。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;创建命名空间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f spire-namespace.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;运行以下命令，并验证输出中是否列出了&lt;em&gt;spire&lt;/em&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get namespaces
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;步骤-3配置-spire-服务器&#34;&gt;步骤 3：配置 SPIRE 服务器&lt;/h2&gt;
&lt;p&gt;要在 Kubernetes 上配置 SPIRE 服务器，你需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建服务器服务帐户&lt;/li&gt;
&lt;li&gt;创建服务器捆绑包 ConfigMap&lt;/li&gt;
&lt;li&gt;创建服务器 ConfigMap&lt;/li&gt;
&lt;li&gt;创建服务器 StatefulSet&lt;/li&gt;
&lt;li&gt;创建服务器服务&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有关详细信息，请参阅以下各节。&lt;/p&gt;
&lt;h3 id=&#34;创建服务器服务帐户&#34;&gt;创建服务器服务帐户&lt;/h3&gt;
&lt;p&gt;通过应用 server-account.yaml 配置文件来配置名为 spire-server 的服务帐户：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl apply -f server-account.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过运行以下命令确认成功创建，并验证该服务帐户是否出现在以下命令的输出中：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl get serviceaccount --namespace spire
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;创建服务器捆绑包-configmap角色和-clusterrolebinding&#34;&gt;创建服务器捆绑包 ConfigMap、角色和 ClusterRoleBinding&lt;/h3&gt;
&lt;p&gt;为了使服务器能够为代理提供证书以用于在建立连接时验证服务器的身份，服务器需要具备在 spire 命名空间中获取和修补 ConfigMap 对象的功能。&lt;/p&gt;
&lt;p&gt;在这种部署中，代理和服务器共享同一集群，SPIRE 可以配置为定期生成这些证书并将证书内容更新到 ConfigMap 中。为此，服务器需要能够在 Kubernetes RBAC 中获取和修补 ConfigMap 对象。&lt;/p&gt;
&lt;p&gt;通过应用 &lt;code&gt;spire-bundle-configmap.yaml&lt;/code&gt; 配置文件来创建名为 &lt;code&gt;spire-bundle&lt;/code&gt; 的 ConfigMap：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f spire-bundle-configmap.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过运行以下命令确认成功创建，并验证 &lt;code&gt;spire-bundle&lt;/code&gt; ConfigMap 是否列在以下命令的输出中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get configmaps --namespace spire &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep spire
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了允许服务器读取和写入此 ConfigMap，必须创建一个 ClusterRole，授予 Kubernetes RBAC 相应的特权，并将 ClusterRoleBinding 与前一步创建的服务帐户关联。&lt;/p&gt;
&lt;p&gt;通过应用 &lt;code&gt;server-cluster-role.yaml&lt;/code&gt; 配置文件来创建名为 &lt;code&gt;spire-server-trust-role&lt;/code&gt; 的 ClusterRole 和相应的 ClusterRoleBinding：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f server-cluster-role.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过运行以下命令确认成功创建，并验证 &lt;code&gt;spire-server-trust-role&lt;/code&gt; ClusterRole 是否出现在以下命令的输出中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get clusterroles --namespace spire &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep spire
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建服务器-configmap&#34;&gt;创建服务器 ConfigMap&lt;/h3&gt;
&lt;p&gt;服务器在 Kubernetes ConfigMap 中进行配置，该 ConfigMap 在 &lt;code&gt;server-configmap.yaml&lt;/code&gt; 中指定了一些重要的目录，特别是 &lt;code&gt;/run/spire/data和/run/spire/config&lt;/code&gt;。这些卷在部署服务器容器时绑定。&lt;/p&gt;
&lt;p&gt;请参阅&lt;a href=&#34;https://spiffe.io/docs/latest/spire/using/configuring/&#34; title=&#34;配置 SPIRE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;配置 SPIRE&lt;/a&gt;部分，了解如何配置 SPIRE 服务器的详细信息，特别是节点认证和工作负载认证。&lt;/p&gt;
&lt;p&gt;注意，SPIRE 服务器在修改配置后必须重新启动才能生效。&lt;/p&gt;
&lt;p&gt;使用以下命令将服务器 ConfigMap 应用到你的集群：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f server-configmap.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建服务器-statefulset&#34;&gt;创建服务器 StatefulSet&lt;/h3&gt;
&lt;p&gt;通过应用 &lt;code&gt;server-statefulset.yaml&lt;/code&gt; 配置文件来部署服务器：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f server-statefulset.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将在 spire 命名空间中创建一个名为 &lt;code&gt;spire-server&lt;/code&gt; 的 StatefulSet，并启动一个 &lt;code&gt;spire-server&lt;/code&gt; 的 Pod，如以下两个命令的输出所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get statefulset --namespace spire
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME           READY   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spire-server   1/1     86m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get pods --namespace spire
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                           READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spire-server-0                 1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          86m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当你部署服务器时，它会自动在 SPIRE 服务器的 gRPC 端口上配置 livenessProbe，以确保容器的可用性。&lt;/p&gt;
&lt;p&gt;服务器部署时，绑定到以下表中总结的卷：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;卷&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;挂载位置&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;spire-config&lt;/td&gt;
          &lt;td&gt;引用在前一步中创建的 spire-server ConfigMap&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/run/spire/config&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;spire-data&lt;/td&gt;
          &lt;td&gt;服务器的 SQLite 数据库和密钥文件的 hostPath&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/run/spire/data&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;创建服务器服务&#34;&gt;创建服务器服务&lt;/h3&gt;
&lt;p&gt;通过应用 server-service.yaml 配置文件来创建服务器服务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f server-service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过运行以下命令确认成功创建，并验证 spire 命名空间现在是否有一个名为 &lt;code&gt;spire-server&lt;/code&gt; 的服务：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get services --namespace spire
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME           TYPE       CLUSTER-IP      EXTERNAL-IP   PORT&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;S&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;          AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spire-server   NodePort   10.107.205.29   &amp;lt;none&amp;gt;        8081:30337/TCP   88m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
                           
    <item>
      <title>安装 SPIRE 代理</title>
      <link>https://jimmysong.io/book/spiffe-and-spire/installation/install-agent/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/book/spiffe-and-spire/installation/install-agent/</guid>
      <description>
        
        
        &lt;p&gt;本文指导你如何在 Linux 和 Kubernetes 上安装 SPIRE Agent。&lt;/p&gt;
&lt;h2 id=&#34;步骤-1获取-spire-二进制文件&#34;&gt;步骤 1：获取 SPIRE 二进制文件&lt;/h2&gt;
&lt;p&gt;可以在 &lt;a href=&#34;https://spiffe.io/downloads/#spire-releases&#34; title=&#34;SPIRE 下载页面&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SPIRE 下载页面&lt;/a&gt; 找到预构建的 SPIRE 发行版。tarball 包含服务器和 Agent 二进制文件。&lt;/p&gt;
&lt;p&gt;如果愿意，也可以从源代码 &lt;a href=&#34;https://github.com/spiffe/spire/blob/v1.8.2/CONTRIBUTING.md&#34; title=&#34;构建 SPIRE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;构建 SPIRE&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;步骤-2安装服务器和-agent&#34;&gt;步骤 2：安装服务器和 Agent&lt;/h2&gt;
&lt;p&gt;本入门指南描述了如何在同一节点上安装服务器和 Agent。在典型的生产部署中，服务器安装在一个节点上，而一个或多个 Agent 安装在不同的节点上。&lt;/p&gt;
&lt;p&gt;要安装服务器和 Agent：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;从 &lt;a href=&#34;https://spiffe.io/downloads/#spire-releases&#34; title=&#34;SPIRE 下载页面&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SPIRE 下载页面&lt;/a&gt; 获取最新的 tarball，然后使用以下命令将其解压到 &lt;code&gt;/opt/spire&lt;/code&gt; 目录中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/spiffe/spire/releases/download/v1.8.2/spire-1.8.2-linux-amd64-musl.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tar zvxf spire-1.8.2-linux-amd64-musl.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo cp -r spire-1.8.2/. /opt/spire/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了方便起见，将 &lt;code&gt;spire-server&lt;/code&gt; 和 &lt;code&gt;spire-agent&lt;/code&gt; 添加到 &lt;code&gt;$PATH&lt;/code&gt; 中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ln -s /opt/spire/bin/spire-server /usr/bin/spire-server
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ln -s /opt/spire/bin/spire-agent /usr/bin/spire-agent
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;步骤-3配置-agent&#34;&gt;步骤 3：配置 Agent&lt;/h2&gt;
&lt;p&gt;安装 SPIRE Agent 后，需要根据你的环境进行配置。有关如何配置 SPIRE 的详细信息，请参阅 &lt;a href=&#34;https://spiffe.io/docs/latest/spire/using/configuring/&#34; title=&#34;配置 SPIRE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;配置 SPIRE&lt;/a&gt;，特别是节点验证和工作负载验证。&lt;/p&gt;
&lt;p&gt;请注意，SPIRE Agent 在修改其配置后必须重新启动，以使更改生效。&lt;/p&gt;
&lt;p&gt;如果尚未安装 SPIRE Server，请参阅 &lt;a href=&#34;../install-server/&#34; title=&#34;安装 SPIRE Server&#34;&gt;安装 SPIRE Server&lt;/a&gt; 了解如何安装 SPIRE Server。&lt;/p&gt;
&lt;h2 id=&#34;在-kubernetes-上安装-spire-agents&#34;&gt;在 Kubernetes 上安装 SPIRE Agents&lt;/h2&gt;
&lt;p&gt;必须从包含用于配置的 .yaml 文件的目录中运行所有命令。有关详细信息，请参阅 SPIRE Server 安装指南的 &lt;a href=&#34;https://spiffe.io/docs/latest/spire/installing/install-server/#section-1&#34; title=&#34;Obtain the Required Files&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Obtain the Required Files&lt;/a&gt; 部分。&lt;/p&gt;
&lt;p&gt;要在 Kubernetes 上安装 SPIRE Agents，你需要执行以下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建 Agent 服务账号&lt;/li&gt;
&lt;li&gt;创建 Agent ConfigMap&lt;/li&gt;
&lt;li&gt;创建 Agent DaemonSet&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有关详细信息，请参阅以下各节。&lt;/p&gt;
&lt;h3 id=&#34;步骤-1创建-agent-服务账号&#34;&gt;步骤 1：创建 Agent 服务账号&lt;/h3&gt;
&lt;p&gt;将 &lt;code&gt;agent-account.yam&lt;/code&gt;l 配置文件应用于在 spire 命名空间中创建名为 spire-agent 的服务账号：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f agent-account.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为了允许代理读取 kubelet API 以执行工作负载验证，必须创建一个 ClusterRole，授予 Kubernetes RBAC 适当的权限，并将 ClusterRoleBinding 关联到上一步创建的服务账号。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过应用 &lt;code&gt;agent-cluster-role.yaml&lt;/code&gt; 配置文件来创建名为 &lt;code&gt;spire-agent-cluster-role&lt;/code&gt; 的 ClusterRole 和相应的 ClusterRoleBinding：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f agent-cluster-role.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;为了确认成功创建，请验证 ClusterRole 是否出现在以下命令的输出中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get clusterroles --namespace spire &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep spire
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;步骤-2创建-agent-configmap&#34;&gt;步骤 2：创建 Agent ConfigMap&lt;/h3&gt;
&lt;p&gt;将 &lt;code&gt;agent-configmap.yaml&lt;/code&gt; 配置文件应用于创建代理 ConfigMap。这将作为 &lt;code&gt;agent.conf&lt;/code&gt; 文件挂载，用于确定 SPIRE Agent 的配置。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f agent-configmap.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;agent-configmap.yaml&lt;/code&gt; 文件指定了许多重要的目录，特别是 &lt;code&gt;/run/spire/sockets&lt;/code&gt; 和 &lt;code&gt;/run/spire/config&lt;/code&gt;。这些目录在部署代理容器时绑定。&lt;/p&gt;
&lt;p&gt;请参阅 &lt;a href=&#34;https://spiffe.io/docs/latest/spire/using/configuring/&#34; title=&#34;配置 SPIRE&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;配置 SPIRE&lt;/a&gt; 部分，详细了解如何配置 SPIRE Agent，特别是节点验证和工作负载验证。&lt;/p&gt;
&lt;p&gt;请注意，一旦修改了 SPIRE Agent 的配置，必须重新启动该 Agent 才能使更改生效。&lt;/p&gt;
&lt;h3 id=&#34;步骤-3创建-agent-daemonset&#34;&gt;步骤 3：创建 Agent DaemonSet&lt;/h3&gt;
&lt;p&gt;代理以 DaemonSet 形式部署，每个 Kubernetes 工作节点上运行一个代理。&lt;/p&gt;
&lt;p&gt;通过应用 &lt;code&gt;agent-daemonset.yaml&lt;/code&gt; 配置来部署 SPIRE 代理。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl apply -f agent-daemonset.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将在 spire 命名空间中创建一个名为 spire-agent 的 DaemonSet，并在 spire-server 旁边启动一个 spire-agent pod，如以下两个命令的输出所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get daemonset --namespace spire
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME          DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spire-agent   &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;       &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;            &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;           &amp;lt;none&amp;gt;          6m45s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get pods --namespace spire
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                           READY   STATUS    RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spire-agent-88cpl              1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          6m45s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;spire-server-0                 1/1     Running   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          103m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;当代理部署时，绑定以下表格中总结的卷：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;卷&lt;/th&gt;
          &lt;th&gt;描述&lt;/th&gt;
          &lt;th&gt;挂载位置&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;spire-config&lt;/td&gt;
          &lt;td&gt;在步骤 2 中创建的 spire-agent configmap。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/run/spire/config&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;spire-sockets&lt;/td&gt;
          &lt;td&gt;hostPath，将与在同一工作节点上运行的所有其他 pod 共享。它包含一个 UNIX 域套接字，用于工作负载与代理 API 通信。&lt;/td&gt;
          &lt;td&gt;&lt;code&gt;/run/spire/sockets&lt;/code&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
  </channel>
</rss>
