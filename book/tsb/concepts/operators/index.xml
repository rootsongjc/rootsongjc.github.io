<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song&#39;s Cloud Native Blog – TSB Operator</title>
    <link>https://jimmysong.io/book/tsb/concepts/operators/</link>
    <description>Recent content in TSB Operator on Jimmy Song&#39;s Cloud Native Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 09 Aug 2023 12:00:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/book/tsb/concepts/operators/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>管理平面</title>
      <link>https://jimmysong.io/book/tsb/concepts/operators/management-plane/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/tsb/concepts/operators/management-plane/</guid>
      <description>
        
        
        &lt;p&gt;本页深入介绍了 TSB Operator 如何配置管理平面组件，并概述了 TSB Operator 管理的各种组件。&lt;/p&gt;
&lt;p&gt;TSB Operator 配置为监督管理平面组件的生命周期，主动监视部署的同一命名空间内的 &lt;code&gt;ManagementPlane&lt;/code&gt; 自定义资源 (CR)。默认情况下，管理平面驻留在 &lt;code&gt;tsb&lt;/code&gt; 命名空间中。你可以参阅&lt;a href=&#34;../../../refs/install/managementplane/v1alpha1/spec&#34; title=&#34;管理平面安装 API&#34;&gt;管理平面安装 API&lt;/a&gt;
 参考文档，了解有关自定义资源 API 的全面详细信息。&lt;/p&gt;
&lt;h2 id=&#34;组件&#34;&gt;组件&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/tsb/concepts/operators/management-plane/management-plane-operator.svg&#34; data-img=&#34;/book/tsb/concepts/operators/management-plane/management-plane-operator.svg&#34; alt=&#34;image&#34; data-caption=&#34;&#34;&gt;
    
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;以下是你可以使用管理平面 Operator 配置和管理的各种类型的自定义组件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;组件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Service&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Deployment&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Cronjobs&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;apiServer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;tsb&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;tsb&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;teamsync&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;iamServer&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;iam&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;iam&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;webUI&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;web&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;web&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;frontEnvoy&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;envoy&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;envoy&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;oap&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;oap&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;oap&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;collector&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;otel-collector&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;otel-collector&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcpOperator&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcp-operator-central&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcp-operator-central&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcpCentral&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcp-central&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;central&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mpc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mpc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;mpc&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Operator 配置并安装以下组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apiServer：TSB API 服务器，负责：
&lt;ul&gt;
&lt;li&gt;管理用户创建的服务网格配置&lt;/li&gt;
&lt;li&gt;将服务网格配置推送到控制平面集群&lt;/li&gt;
&lt;li&gt;管理从控制平面集群推送的集群信息&lt;/li&gt;
&lt;li&gt;加强用户操作授权&lt;/li&gt;
&lt;li&gt;存储操作审计日志&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;frontEnvoy：充当管理平面的入口网关。&lt;/li&gt;
&lt;li&gt;iamServer：管理用户和 TSB 代理令牌身份验证。&lt;/li&gt;
&lt;li&gt;webUI：TSB UI 服务器。&lt;/li&gt;
&lt;li&gt;oap：为 TSB UI 提供 GraphQL 查询并聚合跨集群指标。&lt;/li&gt;
&lt;li&gt;收集器：一个开放遥测收集器，从管理和控制平面组件收集指标并通过 Prometheus 指标端点公开它们。&lt;/li&gt;
&lt;li&gt;xcpOperator：控制平面 Operator，管理管理平面所需的控制平面组件。&lt;/li&gt;
&lt;li&gt;xcpCentral：控制平面的核心组件，管理平面使用它来向每个集群分发配置并接收有关每个集群状态的信息。&lt;/li&gt;
&lt;li&gt;mpc：apiServer 和 xcpCentral 之间的配置转换组件。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  演示安装
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  在演示安装过程中，TSB Operator 还设置 PostgreSQL 和 Elasticsearch 组件。但是，这些仅用于演示目的，Tetrate 不支持用于生产环境或深入的系统评估。
&lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>控制平面</title>
      <link>https://jimmysong.io/book/tsb/concepts/operators/control-plane/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/tsb/concepts/operators/control-plane/</guid>
      <description>
        
        
        &lt;p&gt;本页面深入介绍了 TSB Operator 如何管理控制平面组件的生命周期，并概述了你可以通过 TSB Operator 配置和管理的自定义资源。&lt;/p&gt;
&lt;p&gt;TSB Operator 配置为监督控制平面组件的生命周期，主动监控部署的同一命名空间内的 &lt;code&gt;ControlPlane&lt;/code&gt; 自定义资源 (CR)。默认情况下，控制平面位于 &lt;code&gt;istio-system&lt;/code&gt; 命名空间中。有关自定义资源 API 的详细信息，你可以参考&lt;a href=&#34;../../../refs/install/controlplane/v1alpha1/spec&#34; title=&#34;控制平面安装 API 参考文档&#34;&gt;控制平面安装 API 参考文档&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/tsb/concepts/operators/control-plane/control-plane-operator.svg&#34; data-img=&#34;/book/tsb/concepts/operators/control-plane/control-plane-operator.svg&#34; alt=&#34;image&#34; data-caption=&#34;&#34;&gt;
    
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;组件&#34;&gt;组件&lt;/h2&gt;
&lt;p&gt;以下是你可以使用控制平面 Operator 配置和管理的各种类型的自定义组件：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;组件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Service&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Deployment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;istio&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Istio-operator-metrics  &lt;br /&gt;(istiod, vmgateway)&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Istio-operator &lt;br /&gt;(istiod vmgateway) &lt;br /&gt;(istio-cni-node daemonset in kube-system namespace)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;oap&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;oap&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;oap-deployment&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;collector&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;otel-collector&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;otel-collector&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcpOperator&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcp-operator-edge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcp-operator-edge&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcpEdge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;xcp-edge&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;edge&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;由 Operator 编排和安装的组件包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;istio：开源 Istio Operator，TSB Operator 利用它来管理开源 Istio 组件。&lt;/li&gt;
&lt;li&gt;oap：负责收集和聚合网格和 Envoy 网关 RED 指标和跟踪数据。&lt;/li&gt;
&lt;li&gt;收集器：开放遥测收集器，它从控制平面组件收集指标并通过 Prometheus 指标端点公开它们。&lt;/li&gt;
&lt;li&gt;xcpOperator：控制平面 Operator，将控制平面组件的任务委托给 TSB Operator。&lt;/li&gt;
&lt;li&gt;xcpEdge：负责将配置从 xcpCentral 转换为 Istio CRD，存储在本地，并将集群信息传输到 xcpCentral。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;istio-作为-tsb-组件&#34;&gt;Istio 作为 TSB 组件&lt;/h3&gt;
&lt;p&gt;在控制平面的上下文中，TSB  Operator 安装开源 Istio  Operator。Istio 及其 Operator 被认为是 TSB 控制平面组件的组成部分，在 TSB Operator 的直接管理下运行。需要注意的是，Istio 不是由用户直接配置的。相反，与 Istio 的交互始终通过 TSB Operator 的 &lt;code&gt;ControlPlane&lt;/code&gt; CR 进行。&lt;/p&gt;
&lt;p&gt;负责控制平面管理的 TSB  Operator 在控制平面的命名空间内创建一个名为 &lt;code&gt;tsb-istiocontrolplane&lt;/code&gt; 的 IstioOperator CR。该 CR 指导 Istio  Operator 监督必要的 Istio（子）组件的部署。对于 TSB 控制平面，启用以下（子）组件： &lt;code&gt;pilot&lt;/code&gt; 、 &lt;code&gt;cni&lt;/code&gt; 和 &lt;code&gt;ingressGateway&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;TSB &lt;code&gt;ingressGateway&lt;/code&gt; （子）组件体现了 Envoy 的自定义配置，部署为 &lt;code&gt;vmgateway&lt;/code&gt; 。它的主要作用是将来自服务网格装载虚拟机的流量路由到部署在 Kubernetes 集群内的服务。当虚拟机和 Kubernetes Pod 之间的直接通信不可行时，这特别有用。&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  Sidecar 代理版本
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  尽管 Sidecar 代理在技术上是数据平面的一部分，但它们的版本与控制平面 Operator 版本相关。
&lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>数据平面</title>
      <link>https://jimmysong.io/book/tsb/concepts/operators/data-plane/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/tsb/concepts/operators/data-plane/</guid>
      <description>
        
        
        &lt;p&gt;本页介绍如何利用 TSB Operator 来管理数据平面的网关配置。&lt;/p&gt;
&lt;p&gt;TSB Operator 配置为监督数据平面网关组件的生命周期，主动监控所有命名空间中的 &lt;code&gt;IngressGateway&lt;/code&gt; 、 &lt;code&gt;Tier1Gateway&lt;/code&gt; 和 &lt;code&gt;EgressGateway&lt;/code&gt; 自定义资源 (CR) 集群。默认情况下，数据平面网关组件驻留在 &lt;code&gt;istio-gateway&lt;/code&gt; 命名空间中。你可以在数据平面安装 API 参考文档中找到有关自定义资源 API 的全面详细信息。&lt;/p&gt;
&lt;p&gt;数据平面 Operator 监视其创建的 Kubernetes 资源。每当它检测到监视事件（例如删除部署）时，它都会启动协调以将系统恢复到所需状态，从而有效地重新创建任何已删除的部署。&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  控制平面要求
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  为了让 TSB Operator 管理数据平面网关组件，同一集群中必须存在功能齐全的控制平面。这就需要有一个有效的 TSB Operator 来管理控制平面，以及有效的 &lt;code&gt;ControlPlane&lt;/code&gt; 自定义资源 (CR)。
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;组件&#34;&gt;组件&lt;/h2&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/tsb/concepts/operators/data-plane/data-plane-operator.svg&#34; data-img=&#34;/book/tsb/concepts/operators/data-plane/data-plane-operator.svg&#34; alt=&#34;image&#34; data-caption=&#34;&#34;&gt;
    
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;以下是你可以使用数据平面 Operator 配置和管理的自定义组件类型：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;组件&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Service&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;Deployment&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;istio&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;istio-operator-metrics（用户在应用程序命名空间中配置的 istio 代理服务）&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;istio-operator（由用户在应用程序命名空间中配置的 istio 代理部署）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;在其专用命名空间中，TSB Operator 生成名为 &lt;code&gt;tsb-gateways&lt;/code&gt; 的 &lt;code&gt;IstioOperator&lt;/code&gt; 自定义资源 (CR)，并继续部署 Istio Operator。&lt;/p&gt;
&lt;p&gt;默认情况下，生成的 &lt;code&gt;IstioOperator&lt;/code&gt; CR 启用了 &lt;code&gt;ingressGateway&lt;/code&gt; 和 &lt;code&gt;egressGateway&lt;/code&gt; 组件。所有其他 Istio 组件在 CR 中都被明确禁用。这种特殊的配置将网关升级的生命周期与控制平面升级分离。&lt;/p&gt;
&lt;p&gt;当用户在集群内的各个命名空间中创建和部署 &lt;code&gt;IngressGateway&lt;/code&gt; 、 &lt;code&gt;Tier1Gateway&lt;/code&gt; 和 &lt;code&gt;EgressGateway&lt;/code&gt; 自定义资源 (CR) 时，TSB Operator 将转换这些资源并更新数据平面网关组件的命名空间中名为 &lt;code&gt;tsb-gateways&lt;/code&gt; 的 &lt;code&gt;IstioOperator&lt;/code&gt; CR。然后，部署在此命名空间中的 Istio Operator 将代表 TSB Operator 管理入口和出口 Envoy 网关的生命周期。这些 Envoy 网关对于处理 TSB 服务网格中托管的服务的入口和出口至关重要。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
