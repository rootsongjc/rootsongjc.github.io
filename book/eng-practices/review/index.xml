<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – 代码审查指南</title>
    <link>https://jimmysong.io/book/eng-practices/review/</link>
    <description>Recent content in 代码审查指南 on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 18 May 2022 00:00:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/book/eng-practices/review/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>开发者指南</title>
      <link>https://jimmysong.io/book/eng-practices/review/developer/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/eng-practices/review/developer/</guid>
      <description>
        
        
        &lt;p&gt;本节页面的内容为开发人员进行代码审查的最佳实践。这些指南可帮助您更快地完成审核并获得更高质量的结果。您不必全部阅读它们，但它们适用于每个 Google 开发人员，并且许阅读全文通常会很有帮助。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;cl-descriptions&#34; title=&#34;写好 CL 描述&#34;&gt;写好 CL 描述&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;small-cls&#34; title=&#34;小型 CL&#34;&gt;小型 CL&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;handling-comments&#34; title=&#34;如何处理审查者的评论&#34;&gt;如何处理审查者的评论&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另请参阅&lt;a href=&#34;../reviewer/&#34; title=&#34;代码审查者指南&#34;&gt;代码审查者指南&lt;/a&gt;
，它为代码审阅者提供了详细的指导。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>审查者指南</title>
      <link>https://jimmysong.io/book/eng-practices/review/reviewer/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/eng-practices/review/reviewer/</guid>
      <description>
        
        
        &lt;p&gt;本节是基于过往经验编写的 Code Review 最佳方式建议。其中分为了很多独立的部分，共同组成完整的文档。虽然您不必阅读文档，但通读一遍会对您自己和团队很有帮助。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;standard&#34; title=&#34;Code Review 标准&#34;&gt;Code Review 标准&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;looking-for&#34; title=&#34;Code Review 要点&#34;&gt;Code Review 要点&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;navigate&#34; title=&#34;查看 CL 的步骤&#34;&gt;查看 CL 的步骤&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;speed&#34; title=&#34;Code Review 速度&#34;&gt;Code Review 速度&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;comments&#34; title=&#34;如何撰写 Code Review 评论&#34;&gt;如何撰写 Code Review 评论&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;pushback&#34; title=&#34;处理 Code Review 中的抵触&#34;&gt;处理 Code Review 中的抵触&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另请参阅&lt;a href=&#34;../developer/&#34; title=&#34;代码开发者指南&#34;&gt;代码开发者指南&lt;/a&gt;
，该指南为正在进行 Code Review 的开发开发者提供详细指导。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>紧急情况</title>
      <link>https://jimmysong.io/book/eng-practices/review/emergencies/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/eng-practices/review/emergencies/</guid>
      <description>
        
        
        &lt;p&gt;有时候紧急 CL 必须尽快通过 code review 过程。&lt;/p&gt;
&lt;h2 id=&#34;what&#34;&gt;什么是紧急情况？&lt;/h2&gt;
&lt;p&gt;紧急 CL 是这样的&lt;strong&gt;小&lt;/strong&gt;更新：允许主要发布继续而不是回滚，修复显著影响用户生产的错误，处理紧迫的法律问题，关闭主要安全漏洞等。&lt;/p&gt;
&lt;p&gt;在紧急情况下，我们确实关心 Code Review 的整体速度，而不仅仅是响应的速度。仅在这种情况下，审查人员应该更关心审查的速度和代码的正确性（是否解决了紧急情况？）。此外（显然）这类状况的审查应该优先于所有其他 code reivew。&lt;/p&gt;
&lt;p&gt;但是，在紧急情况解决后，您应该再次查看紧急 CL 并进行&lt;a href=&#34;../reviewer/looking-for&#34; title=&#34;更彻底的审查&#34;&gt;更彻底的审查&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;not&#34;&gt;什么不是紧急情况？&lt;/h2&gt;
&lt;p&gt;需要说明的是，以下情况并非紧急情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;想要在本周而不是下周推出（除非有一些实际&lt;a href=&#34;#deadlines&#34; title=&#34;硬性截止日期&#34;&gt;硬性截止日期&lt;/a&gt;
，例如合作伙伴协议）。&lt;/li&gt;
&lt;li&gt;开发人员已经在很长一段时间内完成了一项功能想要获得 CL。&lt;/li&gt;
&lt;li&gt;审查者都在另一个时区，目前是夜间或他们已离开现场。&lt;/li&gt;
&lt;li&gt;现在是星期五，在开发者在过周末之前获得这个 CL 会很棒。&lt;/li&gt;
&lt;li&gt;今天因为&lt;a href=&#34;#deadlines&#34; title=&#34;软（非硬）截止日期&#34;&gt;软（非硬）截止日期&lt;/a&gt;
，经理表示必须完成此审核并签入 CL。&lt;/li&gt;
&lt;li&gt;回滚导致测试失败或构建破坏的 CL。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等等。&lt;/p&gt;
&lt;h2 id=&#34;deadlines&#34;&gt;什么是 Hard Deadline？&lt;/h2&gt;
&lt;p&gt;硬性截止日期（Hard Deadline）是指如果你错过它会发生灾难性的事情。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于合同义务，必须在特定日期之前提交 CL。&lt;/li&gt;
&lt;li&gt;如果在某个日期之前没有发布，您的产品将在市场上完全失败。&lt;/li&gt;
&lt;li&gt;一些硬件制造商每年只发送一次新硬件。如果您错过了向他们提交代码的截止日期，那么这可能是灾难性的，具体取决于您尝试发布的代码类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;延迟发布一周并不是灾难性的。错过重要会议可能是灾难性的，但往往不是。&lt;/p&gt;
&lt;p&gt;大多数截止日期都是软截止日期，而非最后期限。软截止日期表示希望在特定时间内完成某项功能。它们很重要，但你不应该以牺牲代码健康为前提来达到。&lt;/p&gt;
&lt;p&gt;如果您的发布周期很长（几周），那么在下一个周期之前就可能会牺牲代码审查质量来获取功能。然而，如果重复这种模式，往往会给项目建立压倒性技术债务。如果开发人员在周期结束时经常提交 CL，只需要进行表面评审就必须“进入”，那么团队应该修改其流程，以便在周期的早期发生大的功能变更，并有足够的时间进行良好的审查。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
