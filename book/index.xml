<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song&#39;s Cloud Native Blog – 图书</title>
    <link>https://jimmysong.io/book/</link>
    <description>Recent content in 图书 on Jimmy Song&#39;s Cloud Native Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 23 Oct 2023 00:00:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/book/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>SPIFFE 和 SPIRE：实现零信任安全身份</title>
      <link>https://jimmysong.io/book/spiffe-and-spire/</link>
      <pubDate>Mon, 23 Oct 2023 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/spiffe-and-spire/</guid>
      <description>
        
        
        &lt;p&gt;本指南介绍云原生安全与身份解决方案 SPIFFE 和 SPIRE。&lt;/p&gt;
&lt;h2 id=&#34;本书大纲&#34;&gt;本书大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe-and-spire/concept/&#34;&gt;概念&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe-and-spire/standard/&#34;&gt;规范&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe-and-spire/architecture/&#34;&gt;架构&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe-and-spire/installation/&#34;&gt;安装&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe-and-spire/configuration/&#34;&gt;配置&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe-and-spire/examples/&#34;&gt;SPIRE 集成示例&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;concept&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Tetrate Service Bridge 手册</title>
      <link>https://jimmysong.io/book/tsb/</link>
      <pubDate>Wed, 09 Aug 2023 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/tsb/</guid>
      <description>
        
        
        &lt;p&gt;Tetrate Servcie Bridge（TSB）基于开源的 Istio、Envoy 和 SkyWalking 建立，是 &lt;a href=&#34;https://tetrate.io&#34; title=&#34;Tetrate&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tetrate&lt;/a&gt;
 的旗舰产品。本手册将帮助你全面地了解 TSB。无论你是应用程序开发人员、平台运维者，我们都会定制内容来满足你的需求。如果你遇到任何障碍，请放心，我们随时提供支持。&lt;/p&gt;
&lt;h2 id=&#34;对于应用程序开发人员&#34;&gt;对于应用程序开发人员&lt;/h2&gt;
&lt;p&gt;作为使用 TSB 将应用程序部署到环境中的应用程序开发人员，你将体验到简化的过程。首先使用 &lt;a href=&#34;./concepts/glossary&#34; title=&#34;Sidecar 代理&#34;&gt;Sidecar 代理&lt;/a&gt;
部署你的应用程序。然后，深入研究高级配置，例如将流量路由到应用程序、实施速率限制或在虚拟机和 Kubernetes 应用程序之间划分流量以实现逐步现代化。&lt;/p&gt;
&lt;h3 id=&#34;理解关键概念&#34;&gt;理解关键概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/service-mesh&#34; title=&#34;掌握服务网格架构&#34;&gt;掌握服务网格架构&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/architecture&#34; title=&#34;探索 TSB 的架构&#34;&gt;探索 TSB 的架构&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/traffic-management&#34; title=&#34;高效的流量管理&#34;&gt;高效的流量管理&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/observability&#34; title=&#34;TSB 的全局可观测性&#34;&gt;TSB 的全局可观测性&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;部署和配置应用程序&#34;&gt;部署和配置应用程序&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/setup/additional-setup/sidecar-injection/&#34; title=&#34;使用 Sidecar 部署应用程序&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用 Sidecar 部署应用程序&lt;/a&gt;
 - 如果需要，请熟悉 Istio 的故障排除资源。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/traffic/load-balance&#34; title=&#34;为外部流量配置 TSB&#34;&gt;为外部流量配置 TSB&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/gateway/application-gateway-with-openapi-annotations&#34; title=&#34;使用 OpenAPI 注释&#34;&gt;使用 OpenAPI 注释&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;高效的应用管理&#34;&gt;高效的应用管理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./quickstart/observability&#34; title=&#34;监控指标和跟踪&#34;&gt;监控指标和跟踪&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解决常见用例&#34;&gt;解决常见用例&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./howto/gateway/app-ingress&#34; title=&#34;将流量引导至应用程序&#34;&gt;将流量引导至应用程序&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/rate-limiting/toc&#34; title=&#34;实施速率限制&#34;&gt;实施速率限制&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/traffic/canary-releases&#34; title=&#34; 逐步金丝雀发布&#34;&gt; 逐步金丝雀发布&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/traffic/migrating-vm-monoliths&#34; title=&#34;将虚拟机流量迁移到 Kubernetes&#34;&gt;将虚拟机流量迁移到 Kubernetes&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/gateway/multi-cluster-traffic-shifting&#34; title=&#34;跨集群故障转移&#34;&gt;跨集群故障转移&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考资料&#34;&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./knowledge-base/faq&#34; title=&#34;TSB 常见问题解答&#34;&gt;TSB 常见问题解答&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/&#34; title=&#34;Istio 官方文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 官方文档&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;对于平台运维者&#34;&gt;对于平台运维者&lt;/h2&gt;
&lt;p&gt;对于使用 TSB 将集群转变为统一网格的平台运维者来说，旅程从&lt;a href=&#34;./setup/self-managed/management-plane-installation&#34; title=&#34;安装 TSB 的管理平面&#34;&gt;安装 TSB 的管理平面&lt;/a&gt;
开始。你还将加入应用程序集群以实现可观测性和控制，并通过&lt;a href=&#34;./quickstart/introduction&#34; title=&#34;演示应用程序部署&#34;&gt;演示应用程序部署&lt;/a&gt;
掌握应用程序部署过程。&lt;/p&gt;
&lt;h3 id=&#34;掌握基本概念&#34;&gt;掌握基本概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/service-mesh&#34; title=&#34;掌握服务网格架构&#34;&gt;掌握服务网格架构&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/architecture&#34; title=&#34;深入了解 TSB 的架构&#34;&gt;深入了解 TSB 的架构&lt;/a&gt;
，包括管理、控制和数据平面&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/traffic-management&#34; title=&#34;高效的流量管理&#34;&gt;高效的流量管理&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/observability&#34; title=&#34;TSB 的全局可观测性&#34;&gt;TSB 的全局可观测性&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/configuration-dataflow&#34; title=&#34;了解配置数据流&#34;&gt;了解配置数据流&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./operations/users/roles-and-permissions&#34; title=&#34;资源和权限的层次结构 (IAM)&#34;&gt;资源和权限的层次结构 (IAM)&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装配置和操作&#34;&gt;安装、配置和操作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./setup/resource-planning&#34; title=&#34;TSB 资源规划&#34;&gt;TSB 资源规划&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./setup/self-managed/management-plane-installation&#34; title=&#34;安装 TSB 的管理平面&#34;&gt;安装 TSB 的管理平面&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./operations/users/oidc-azure&#34; title=&#34;设置 OIDC 登录&#34;&gt;设置 OIDC 登录&lt;/a&gt;
 - 使用 OIDC 修改基于 LDAP 的登录。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./setup/self-managed/onboarding-clusters&#34; title=&#34;应用程序板载集群&#34;&gt;应用程序板载集群&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./quickstart/ingress-gateway&#34; title=&#34;部署和配置入口代理&#34;&gt;部署和配置入口代理&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./setup/certificate/certificate-requirements&#34; title=&#34;了解证书要求&#34;&gt;了解证书要求&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./setup/self-managed/upgrade&#34; title=&#34; 升级 TSB 版本&#34;&gt; 升级 TSB 版本&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./setup/remote-registry&#34; title=&#34;管理 TSB ImagePullSecret&#34;&gt;管理 TSB ImagePullSecret&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./knowledge-base/gitops&#34; title=&#34;将 GitOps 与服务网格结合使用&#34;&gt;将 GitOps 与服务网格结合使用&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./troubleshooting/configuration-status&#34; title=&#34;监控配置状态&#34;&gt;监控配置状态&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;管理与运维&#34;&gt;管理与运维&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./operations/users/roles-and-permissions&#34; title=&#34;TSB 访问管理&#34;&gt;TSB 访问管理&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./operations/configure-log-levels&#34; title=&#34;应用程序和 TSB 的默认日志级别&#34;&gt;应用程序和 TSB 的默认日志级别&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./operations/telemetry/alerting-guidelines&#34; title=&#34;TSB 组件警报指南&#34;&gt;TSB 组件警报指南&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./troubleshooting/debug-container&#34; title=&#34;使用 TSB 的调试容器进行故障排除&#34;&gt;使用 TSB 的调试容器进行故障排除&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/gitops/gitops&#34; title=&#34; 实施 GitOps&#34;&gt; 实施 GitOps&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考资料-1&#34;&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./knowledge-base/faq&#34; title=&#34;TSB 常见问题解答&#34;&gt;TSB 常见问题解答&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./refs/install/managementplane/v1alpha1/spec#oidcsettings&#34; title=&#34;TSB 安装和 OIDC 参考&#34;&gt;TSB 安装和 OIDC 参考&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./setup/firewall-information&#34; title=&#34;TSB 通信的防火墙配置&#34;&gt;TSB 通信的防火墙配置&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;对于安全管理员&#34;&gt;对于安全管理员&lt;/h2&gt;
&lt;p&gt;服务网格使安全团队能够集中实施和执行策略，同时保持开发人员的敏捷性。&lt;/p&gt;
&lt;h3 id=&#34;掌握关键概念&#34;&gt;掌握关键概念&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/service-mesh&#34; title=&#34;了解服务网格架构&#34;&gt;了解服务网格架构&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/security&#34; title=&#34;探索高级 TSB 安全概述&#34;&gt;探索高级 TSB 安全概述&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/architecture&#34; title=&#34;探索管理平面/运行时拆分&#34;&gt;探索管理平面/运行时拆分&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;管理平面安全&#34;&gt;管理平面安全&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./operations/users/roles-and-permissions&#34; title=&#34;IAM：资源和权限层次结构&#34;&gt;IAM：资源和权限层次结构&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/architecture&#34; title=&#34;深入研究运行时架构&#34;&gt;深入研究运行时架构&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;应用程序运行时安全&#34;&gt;应用程序运行时安全&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/security&#34; title=&#34;了解服务身份&#34;&gt;了解服务身份&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/concepts/security/#authorization&#34; title=&#34;实施服务到服务授权&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;实施服务到服务授权&lt;/a&gt;
（TSB 上的薄层）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/gateway/end-user-auth-keycloak&#34; title=&#34;使用网格对最终用户进行身份验证&#34;&gt;使用网格对最终用户进行身份验证&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;对应用程序实施控制&#34;&gt;对应用程序实施控制&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./quickstart/security&#34; title=&#34;在各处强制实施 (m)TLS&#34;&gt;在各处强制实施 (m)TLS&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./quickstart/security&#34; title=&#34;应用服务到服务的身份验证和授权&#34;&gt;应用服务到服务的身份验证和授权&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/gateway/egress-gateways&#34; title=&#34;管理到外部服务的出站&#34;&gt;管理到外部服务的出站&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/gateway/end-user-auth-keycloak&#34; title=&#34;实施最终用户身份验证&#34;&gt;实施最终用户身份验证&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./howto/authorization/toc&#34; title=&#34;配置 Envoy 的外部授权 API&#34;&gt;配置 Envoy 的外部授权 API&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;确保控制措施得到执行&#34;&gt;确保控制措施得到执行&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/observability&#34; title=&#34;通过全局可观测性监控服务间流量&#34;&gt;通过全局可观测性监控服务间流量&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./concepts/security&#34; title=&#34;审核日志概述和 API&#34;&gt;审核日志概述和 API&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tsb-的访问管理&#34;&gt;TSB 的访问管理&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通过灵活的 RBAC 来利用租户、工作区和组&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./setup/firewall-information&#34; title=&#34;TSB 连接的防火墙要求&#34;&gt;TSB 连接的防火墙要求&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;参考资料-2&#34;&gt;参考资料&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;./knowledge-base/faq&#34; title=&#34;TSB 常见问题解答&#34;&gt;TSB 常见问题解答&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/concepts/security/&#34; title=&#34;Istio 安全概述&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 安全概述&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;./refs/tsb/rbac/v2/yaml&#34; title=&#34;TSB 的 RBAC 访问控制 API 参考&#34;&gt;TSB 的 RBAC 访问控制 API 参考&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Argo CD 中文文档</title>
      <link>https://jimmysong.io/book/argo-cd/</link>
      <pubDate>Fri, 30 Jun 2023 16:20:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://argo-cd.readthedocs.io/en/stable/&#34; title=&#34;Argo CD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Argo CD&lt;/a&gt;
是一种开源的持续交付工具，用于自动化和管理应用程序的部署、更新和回滚。它是一个声明式的工具，专为在 Kubernetes 集群中进行应用程序部署而设计。&lt;/p&gt;
&lt;p&gt;🔔 注意：本文档根据 Argo CD v2.8  &lt;a href=&#34;https://github.com/argoproj/argo-cd/tree/4d2cd06f86c1117418bda5b943876291a4473d38&#34; title=&#34;Commit &amp;lt;code&amp;gt;4d2cd06f86&amp;lt;/code&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Commit &lt;code&gt;4d2cd06f86&lt;/code&gt;&lt;/a&gt;
（北京时间 2023 年 6 月 30 日 19 时）翻译。&lt;/p&gt;
&lt;p&gt;Argo CD 的主要功能包括：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;持续交付&lt;/strong&gt;：Argo CD 允许用户将应用程序的配置和清单文件定义为 Git 存储库中的声明式资源，从而实现持续交付。它能够自动检测 Git 存储库中的更改，并将这些更改应用于目标 Kubernetes 集群。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;健康监测和回滚&lt;/strong&gt;：Argo CD 能够监测应用程序的健康状态，并在检测到问题时触发回滚操作。这有助于确保应用程序在部署期间和运行时保持稳定和可靠。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多环境管理：Argo CD 支持多个环境（例如开发、测试、生产）的管理。它可以帮助用户在不同环境中进行应用程序的部署和配置管理，并确保这些环境之间的一致性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基于 GitOps 的操作&lt;/strong&gt;：Argo CD 采用了 GitOps 的操作模式，即将应用程序的状态和配置定义为 Git 存储库中的声明式资源。这使得团队可以使用版本控制和代码审查等软件工程实践来管理应用程序的生命周期。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;大纲&#34;&gt;大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/overview/&#34;&gt;简介&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/understand-the-basics/&#34;&gt;理解基础&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/core-concepts/&#34;&gt;核心概念&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/cli-installation/&#34;&gt;安装&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/getting-started/&#34;&gt;入门&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/operator-manual/&#34;&gt;操作手册&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/user-guide/&#34;&gt;用户手册&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/developer-guide/&#34;&gt;开发手册&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-cd/faq/&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;overview&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Argo Rollouts 中文文档</title>
      <link>https://jimmysong.io/book/argo-rollouts/</link>
      <pubDate>Wed, 21 Jun 2023 16:20:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-rollouts/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://argo-rollouts.readthedocs.io/en/stable/&#34; title=&#34;Argo Rollouts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Argo Rollouts&lt;/a&gt;
 是一个 Kubernetes 控制器，它提供了在应用程序部署过程中执行渐进式发布和蓝绿部署等高级部署策略的能力。它是基于 Kubernetes 原生的 &lt;code&gt;Deployment&lt;/code&gt; 资源构建的，通过引入新的 &lt;code&gt;Rollout&lt;/code&gt; 资源来扩展和增强部署控制。&lt;/p&gt;
&lt;p&gt;🔔 注意：本文档根据 Argo Rollouts v1.5  &lt;a href=&#34;https://github.com/argoproj/argo-rollouts/tree/1d53b251e1e1139f5e94314b5b121829edc5c88a&#34; title=&#34;Commit &amp;lt;code&amp;gt;1d53b25&amp;lt;/code&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Commit &lt;code&gt;1d53b25&lt;/code&gt;&lt;/a&gt;
（北京时间 2023 年 6 月 21 日 3 时）翻译。&lt;/p&gt;
&lt;p&gt;Argo Rollouts 具有以下主要功能：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;渐进式发布&lt;/strong&gt;（Progressive Delivery）：Argo Rollouts 允许你逐步增加新版本的流量并监控其性能，以确保新版本稳定可靠。你可以通过配置渐进式发布的步骤和条件来控制流量的切换和回滚。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;蓝绿部署&lt;/strong&gt;（Blue-Green Deployment）：Argo Rollouts 支持蓝绿部署模式，其中在新旧版本之间进行无缝切换。通过在新版本上运行一些或全部流量，并根据用户的反馈和性能指标来验证新版本的稳定性，可以确保零停机时间的部署。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;金丝雀部署&lt;/strong&gt;（Canary Deployment）：Argo Rollouts 支持金丝雀部署模式，可以将新版本的流量逐渐引入生产环境，并基于预定义的指标和策略来评估新版本的性能。这使你能够在生产中小范围测试新版本，并及时发现和修复潜在问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自动回滚&lt;/strong&gt;（Automated Rollback）：如果新版本在部署过程中出现问题或未达到预期的性能指标，Argo Rollouts 具备自动回滚功能，可以快速将流量切换回稳定版本，以减少对用户的影响。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Argo Rollouts 使用自定义资源 &lt;code&gt;Rollout&lt;/code&gt; 来描述部署的状态和策略，并通过控制器与 Kubernetes API 交互，实现部署的管理和控制。它提供了灵活且可扩展的部署流程定义，使你能够以可控的方式执行复杂的应用程序部署和更新操作。&lt;/p&gt;
&lt;h2 id=&#34;大纲&#34;&gt;大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/overview/&#34;&gt;简介&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/installation/&#34;&gt;安装&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/concepts/&#34;&gt;概念&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/architecture/&#34;&gt;架构&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/getting-started/&#34;&gt;入门&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/dashboard/&#34;&gt;Dashboard&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/rollout/&#34;&gt;Rollout&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/traffic-management/&#34;&gt;流量管理&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/analysis/&#34;&gt;分析&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/experiment/&#34;&gt;实验&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/notifications/&#34;&gt;通知&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/kubectl-plugin/&#34;&gt;Kubectl plugin&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/migrating/&#34;&gt;迁移到 Rollouts&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/best-practices/&#34;&gt;最佳实践&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/faq/&#34;&gt;FAQ&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/argo-rollouts/security/&#34;&gt;安全&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;overview&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>零信任的基石：使用 SPIFFE 为基础设施创建通用身份</title>
      <link>https://jimmysong.io/book/spiffe/</link>
      <pubDate>Fri, 07 Oct 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/spiffe/</guid>
      <description>
        
        
        &lt;p&gt;本书译自 Solving the Bottom Turtle — a SPIFFE Way to Establish Trust in Your Infrastructure via Universal Identity，译者 &lt;a href=&#34;https://jimmysong.io&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《零信任的基石》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《零信任的基石》封面&#34;
         
         
         data-width=&#34;1638&#34;
         data-height=&#34;2048&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《零信任的基石》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;copyright&#34;&gt;Copyright&lt;/h2&gt;
&lt;p&gt;Solving the Bottom Turtle — a SPIFFE Way to Establish Trust in Your Infrastructure via Universal Identity&lt;/p&gt;
&lt;p&gt;by Daniel Feldman, Emily Fox, Evan Gilman, Ian Haken, Frederick Kautz, Umair Khan, Max Lambrecht, Brandon Lum, Agustín Martínez Fayó, Eli Nesterov, Andres Vega, Michael Wardrop. 2020.&lt;/p&gt;
&lt;p&gt;This work is licensed under the Creative Commons Attribution 4.0 International License (CC BY 4.0).&lt;/p&gt;
&lt;p&gt;ISBN: 978-0-578-77737-5 URL: thebottomturtle.io&lt;/p&gt;
&lt;p&gt;This book was produced using the Book Sprints methodology (&lt;a href=&#34;https://www.booksprints.net&#34; title=&#34;www.booksprints.net&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.booksprints.net&lt;/a&gt;
). Its content was written by the authors during an intensive collaboration process conducted online over two weeks.&lt;/p&gt;
&lt;p&gt;Book Sprints Facilitation: Barbara Rühling
Copy Editors: Raewyn Whyte and Christine Davis
HTML Book Design: Manuel Vazquez
Illustrations and Cover Design: Henrik Van Leeuwen
Fonts: &lt;em&gt;Work Sans&lt;/em&gt; designed by Wei Huang, &lt;em&gt;Iosevka&lt;/em&gt; by Belleve Invis&lt;/p&gt;
&lt;h2 id=&#34;book-sprint-participants&#34;&gt;Book Sprint participants&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Daniel Feldman&lt;/strong&gt; is Principal Software Engineer at Hewlett Packard Enterprise&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Emily Fox&lt;/strong&gt; is the Cloud Native Computing Foundation (CNCF) Special Interest Group for Security (SIG-Security), Co-Chair&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Evan Gilman&lt;/strong&gt; is a Staff Engineer at VMware&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ian Haken&lt;/strong&gt; is Senior Security Software Engineer at Netflix&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Frederick Kautz&lt;/strong&gt; is Head of Edge Infrastructure at Doc.ai&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Umair Khan&lt;/strong&gt; is Sr. Product Marketing Manager at Hewlett Packard Enterprise&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Max Lambrecht&lt;/strong&gt; is Senior Software Engineer at Hewlett Packard Enterprise&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Brandon Lum&lt;/strong&gt; is Senior Software Engineer at IBM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Agustín Martínez Fayó&lt;/strong&gt; is Principal Software Engineer at Hewlett Packard Enterprise&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eli Nesterov&lt;/strong&gt; is Security Engineering Manager at ByteDance &lt;strong&gt;Andres Vega&lt;/strong&gt; is Product Line Manager at VMware&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Michael Wardrop&lt;/strong&gt; is Staff Engineer at Cohesity&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本书大纲&#34;&gt;本书大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/preface/&#34;&gt;关于本书&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/history-and-motivation-for-spiffe/&#34;&gt;1. SPIFFE 的历史和动机&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/benefits/&#34;&gt;2. 收益&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/general-concepts-behind-identity/&#34;&gt;3. 身份背后的通用概念&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/introduction-to-spiffe-and-spire-concepts/&#34;&gt;4. SPIFFE 和 SPIRE 概念介绍&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/before-you-start/&#34;&gt;5. 开始前的准备&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/designing-a-spire-deployment/&#34;&gt;6. 设计一个 SPIRE 部署&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/integrating-with-others/&#34;&gt;7. 与其他系统集成&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/using-spiffe-identities-to-inform-authorization/&#34;&gt;8. 使用 SPIFFE 身份通知授权&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/comparing-spiffe-to-other-security-technologies/&#34;&gt;9. SPIFFE 与其他安全技术对比&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/spiffe/practitioners-stories/&#34;&gt;10. 业界案例&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;preface&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Cilium 中文指南</title>
      <link>https://jimmysong.io/book/cilium-handbook/</link>
      <pubDate>Tue, 07 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/</guid>
      <description>
        
        
        &lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  注意
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  《Cilium 中文指南》除特殊说明，默认基于 Cilium 1.11  稳定版本。
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;《Cilium 中文指南》当前内容译自 &lt;a href=&#34;https://docs.cilium.io/en/v1.11/&#34; title=&#34;Cilium 官方文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium 官方文档&lt;/a&gt;
，节选了以下章节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：描述了 Cilium 的组件以及部署 Cilium 的不同模式。提供高层次的
运行一个完整的 Cilium 部署并理解其行为所需的高层次理解。&lt;/li&gt;
&lt;li&gt;开始：快速开始使用 Cilium。&lt;/li&gt;
&lt;li&gt;策略：详细介绍了策略语言结构和支持的格式。&lt;/li&gt;
&lt;li&gt;内部原理：介绍了一些组件的内部细节。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他未翻译部分主要涉及命令、API 及运维，本指南未来会加入笔者个人观点及其他内容。&lt;/p&gt;
&lt;h2 id=&#34;大纲&#34;&gt;大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/intro/&#34;&gt;Cilium 和 Hubble 简介&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/clustermesh/&#34;&gt;多集群（集群网格）&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/concepts/&#34;&gt;Cilium 概念&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/networking/&#34;&gt;网络&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/security/&#34;&gt;网络安全&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/&#34;&gt;eBPF 数据路径&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/policy/&#34;&gt;网络策略&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/&#34;&gt;Kubernetes 集成&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;intro&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>什么是 eBPF？</title>
      <link>https://jimmysong.io/book/what-is-ebpf/</link>
      <pubDate>Wed, 01 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/what-is-ebpf/</guid>
      <description>
        
        
        &lt;p&gt;《什么是 eBPF —— 新一代网络、安全和可观测性工具介绍》译自 O&amp;rsquo;Reilly 发布的报告“What is eBPF”，作者是 Liz Rice，由 JImmy Song 翻译，英文原版可以在 &lt;a href=&#34;https://www.oreilly.com/library/view/what-is-ebpf/9781492097266/&#34; title=&#34;O&amp;amp;rsquo;Reilly 网站&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;O&amp;rsquo;Reilly 网站&lt;/a&gt;
上获取。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《什么是 eBPF》中文版封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《什么是 eBPF》中文版封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1573&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《什么是 eBPF》中文版封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;p&gt;最近两年来关于 eBPF 的讨论在云原生社区里越来越多，尤其是当谈到 Cilium 的商业化，使用 eBPF 来优化 Istio 服务网格，甚至扬言干掉 Sidecar 时，eBPF 更是赚足了眼球。&lt;/p&gt;
&lt;p&gt;这本报告是由基于 Cilium  的创业公司 Isovalent 的 Liz Rice 撰写，由 O&amp;rsquo;Reilly 发布，相信可以为你揭开 eBPF 技术的神秘面纱，带你了解什么是 eBPF 还有它的强大之处。更重要的是它在云原生环境中，在服务网格、可观测性和安全中的应用。&lt;/p&gt;
&lt;h2 id=&#34;关于作者&#34;&gt;关于作者&lt;/h2&gt;
&lt;p&gt;Liz Rice 是云原生网络和安全专家，Isovalent 的首席开源官，是基于 eBPF 的 Cilium 网络项目的创建者。她在 2019-2022 年担任 CNCF 的技术监督委员会（TOC）主席，并在 2018 年担任 KubeCon + CloudNativeCon 的联合主席。她也是 Container Security 一书的作者，由 O&#39;Reilly 出版。她拥有丰富的软件开发、团队和产品管理经验，曾在网络协议和分布式系统以及数字技术领域（如 VOD、音乐和 VoIP）工作。在不写代码的时候，Liz 喜欢在天气比她的家乡伦敦好的地方骑自行车，和在 Zwift 上参加虚拟比赛。&lt;/p&gt;
&lt;h2 id=&#34;本书大纲&#34;&gt;本书大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/what-is-ebpf/introduction/&#34;&gt;第一章：eBPF 简介&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/what-is-ebpf/changing-the-kernel-is-hard/&#34;&gt;第二章：修改内核很困难&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/what-is-ebpf/ebpf-programs/&#34;&gt;第三章：eBPF 程序&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/what-is-ebpf/ebpf-complexity/&#34;&gt;第四章：eBPF 的复杂性&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/what-is-ebpf/ebpf-in-cloud-native-environments/&#34;&gt;第五章：云原生环境中的 eBPF&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/what-is-ebpf/ebpf-tools/&#34;&gt;第六章：eBPF 工具&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/what-is-ebpf/conclusion/&#34;&gt;第七章：结论&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;introduction&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Kubernetes 基础教程</title>
      <link>https://jimmysong.io/book/kubernetes-handbook/</link>
      <pubDate>Sat, 21 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/kubernetes-handbook/</guid>
      <description>
        
        
        &lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  关于本教程
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  本教程迁移自&lt;a href=&#34;https://jimmysong.io/kubernetes-handbook&#34; title=&#34;《Kubernetes 中文指南——云原生应用架构实战手册》&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;《Kubernetes 中文指南——云原生应用架构实战手册》&lt;/a&gt;
，原手册使用 Gitbook 发布，内容涵盖 容器、Kubernetes、服务网格、Serverless 等云元生的多个领域，因内容过于宽泛，且 Gitbook 项目已停止维护，现将其中的 Kubernetes 教程部分独立成书，并使用 Hugo 重新构建。
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;云原生是一种行为方式和设计理念，究其本质，凡是能够提高云上资源利用率和应用交付效率的行为或方式都是云原生的。云计算的发展史就是一部云原生化的历史。Kubernetes 开启了云原生的序幕，服务网格 Istio 的出现，引领了后 Kubernetes 时代的微服务，Serverless 的兴起，使得云原生从基础设施层不断向应用架构层挺进，我们正处于一个云原生的新时代。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《Kubernetes 基础教程》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《Kubernetes 基础教程》封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1573&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《Kubernetes 基础教程》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;http://kubernetes.io&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
 是 Google 于 &lt;a href=&#34;https://jimmysong.io/cloud-native/note/open-source/&#34; title=&#34;2014 年 6 月&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2014 年 6 月&lt;/a&gt;
基于其内部使用的 &lt;a href=&#34;https://research.google.com/pubs/pub43438.html&#34; title=&#34;Borg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Borg&lt;/a&gt;
 系统开源出来的容器编排调度引擎，Google 将其作为初始和核心项目贡献给 &lt;a href=&#34;https://cncf.io&#34; title=&#34;CNCF&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CNCF&lt;/a&gt;
（云原生计算基金会），近年来逐渐发展出了云原生生态。&lt;/p&gt;
&lt;p&gt;Kubernetes 的目标不仅仅是一个编排系统，而是提供一个规范用以描述集群的架构，定义服务的最终状态，使系统自动地达到和维持该状态。Kubernetes 作为云原生应用的基石，相当于一个云原生操作系统，其重要性不言而喻。&lt;/p&gt;
&lt;p&gt;云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。云原生的代表技术包括 &lt;strong&gt;容器&lt;/strong&gt;、&lt;strong&gt;服务网格&lt;/strong&gt;、&lt;strong&gt;微服务&lt;/strong&gt;、&lt;strong&gt;不可变基础设施&lt;/strong&gt; 和 &lt;strong&gt;声明式 API&lt;/strong&gt;。这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。——CNCF（云原生计算基金会）。&lt;/p&gt;
&lt;h2 id=&#34;关于本书&#34;&gt;关于本书&lt;/h2&gt;
&lt;p&gt;Kubernetes Handbook 项目始于 2016 年底，开源于 2017 年 3 月，作为第一本系统介绍 Kubernetes 的中文电子书，其后经过不断完善。写作本书的过程中，笔者记录了从零开始学习和使用 Kubernetes 的历程，着重于经验总结和资料分享，亦有 Kubernetes 核心概念解析，希望能够帮助大家少走弯路，为大家介绍 Kubernetes 周边生态，如微服务、DevOps、大数据应用、服务网格、云原生应用、Serverless 等领域。&lt;/p&gt;
&lt;h2 id=&#34;本书大纲&#34;&gt;本书大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/architecture/&#34;&gt;Kubernetes 架构&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/objects/&#34;&gt;资源对象&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/cluster/&#34;&gt;集群资源管理&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/controllers/&#34;&gt;控制器&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/service-discovery/&#34;&gt;服务发现与路由&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/auth/&#34;&gt;身份与权限认证&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/networking/&#34;&gt;网络&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/storage/&#34;&gt;存储&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/extend/&#34;&gt;扩展集群&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/multi-cluster/&#34;&gt;多集群管理&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/config/&#34;&gt;资源对象配置&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/cli/&#34;&gt;命令使用&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/security/&#34;&gt;集群安全性管理&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/access/&#34;&gt;访问集群&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/devops/&#34;&gt;部署应用&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/kubernetes-handbook/develop/&#34;&gt;开发指南&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;您可以使用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; title=&#34;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&lt;/a&gt;
  协议共享。&lt;/p&gt;
&lt;h2 id=&#34;交流群&#34;&gt;交流群&lt;/h2&gt;
&lt;p&gt;欢迎加入&lt;a href=&#34;https://cloudnative.to/&#34; title=&#34;云原生社区&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生社区&lt;/a&gt;
微信讨论群，加入前请先填写&lt;a href=&#34;https://wj.qq.com/s2/5479026/bf82&#34; title=&#34;入群申请问卷&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;入群申请问卷&lt;/a&gt;
后联系 &lt;a href=&#34;https://jimmysong.io/contact/&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
 入群。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;architecture&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Kubernetes 加固指南</title>
      <link>https://jimmysong.io/book/kubernetes-hardening-guidance/</link>
      <pubDate>Thu, 19 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/kubernetes-hardening-guidance/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;Kubernetes Hardening Guidance&lt;/em&gt;（&lt;a href=&#34;https://media.defense.gov/2021/Aug/03/2002820425/-1/-1/1/CTR_KUBERNETES%20HARDENING%20GUIDANCE.PDF&#34; title=&#34;查看英文原版 PDF&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;查看英文原版 PDF&lt;/a&gt;
）是由美国国家安全局（NSA）于 2021 年 8 月发布的，其中文版《Kubernetes 加固指南》（或译作《Kubernetes 强化指南》），译者 &lt;a href=&#34;https://jimmysong.io&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《Kubernetes 加固指南》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《Kubernetes 加固指南》封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1573&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《Kubernetes 加固指南》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;您可以使用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; title=&#34;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&lt;/a&gt;
  协议共享。&lt;/p&gt;
&lt;h2 id=&#34;交流群&#34;&gt;交流群&lt;/h2&gt;
&lt;p&gt;欢迎加入&lt;a href=&#34;https://cloudnative.to/&#34; title=&#34;云原生社区&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生社区&lt;/a&gt;
可观测性讨论组（微信群）参与讨论交流，加入前请先填写&lt;a href=&#34;https://wj.qq.com/s2/5479026/bf82&#34; title=&#34;入群申请问卷&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;入群申请问卷&lt;/a&gt;
后联系 &lt;a href=&#34;https://jimmysong.io/contact/&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
 入群。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;notices-and-hitory&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>谷歌工程实践</title>
      <link>https://jimmysong.io/book/eng-practices/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/eng-practices/</guid>
      <description>
        
        
        &lt;p&gt;Google 有许多通用工程实践，几乎涵盖所有语言和项目。此文档为长期积累的最佳实践，是集体经验的结晶。我们尽可能地将其公之于众，您的组织和开源项目也会从中受益。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《谷歌工程实践》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《谷歌工程实践》封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1573&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《谷歌工程实践》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;当前包含以下文档：&lt;/p&gt;
&lt;p&gt;Google 代码审查指南，实则两套指南：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代码审查者指南&lt;/li&gt;
&lt;li&gt;代码开发者指南&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;p&gt;此仓库翻译自 &lt;a href=&#34;https://github.com/google/eng-practices&#34; title=&#34;google/eng-practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;google/eng-practices&lt;/a&gt;
，目前为止的主要内容为 Google 总结的如何进行 &lt;strong&gt;Code Review（代码审查）&lt;/strong&gt; 指南，根据原 Github 仓库的标题判断以后会追加更多 Google 工程实践的内容。&lt;/p&gt;
&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;您可以使用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; title=&#34;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&lt;/a&gt;
  协议共享。&lt;/p&gt;
&lt;h2 id=&#34;交流群&#34;&gt;交流群&lt;/h2&gt;
&lt;p&gt;欢迎加入&lt;a href=&#34;https://cloudnative.to/&#34; title=&#34;云原生社区&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生社区&lt;/a&gt;
微信讨论群，加入前请先填写&lt;a href=&#34;https://wj.qq.com/s2/5479026/bf82&#34; title=&#34;入群申请问卷&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;入群申请问卷&lt;/a&gt;
后联系 &lt;a href=&#34;https://jimmysong.io/contact/&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
 入群。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;review&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>利用服务网格为基于微服务的应用程序实施 DevSecOps</title>
      <link>https://jimmysong.io/book/service-mesh-devsecops/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/service-mesh-devsecops/</guid>
      <description>
        
        
        &lt;p&gt;本书译自美国国家标准标准与技术研究院（NIST）Special Publication 800-204C。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《利用服务网格为基于微服务的应用程序实施 DevSecOps》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《利用服务网格为基于微服务的应用程序实施 DevSecOps》封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1573&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《利用服务网格为基于微服务的应用程序实施 DevSecOps》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;本书大纲&#34;&gt;本书大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/service-mesh-devsecops/preface/&#34;&gt;声明&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/service-mesh-devsecops/executive-summary/&#34;&gt;执行摘要&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/service-mesh-devsecops/intro/&#34;&gt;第一章：简介&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/service-mesh-devsecops/reference-platform/&#34;&gt;第二章：实施 DevSecOps 原语的参考平台&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/service-mesh-devsecops/devsecops/&#34;&gt;第三章：DevSecOps 组织准备、关键基本要素和实施&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/service-mesh-devsecops/implement/&#34;&gt;第四章：为参考平台实施 DevSecOps 原语&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/service-mesh-devsecops/summary-and-conclusion/&#34;&gt;第五章：摘要和结论&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;h2 id=&#34;关于本书&#34;&gt;关于本书&lt;/h2&gt;
&lt;p&gt;作者：Ramaswamy Chandramouli&lt;/p&gt;
&lt;p&gt;计算机安全司信息技术实验室&lt;/p&gt;
&lt;p&gt;美国商务部&lt;/p&gt;
&lt;p&gt;Gina M. Raimondo，秘书&lt;/p&gt;
&lt;p&gt;国家标准和技术研究所&lt;/p&gt;
&lt;p&gt;James K. Olthoff，履行负责标准和技术的商务部副部长兼国家标准和技术研究所所长的非专属职能和职责&lt;/p&gt;
&lt;p&gt;本出版物可在：&lt;a href=&#34;https://doi.org/10.6028/NIST.SP.800-204C&#34; title=&#34;https://doi.org/10.6028/NIST.SP.800-204C&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://doi.org/10.6028/NIST.SP.800-204C&lt;/a&gt;
 免费获取。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;preface&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>迁移到云原生应用架构</title>
      <link>https://jimmysong.io/book/migrating-to-cloud-native-application-architectures/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/migrating-to-cloud-native-application-architectures/</guid>
      <description>
        
        
        &lt;p&gt;本书是 &lt;a href=&#34;https://tanzu.vmware.com/content/ebooks/migrating-to-cloud-native-application-architectures&#34; title=&#34;Migrating to Cloud Native Application Architectures&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Migrating to Cloud Native Application Architectures&lt;/a&gt;
 的中文版，本书英文版发布于 2015 年 2 月，中文版由 &lt;a href=&#34;https://jimmysong.io&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
 翻译，发布于 2017 年 7 月。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《迁移到云原生应用架构》图书封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《迁移到云原生应用架构》图书封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1573&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《迁移到云原生应用架构》图书封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;p&gt;云时代的云原生应用大势已来，将传统的单体架构应用迁移到云原生架构，你准备好了吗？&lt;/p&gt;
&lt;p&gt;俗话说“意识决定行动”，在迁移到云原生应用之前，我们大家需要先对 Cloud Native（云原生）的概念、组织形式并对实现它的技术有一个大概的了解，这样才能指导我们的云原生架构实践。&lt;/p&gt;
&lt;p&gt;英文版作于 2015 年，其中的示例主要针对 Java 应用，实际上也适用于任何应用类型，云原生应用架构适用于异构语言的程序开发，不仅仅是针对 Java 语言的程序开发。截止到本人翻译本书时，云原生应用生态系统已经初具规模，&lt;a href=&#34;https://cncf.io&#34; title=&#34;CNCF&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CNCF&lt;/a&gt;
 成员不断发展壮大，基于 Cloud Native 的创业公司不断涌现，&lt;a href=&#34;https://kubernetes.io&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
 引领容器编排潮流，和 Service Mesh 技术（如 &lt;a href=&#34;https://linkerd.io&#34; title=&#34;Linkerd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linkerd&lt;/a&gt;
 和 &lt;a href=&#34;https://istio.io&#34; title=&#34;Istio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio&lt;/a&gt;
）的出现，Go 语言的兴起等为我们将应用迁移到云原生架构的提供了更多的方案选择。&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;当前很多企业正在采用云原生应用架构，这可以帮助其 IT 转型，成为市场竞争中真正敏捷的力量。O&amp;rsquo;Reilly 的报告中定义了云原生应用架构的特性，如微服务和十二因素应用程序。&lt;/p&gt;
&lt;p&gt;本书中作者 Matt Stine 还探究了将传统的单体应用和面向服务架构（SOA）应用迁移到云原生架构所需的文化、组织和技术变革。本书中还有一个迁移手册，其中包含将单体应用程序分解为微服务，实施容错模式和执行云原生服务的自动测试的方法。&lt;/p&gt;
&lt;p&gt;本书中讨论的应用架构包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;十二因素应用程序：云原生应用架构模式的集合&lt;/li&gt;
&lt;li&gt;微服务：独立部署的服务，每个服务只做一件事情&lt;/li&gt;
&lt;li&gt;自助服务的敏捷基础设施：快速，可重复和一致地提供应用环境和后台服务的平台&lt;/li&gt;
&lt;li&gt;基于 API 的协作：发布和版本化的 API，允许在云原生应用架构中的服务之间进行交互&lt;/li&gt;
&lt;li&gt;抗压性：根据压力变强的系统&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本章大纲&#34;&gt;本章大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/migrating-to-cloud-native-application-architectures/the-rise-of-cloud-native/&#34;&gt;第一章：云原生的崛起&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/migrating-to-cloud-native-application-architectures/changes-needed/&#34;&gt;第二章：在变革中前行&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/migrating-to-cloud-native-application-architectures/migration-cookbook/&#34;&gt;第三章：迁移指南&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;h2 id=&#34;关于作者&#34;&gt;关于作者&lt;/h2&gt;
&lt;p&gt;Matt Stine，Pivotal 的技术产品经理，拥有 15 年企业 IT 和众多业务领域的经验。Matt 强调精益/敏捷方法、DevOps、架构模式和编程范例，他正在探究使用技术组合帮助企业 IT 部门能够像初创公司一样工作。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;the-rise-of-cloud-native&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>云原生基础架构</title>
      <link>https://jimmysong.io/book/cloud-native-infra/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cloud-native-infra/</guid>
      <description>
        
        
        &lt;p&gt;本书为 &lt;em&gt;Cloud Native Infrastructure&lt;/em&gt; 中文版，作者 &lt;em&gt;Justin Garrison&lt;/em&gt; 和 &lt;em&gt;Kris Nova&lt;/em&gt;，英文版发行于 2017 年 11 月，已可以在网上免费获得，本书是关于创建和管理基础架构，以适用于云原生应用全生命周期管理的模式和实践。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《云原生基础架构》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《云原生基础架构》封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1573&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《云原生基础架构》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;阅读完这本书后，您将会有如下收获：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;理解为什么说云原生基础架构是高效运行云原生应用所必须的&lt;/li&gt;
&lt;li&gt;根据准则来决定您的业务何时以及是否应该采用云原生&lt;/li&gt;
&lt;li&gt;了解部署和管理基础架构和应用程序的模式&lt;/li&gt;
&lt;li&gt;设计测试以证明您的基础架构可以按预期工作，即使在各种边缘情况下也是如此&lt;/li&gt;
&lt;li&gt;了解如何以策略即代码的方式保护基础架构&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本书大纲&#34;&gt;本书大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/forward/&#34;&gt;前言&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/introduction/&#34;&gt;介绍&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/what-is-cloud-native-infrastructure/&#34;&gt;第 1 章：什么是云原生基础架构？&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/when-to-adopt-cloud-native/&#34;&gt;第 2 章：采纳云原生基础架构的时机&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/evolution-of-cloud-native-developments/&#34;&gt;第 3 章：云原生部署的演变&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/designing-infrastructure-applicaitons/&#34;&gt;第 4 章：设计基础架构应用程序&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/developing-infrastructure-applications/&#34;&gt;第 5 章：开发基础架构应用程序&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/testing-cloud-native-infrastructure/&#34;&gt;第 6 章：测试云原生基础架构&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/managing-cloud-native-applications/&#34;&gt;第 7 章：管理云原生应用程序&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/securing-applications/&#34;&gt;第 8 章：保护应用程序&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/implementing-cloud-native-infrasctructure/&#34;&gt;第 9 章：实施云原生基础架构&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/appendix-a-patterns-for-network-resiilency/&#34;&gt;附录 A：网络弹性模式&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/appendix-b-lock-in/&#34;&gt;附录 B：锁定&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cloud-native-infra/appendix-c-box-case-study/&#34;&gt;附录 C Box：案例研究&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;h2 id=&#34;免责声明&#34;&gt;免责声明&lt;/h2&gt;
&lt;p&gt;本书英文版版权属于 O’Reilly，中文版版权归属于机械工业出版，基于&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; title=&#34;署名 - 非商业性使用 - 相同方式共享 4.0（CC BY-NC-SA 4.0）&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0（CC BY-NC-SA 4.0）&lt;/a&gt;
分享，本书为云原生爱好者翻译，仅可用于学习和交流目的，请勿私自印制贩卖，如有需要请&lt;a href=&#34;https://item.jd.com/12432007.html&#34; title=&#34;购买纸质书&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;购买纸质书&lt;/a&gt;
。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;foreword&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>OpenTelemetry 可观测性的未来</title>
      <link>https://jimmysong.io/book/opentelemetry-obervability/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/opentelemetry-obervability/</guid>
      <description>
        
        
        &lt;p&gt;本报告译自 O&amp;rsquo;Reilly 出品的 &lt;a href=&#34;https://www.oreilly.com/library/view/the-future-of/9781098118433/&#34; title=&#34;The Future of Observablity with OpeTelemetry&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Future of Observablity with OpeTelemetry&lt;/a&gt;
，作者 Ted Young，译者 &lt;a href=&#34;https://jimmysong.io&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《OpenTelemetry 可观测性的未来》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《OpenTelemetry 可观测性的未来》封面&#34;
         
         
         data-width=&#34;1800&#34;
         data-height=&#34;2360&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《OpenTelemetry 可观测性的未来》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;关于本书&#34;&gt;关于本书&lt;/h2&gt;
&lt;p&gt;本书内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenTelemetry 如何满足库作者、应用程序拥有者、运维和响应者的需求&lt;/li&gt;
&lt;li&gt;应用程序的不同角色如何围绕 OpenTelemetry 来协同和独立工作&lt;/li&gt;
&lt;li&gt;关于在组织中采用和管理 OpenTelemetry 的实用建议&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;关于作者&#34;&gt;关于作者&lt;/h2&gt;
&lt;p&gt;Ted Young 是 OpenTelemetry 项目的联合创始人之一。在过去的二十年里，他设计并建立了各种大规模的分布式系统，包括可视化 FX 管道和容器调度系统。他目前在 Lightstep 公司担任开发者教育总监，住在俄勒冈州波特兰的一个小农场里。&lt;/p&gt;
&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;您可以使用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; title=&#34;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&lt;/a&gt;
  协议共享。&lt;/p&gt;
&lt;h2 id=&#34;交流群&#34;&gt;交流群&lt;/h2&gt;
&lt;p&gt;欢迎加入&lt;a href=&#34;https://cloudnative.to/&#34; title=&#34;云原生社区&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生社区&lt;/a&gt;
可观测性讨论组（微信群）参与讨论交流，加入前请先填写&lt;a href=&#34;https://wj.qq.com/s2/5479026/bf82&#34; title=&#34;入群申请问卷&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;入群申请问卷&lt;/a&gt;
后联系 &lt;a href=&#34;https://jimmysong.io/contact/&#34; title=&#34;Jimmy Song&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jimmy Song&lt;/a&gt;
 入群。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;foreword&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Istio 最佳实战</title>
      <link>https://jimmysong.io/book/istio-in-action/</link>
      <pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/istio-in-action/</guid>
      <description>
        
        
        &lt;h2 id=&#34;编辑推荐&#34;&gt;编辑推荐&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;本书作者为全球服务网格技术专家，内容更加全面、翔实。&lt;/li&gt;
&lt;li&gt;本书译者为国内云原生社区技术专家，力求将内容准备传达表述，并且对于难以理解的内容进行了中文化处理。&lt;/li&gt;
&lt;li&gt;本书内容全面，覆盖 Istio 新版本及核心内容，示例代码丰富完善。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/istio-in-action/cover.jpg&#34; data-img=&#34;/book/istio-in-action/cover.jpg&#34; data-width=&#34;800&#34; data-height=&#34;772&#34; alt=&#34;image&#34; data-caption=&#34;Istio in Action 中文版（Istio 最佳实战）&#34;&gt;
    
  
  &lt;figcaption&gt;Istio in Action 中文版（Istio 最佳实战）&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;内容简介&#34;&gt;内容简介&lt;/h2&gt;
&lt;p&gt;Istio 作为服务网格技术拥有代表性的产品，历经多年发展已日渐成熟，并受到越来越多开发者的青睐。本书以 Istio 服务网格为核心，内容包括基本概念、核心功能、运维、企业级落地四大部分，从基本的安装部署到功能实践，从底层原理分析到故障排查，从进阶操作到企业级实战，由浅入深地介绍了 Istio 服务网格的各个方面。&lt;/p&gt;
&lt;p&gt;本书适合正在使用或关注 Istio 的开发工程师、运维工程师、架构师等云原生领域从业者阅读。无论你是服务网格技术的初学者，还是该领域的专家，都能从本书中寻找到有借鉴意义的理论及实践指导。&lt;/p&gt;
&lt;h2 id=&#34;作者简介&#34;&gt;作者简介&lt;/h2&gt;
&lt;p&gt;Christian Posta 是 Solo.io 公司副总裁，全球领域首席技术官。他在云原生社区中以作家、博主、演说家，以及服务网格和云原生生态中各种开源项目的贡献者身份而闻名。Christian 曾在传统企业和大型互联网公司工作过，现在帮助组织创建和部署大规模的、云原生的、弹性的分布式架构。他擅长指导、培训和领导团队在分布式系统概念、微服务、DevOps 和云原生应用程序设计方面取得成功。&lt;/p&gt;
&lt;p&gt;Rinor Maloku 是 Solo.io 公司的工程师。他为采用应用网络解决方案（如服务网格）的客户提供咨询服务。此前，他在 Red Hat 公司工作，在那里，他开发了中间件软件，使研发团队能够确保其服务的高可用性。作为一名自由职业者，他服务了多位 DAX 30 成员，以充分利用云计算技术的潜力。&lt;/p&gt;
&lt;h2 id=&#34;译者简介&#34;&gt;译者简介&lt;/h2&gt;
&lt;p&gt;马若飞，就职于飞维美地（FreeWheel）北京研发中心，担任首席工程师，主要负责微服务架构设计和云原生落地工作。《Istio 实战指南》作者，极客时间《Service Mesh 实战》专栏作者，《云原生应用架构：微服务开发最佳实践》主要作者，人民邮电出版社 IT 专业图书专家顾问，ServiceMesher 技术社区和云原生社区管理委员会成员。发表、翻译多篇云原生领域前沿技术文章，热衷于技术分享。&lt;/p&gt;
&lt;p&gt;宋净超（Jimmy Song），Tetrate 布道师，云原生社区创始人，蚂蚁集团前云原生布道师及开源管理负责人，电子工业出版社图书出品人，独立撰稿人。Kubernetes、Istio 等开源技术的早期使用及推广者。著有《未来架构：从服务化到云原生》《深入理解 Istio：云原生服务网格进阶实战》，参与过多部作品的翻译工作。&lt;/p&gt;
&lt;p&gt;罗广明，字节跳动服务框架团队架构师，云原生社区管理委员会成员、北京站站长。先后在爱立信、百度从事云原生、微服务及开源相关工作，后加入字节跳动，负责 CloudWeGo 等微服务项目开源相关工作。长期关注云原生 &amp;amp; 微服务领域前沿技术、架构演进及标准化进程。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>深入理解 Istio —— 云原生服务网格进阶实战</title>
      <link>https://jimmysong.io/book/istio-in-depth/</link>
      <pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/istio-in-depth/</guid>
      <description>
        
        
        &lt;p&gt;《深入理解 Istio —— 云原生服务网格进阶实战》，云原生社区著，电子工业出版社出版，2022 年 6 月。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;istio-book.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《深入理解 Istio —— 云原生服务网格进阶实战》&#34; width=&#34;100%&#34;data-img=&#34;istio-book.jpg&#34;
         data-caption=&#34;《深入理解 Istio —— 云原生服务网格进阶实战》&#34;
         
         
         data-width=&#34;2400&#34;
         data-height=&#34;1600&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《深入理解 Istio —— 云原生服务网格进阶实战》
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;以社区之名成就开源&#34;&gt;以社区之名成就开源&lt;/h2&gt;
&lt;p&gt;2018 年 5 月，在蚂蚁金服的支持下，ServiceMesher 社区成立。随后，国内刮起了服务网格的旋风，由社区领导的 Istio 官方文档翻译工作也进入白热化阶段。&lt;/p&gt;
&lt;p&gt;随着时间的推移，我感受到系统介绍 Istio 的中文资料匮乏，于是在 2018 年 9 月开始构思写一本关于 Istio 的图书，并在 GitHub 上发起了 Istio Handbook 的开源电子书项目。几个月后，随着服务网格技术的推广及 ServiceMesher 社区规模的扩大，我在社区的线上线下活动中结识了很多同样热衷于 Istio 和服务网格技术的朋友。我们一致决定，一起写一本 Istio 的开源电子书，将社区积累的宝贵文章和经验集结成系统的文字，分享给广大开发者。&lt;/p&gt;
&lt;p&gt;2019 年 3 月，在社区管理委员会的组织下，几十位成员自愿参与并开始共同撰写此书。2020 年 5 月，为了更好地推广云原生技术，丰富社区分享的技术内容，我们成立了云原生社区，并将原有的 ServiceMesher 社区纳入其中，社区运营的内容也从服务网格技术扩展到更加全面的云原生技术。&lt;/p&gt;
&lt;p&gt;2020 年 10 月，这本书主要的内容贡献者组成了编委会，成员分别有我、马若飞、王佰平、王炜、罗广明、赵化冰、钟华和郭旭东。我们在出版社的指导与帮助下，对本书进行了后续的版本升级、完善、优化等工作。经过反复的迭代，这本《深入理解 Isito：云原生服务网格进阶实战》终于和大家见面了。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cover.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《深入理解 Istio —— 云原生服务网格进阶实战》封面&#34; width=&#34;50%&#34;data-img=&#34;cover.jpg&#34;
         data-caption=&#34;《深入理解 Istio —— 云原生服务网格进阶实战》封面&#34;
         
         
         data-width=&#34;1200&#34;
         data-height=&#34;1569&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《深入理解 Istio —— 云原生服务网格进阶实战》封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;关于本书&#34;&gt;关于本书&lt;/h2&gt;
&lt;p&gt;Istio 在 1.5 版本后有了重大的架构变化，同时引入或改进了多项功能，例如，引入了智能 DNS 代理、新的资源对象，改进了对虚拟机的支持等。&lt;/p&gt;
&lt;p&gt;本书以 Istio 新版本为基础编写而成，在持续追踪 Istio 社区最新动向的基础上，力求为读者提 供最新、最全面的内容。另外，本书的多位作者都是一线的开发或运维工程师，具有丰富的 Istio 实战经验，为本书提供了翔实、宝贵的参考案例。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>开发者布道手册</title>
      <link>https://jimmysong.io/book/developer-advocacy-handbook/</link>
      <pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/developer-advocacy-handbook/</guid>
      <description>
        
        
        &lt;p&gt;本书译自 &lt;a href=&#34;https://developer-advocacy.com/&#34; title=&#34;The Developer Advocacy Handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Developer Advocacy Handbook&lt;/a&gt;
，副标题「开发者布道师的自我修养」为译者自拟。作者为 Christian Heilmann。&lt;/p&gt;
&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;p&gt;随着开源软件的流行，企业的开发者布道（Developer Advocacy）的需求不断增长，开发者布道师（Developer Advocate）的职业前景也越来越广阔。这本书将揭开大众口中的“布道师”的神秘面纱，让你了解这一角色的工作内容；对于各位布道师来说，这本书也将成为你整个布道生涯的得力助手，指导你布道的方方面面。&lt;/p&gt;
&lt;p&gt;作者 Christian Heilmann 是一个德国人，从事开发者布道工作已有十余年，译者本身也有多年从事开发者布道工作的经验。目前在中文互联网上，对“布道师”这一角色还存在很多猜疑和误解，相信这本书可以化解开发者对布道师这一角色的疑虑。虽然书中提到的一些技术在中国可能并不适用，但是中国也有同类出色的替代品，我相信人情总是相通的，技术只是手段而已。&lt;/p&gt;
&lt;p&gt;由于笔者完全凭个人兴趣，利用业余时间翻译此书，翻译过程中难免遗漏和错误，欢迎提交 Issue 评论和 PR 修改。如果你有关于开发者布道、开源、云原生及开源相关的问题，欢迎&lt;a href=&#34;https://jimmysong.io/contact/&#34; title=&#34;与我交流&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;与我交流&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;许可证&#34;&gt;许可证&lt;/h2&gt;
&lt;p&gt;本书所有内容支持使用&lt;a href=&#34;https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh&#34; title=&#34;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;署名 - 非商业性使用 - 相同方式共享 4.0 (CC BY-NC-SA 4.0)&lt;/a&gt;
  协议共享。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;about&#34;  class=&#34;btn btn-primary px-3 py-3&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Quarkus 实战</title>
      <link>https://jimmysong.io/book/quarkus-cookbook/</link>
      <pubDate>Wed, 31 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/quarkus-cookbook/</guid>
      <description>
        
        
        &lt;p&gt;《Quarkus 实战——专为 Kubernetes 而优化的 Java 解决方案》，Alex Soto Bueno、Jason Porter 著，张晓宇、刘岩、宋净超译，机械工业出版社出版，2021 年 3 月。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/quarkus-cookbook/quarkus-cookbook.jpg&#34; data-img=&#34;/book/quarkus-cookbook/quarkus-cookbook.jpg&#34; data-width=&#34;2000&#34; data-height=&#34;1259&#34; alt=&#34;image&#34; data-caption=&#34;Quarkus cookbook 实战&#34;&gt;
    
  
  &lt;figcaption&gt;Quarkus cookbook 实战&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;译者序&#34;&gt;译者序&lt;/h2&gt;
&lt;p&gt;Quarkus 是一款有别于传统 Java 架构的新技术框架，它是建立在我们熟知的技术栈上，使用了诸多成熟的技术，如 JPA，JAX-RS、Eclipse Vert.x、Eclipse MicroProfile 和 CDI 等，并将之和 Kubernetes 紧密融合在一起。用户可以借助 Kubernetes 的高效的调度运维能力，最大限度地节约资源。&lt;/p&gt;
&lt;p&gt;云原生的星星之火，自社区 Kubernetes 爆红之后，变成燎原之势。云原生相关的技术如雨后春笋般涌出。刘岩，宋净超和我都是云原生社区的成员，也钟爱布道各种相关技术，是这一领域的狂热爱好者。我们共同的爱好之一，就是时刻关注有好的国外技术或者成熟技术的优秀书籍发布。&lt;/p&gt;
&lt;p&gt;在这一过程中，我们机缘巧合地发现了这本书，恰好这本书在国内还没有进行翻译，满怀热情的我们就此踏上了研究 Quarkus 之旅。&lt;/p&gt;
&lt;p&gt;这本采用十分简单的抛出问题，提出解决方案，和引发讨论的方式，将 Quarkus 的技术点描绘的细致透彻。通过本书，用户可以自学相关内容，借助 Quarkus，提高 Java 相关研发的工作效率，让你在快节奏的微服务构建和基于云的应用程序开发领域立于不败之地。&lt;/p&gt;
&lt;p&gt;在整个翻译过程中，我们得到华章出版社和李忠明编辑的全力帮助，在此表示衷心感谢。&lt;/p&gt;
&lt;p&gt;最后，感谢大家有缘阅读到此书，希望我们三人的绵薄之力可以帮助到崇尚云原生技术的你，在 Quarkus 的技术道路上，能够享受到和我们一样的欣喜。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>云原生模式</title>
      <link>https://jimmysong.io/book/cloud-native-patterns/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/cloud-native-patterns/</guid>
      <description>
        
        
        &lt;p&gt;《云原生模式》，Cornelia Davis 著，张若飞、宋净超译，电子工业出版社出版，2020 年 8 月。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cloud-native-patterns.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《云原生模式》图书封面&#34; width=&#34;50%&#34;data-img=&#34;cloud-native-patterns.jpg&#34;
         data-caption=&#34;《云原生模式》图书封面&#34;
         
         
         data-width=&#34;610&#34;
         data-height=&#34;800&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《云原生模式》图书封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;当我们在讨论云原生时究竟在讨论什么？这些年来我一直在思索这个问题，大家的观点可能不尽相同。三年前从我翻译了第一本云原生领域书籍开始，陆续参与翻译和创作了一系列云原生作品，同时通过对云原生领域的开源项目、社区、基金会、应用云化过程的参与和观察，我得出了下面的结论：云原生是一种行为方式和设计理念，究其本质，凡是能够提高云上资源利用率和应用交付效率的行为或方式都是云原生的。云计算的发展史就是一部云原生化的历史。云原生是云计算适应社会分工的必然结果，将系统资源、底层基础设施和应用编排交由云平台管理，让开发者专注于业务逻辑，这不正是云计算长久以来孜孜以求的吗？云原生应用追求的是快速构建高容错性、弹性的分布式应用，追求的极致的研发效率和友好的上线与运维体验，随云云原生的理念应运而生，它们天生适合部署在云上，可以最大限度利用云计算带来的红利。&lt;/p&gt;
&lt;p&gt;在此之前我曾翻译过几本云原生主题的图书，其中&lt;a href=&#34;https://jimmysong.io/book/cloud-native-go/&#34; title=&#34;《Cloud Native Go》&#34;&gt;《Cloud Native Go》&lt;/a&gt;
的作者 Kevin Hoffman，&lt;a href=&#34;https://jimmysong.io/book/cloud-native-java/&#34; title=&#34;《云原生 Java》&#34;&gt;《云原生 Java》&lt;/a&gt;
的作者 Josh Long，他们都是来自 Pivotal 或曾在 Pivotal 工作多年，当看到此书时，我惊奇的发现，作者 Cornelia Davis 同样来自这家公司，Pivotal 真可谓是云原生的黄埔军校，此书的内容跟以往的云原生书籍有所不同，对于模式的梳理标新立异，因此我立马联系了电子工业出版社的张春雨编辑，经他了解到张若飞正在翻译此书，此前我已与他合作翻译了《云原生 Java》，本书算是我跟他的第二次合作，他翻译图书时的精准和高效着实让我佩服，我们各自翻译了本书一半的内容。
人人都在讨论云原生，但是究竟如何实现却莫衷一是。本书列举了构建云原生应用的 12 种模式，主要关注的是云原生应用的数据、服务与交互，即应用层面的设计模式，这些模式穿插于本书的第二部分各个章节中，基本覆盖了云原生应用的各个方面，并将理论结合实践，带领读者使用 Java 来实现一个云原生应用。&lt;/p&gt;
&lt;p&gt;同时还要感谢&lt;a href=&#34;https://cloudnative.to&#34; title=&#34;云原生社区&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;云原生社区&lt;/a&gt;
的成员及志愿者们，对于云原生在中国的发展做出的贡献，你们的鼓励和支持是在云原生领域不断努力和探索的动力。本书在翻译过程中难免有一些纰漏，还望读者指正。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>未来架构——从服务化到云原生</title>
      <link>https://jimmysong.io/book/future-architecture/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/future-architecture/</guid>
      <description>
        
        
        &lt;p&gt;《未来架构 —— 从服务化到云原生》，张亮、吴晟、敖小剑、宋净超著，电子工业出版社出版，2019 年 4 月。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;future-architecture.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《未来架构》图书封面&#34; width=&#34;50%&#34;data-img=&#34;future-architecture.jpg&#34;
         data-caption=&#34;&#34;
         
         
         data-width=&#34;610&#34;
         data-height=&#34;800&#34;
         
         
    /&gt;&lt;figcaption&gt;
            &lt;p&gt;《未来架构》图书封面&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;这本书的第一作者是张亮，现就职于京东金融，为了丰富全书的内容，张亮要求了圈内的好友吴晟、敖小剑和我，共同创作了这本宏大命题的《未来架构》，下面引述的他介绍的成书原由。&lt;/p&gt;
&lt;h3 id=&#34;成书缘由&#34;&gt;成书缘由&lt;/h3&gt;
&lt;p&gt;身处互联网行业的我们一向处在变革的最前端，受到世界浪潮的洗礼，不停歇地追赶着这一波又一波的技术潮流，才不会落在时代脚步之后。特别是近几年来，互联网架构不断演化，经历了从集中式架构到分布式架构，再到云原生架构的过程。云原生因能解决传统应用升级缓慢、架构臃肿、不能快速迭代等问题而逐渐成为这个时代舞台的主角。&lt;/p&gt;
&lt;p&gt;身处在这个变化浪潮中，我看着它改变着互联网架构的航行方向，并给越来越多的公司和个人带来新的思想和发展，也用我这些年走过的路、积累的经验、沉淀的眼界去学习它、读懂它，并让它融入我的知识体系网，来更新大脑里那张探索不断、充满指南针意义的架构地图。&lt;/p&gt;
&lt;p&gt;2017、2018 年，我与这些变化同进同退，让 Elastic-Job、&lt;a href=&#34;https://github.com/apache/shardingsphere&#34; title=&#34;Sharding-Sphere&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sharding-Sphere&lt;/a&gt;
 成为业界里大家认可的项目、让所负责的开源项目开始走向国际化、也认识了更多的良师益友…… 这种种的经历和发展，触动我开始将所闻、所见、所知、所感的珠玑落到了笔尖，串联成了这本书：《未来架构 —— 从服务化到云原生》。&lt;/p&gt;
&lt;p&gt;这本书里有你想认识的分布式、服务化、服务网格、容器、编排治理、云原生、云数据库……&lt;/p&gt;
&lt;p&gt;这本书里既有我多年深思熟虑的见解和沉淀良久的经验，也有我弃笔又拾笔的挣扎，因为我需要让书的内容对读者负责……&lt;/p&gt;
&lt;p&gt;这本书里更有这些资深大咖的精彩章节叙述：Apache 孵化器项目 SkyWalking 创始人 &amp;amp; APM 专家吴晟、CNCF Ambassador &amp;amp; 云原生布道师 &amp;amp; 云原生社区创始人&lt;a href=&#34;https://jimmysong.io/&#34; title=&#34;宋净超&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;宋净超&lt;/a&gt;
、Service Mesh 布道师&lt;a href=&#34;https://skyao.io/&#34; title=&#34;敖小剑&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;敖小剑&lt;/a&gt;
。&lt;/p&gt;
&lt;h3 id=&#34;目录&#34;&gt;目录&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;第 1 章 云原生&lt;/li&gt;
&lt;li&gt;第 2 章 远程通信&lt;/li&gt;
&lt;li&gt;第 3 章 配置&lt;/li&gt;
&lt;li&gt;第 4 章 服务治理&lt;/li&gt;
&lt;li&gt;第 5 章 观察分布式服务&lt;/li&gt;
&lt;li&gt;第 6 章 侵入式服务治理方案&lt;/li&gt;
&lt;li&gt;第 7 章 云原生生态的基石 Kubernetes&lt;/li&gt;
&lt;li&gt;第 8 章 跨语言服务治理方案 Service Mesh&lt;/li&gt;
&lt;li&gt;第 9 章 云原生数据架构&lt;/li&gt;
&lt;li&gt;第 10 章 分布式数据库中间件生态圈 ShardingSphere&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;寄托期翼&#34;&gt;寄托期翼&lt;/h3&gt;
&lt;p&gt;书的封页是张亮老师选择的老特拉福德球场前矗立的曼联 Holy Trinity 雕像作为背景图。&lt;/p&gt;
&lt;p&gt;1958 年 2 月 6 日，曼联队在南斯拉夫参加欧冠杯获得半决赛权后，回程途中遭遇慕尼黑空难，曼联战队瞬间消失在夜空。为了曼联的复兴，幸存下来的曼联队的主帅马特・巴斯比强忍悲痛，用血泪和汗水重建曼联。1968 年 5 月 29 日，在慕尼黑空难整整 10 年后，巴斯比带领他的新战队终于捧起了欧洲冠军杯，告慰了那些故去的亡魂！这座 Holy Trinity 雕像变成了永恒的纪念！&lt;/p&gt;
&lt;p&gt;信仰、永不言弃、坚持不懈、创造奇迹、浴火重生…，是我从这座雕塑中感受到的力量。每个人的一生一定都会经历高峰和低谷，见过山川和沙漠，也希望这本书不仅仅能为大家带来互联网架构的干货知识，也能寄托我对大家的祝福：希望在这十万长征路上正在不懈拼搏的你，能够拥有自己的信仰和希望，即使要途径无数沙漠和海洋，也能在经历千帆后柳暗花明！&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Python 云原生</title>
      <link>https://jimmysong.io/book/cloud-native-python/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/cloud-native-python/</guid>
      <description>
        
        
        &lt;p&gt;《Python 云原生》，Marish Sethi 著，宋净超译，电子工业出版社出版，2018 年 7 月。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cloud-native-python.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;《Python 云原生》图书封面&#34; width=&#34;50%&#34;data-img=&#34;cloud-native-python.jpg&#34;
         data-caption=&#34;《Python 云原生》图书封面&#34;
         
         
         data-width=&#34;610&#34;
         data-height=&#34;800&#34;
         
         
    /&gt;&lt;figcaption&gt;
            《Python 云原生》图书封面
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&#34;cloud-native-python-介绍&#34;&gt;Cloud Native Python 介绍&lt;/h2&gt;
&lt;p&gt;随着当今商业的迅速发展，企业为了支撑自身的迅速扩张，仅仅通过自有的基础设施是远远不够的。因此，他们一直在追求利用云的弹性来构建支持高度可扩展应用程序的平台。&lt;/p&gt;
&lt;p&gt;这本书能够帮助您一站式的了解使用 Python 构建云原生应用架构的所有信息。本书中我们首先向您介绍云原生应用架构和他们能够帮助您解决哪些问题。然后您将了解到如何使用 REST API 和 Python 构建微服务，通过事件驱动的方式构建 Web 层。接下来，您将了解到如何与数据服务进行交互，并使用 React 构建 Web 视图，之后我们将详细介绍应用程序的安全性和性能。然后，您还将了解到如何 Docker 容器化您的服务。最后，您将学习如何在 AWS 和 Azure 平台上部署您的应用程序。在您部署了应用程序后，我们将围绕关于应用程序故障排查的一系列概念和技术来结束这本书。&lt;/p&gt;
&lt;h2 id=&#34;本书中涵盖哪些内容&#34;&gt;本书中涵盖哪些内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;第 1 章 介绍云原生应用架构和微服务，讨论云原生架构的基本概念和构建应用程序开发环境。&lt;/li&gt;
&lt;li&gt;第 2 章 使用 Python 构建微服务，构建自己的微服务知识体系并根据您的用例进行扩展。&lt;/li&gt;
&lt;li&gt;第 3 章 使用 Python 构建 Web 应用程序，构建一个初始的 Web 应用程序并与微服务集成。&lt;/li&gt;
&lt;li&gt;第 4 章 与数据服务交互，教您如何将应用程序迁移到不同的数据库服务。&lt;/li&gt;
&lt;li&gt;第 5 章 使用 React 构建 Web 视图。&lt;/li&gt;
&lt;li&gt;第 6 章 使用 Flux 创建可扩展 UI，帮助您理解如何使用 Flux 创建可扩展的应用程序。&lt;/li&gt;
&lt;li&gt;第 7 章 事件溯源和 CQRS，讨论如何以事件形式存储合约（transaction）。&lt;/li&gt;
&lt;li&gt;第 8 章 保护 Web 应用程序，让您的应用程序免于受到外部威胁。&lt;/li&gt;
&lt;li&gt;第 9 章 持续交付，应用程序频繁发布的相关知识。&lt;/li&gt;
&lt;li&gt;第 10 章 Docker 容器化您的服务，讨论容器服务和在 Docker 中运行应用程序。&lt;/li&gt;
&lt;li&gt;第 11 章 将应用程序部署到 AWS 平台上，教您如何在 AWS 上构建基础设施并建立应用程序的生产环境。&lt;/li&gt;
&lt;li&gt;第 12 章 将应用程序部署到 Azure 平台上，讨论如何在 Azure 上构建基础设施并建立应用程序的生产环境。&lt;/li&gt;
&lt;li&gt;第 13 章 监控云应用，了解不同的基础设施和应用的监控工具。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用本书您需要哪些工具和环境&#34;&gt;使用本书您需要哪些工具和环境&lt;/h2&gt;
&lt;p&gt;您需要在系统上安装 Python。一个文本编辑器，最好是 Vim、Sublime 或者 Notepad++。在有一个章节中您需要下载 POSTMAN，这是一个功能强大的 API 测试套件，可以作为作为 Chrome 扩展插件来安装。您可以从&lt;a href=&#34;https://chrome.google.com/webstore/detail/postman/fhbjgbiflinjbdggehcddcbncdddomop?hl=en&#34; title=&#34;这里下载&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里下载&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;除此之外，如果您还有如下网站的账号那就更好了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jenkins&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Amazon Web Services&lt;/li&gt;
&lt;li&gt;Terraform&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;目标读者&#34;&gt;目标读者&lt;/h2&gt;
&lt;p&gt;本书适用于具有 Python 基础知识、熟悉命令行和基于 HTTP 的应用程序基本原理的开发人员。对于那些想要了解如何构建、测试和扩展 Python 开发的应用程序的人员来说本书是个理想选择。不需要有使用 Python 构建微服务的经验。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>云原生 Java</title>
      <link>https://jimmysong.io/book/cloud-native-java/</link>
      <pubDate>Sun, 01 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/cloud-native-java/</guid>
      <description>
        
        
        &lt;p&gt;《云原生 Java》，Josh Long 著，张若飞、宋净超译，电子工业出版社出版，2017 年 7 月。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cloud-native-java.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;云原生 Java  图书封面&#34; width=&#34;50%&#34;data-img=&#34;cloud-native-java.jpg&#34;
         data-caption=&#34;&#34;
         
         
         data-width=&#34;610&#34;
         data-height=&#34;800&#34;
         
         
    /&gt;&lt;figcaption&gt;
            &lt;p&gt;云原生 Java  图书封面&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cloud-native-java/jimmy-song-with-josh-long.jpg&#34; data-img=&#34;/book/cloud-native-java/jimmy-song-with-josh-long.jpg&#34; data-width=&#34;1200&#34; data-height=&#34;800&#34; alt=&#34;image&#34; data-caption=&#34;Jimmy Song with Josh Long&#34;&gt;
    
  
  &lt;figcaption&gt;Jimmy Song with Josh Long&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;照片拍摄于 2018 年 11 月 3 日，北京&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;本书介绍&#34;&gt;本书介绍&lt;/h2&gt;
&lt;p&gt;传统企业与如亚马逊、Netflix 和 Etsy 这类企业之间的区别是什么？这些公司有完善云原生开发方法，这些方法使得他们能够保持优势并领先于竞争对手。本实践指南向 Java/JVM 开发人员展示如何使用 Spring Boot、Spring Cloud 和 Cloud Foundry 更快更好得构建软件。&lt;/p&gt;
&lt;p&gt;很多组织都已踏足云计算、测试驱动开发、微服务与持续集成和交付领域。本书作者 Josh Long 和 Kenny Bastani 将带您深入研究这些工具和方法，并帮助您将传统应用程序转变为真正的云原生应用程序。&lt;/p&gt;
&lt;p&gt;本书中包含以下四大部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;基础知识&lt;/strong&gt;：了解云原生思维背后的动机；配置和测试 Spring Boot 应用程序；将您的传统应用程序迁移至云端&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;微服务&lt;/strong&gt;：使用 Spring 构建 HTTP 和 RESTful 服务；在分布式系统中路由请求；建立更接近数据的边缘服务&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据整合&lt;/strong&gt;：使用 Spring Data 管理数据，并将分布式服务与 Spring 支持的事件驱动的，以消息传递为中心的架构集成&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;生产&lt;/strong&gt;：让您的系统可观测；使用服务代理来连接有状态的服务；了解持续交付背后的重要思想&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您正在构建云原生应用程序，这本书将是使用 Java 生态系统的基本指南。本书中包含了所有内容——构建弹性服务、管理数据流（通过 REST 和异步事件）、测试、部署和可观测性的关键任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;——Daniel Bryant&lt;/strong&gt;，SpectoLabs 的软件开发者和 CTO&lt;/p&gt;
&lt;p&gt;我预测无论是刚开始云原生之旅还是已经接近云原生的目标，所有参与其中的人都将从这本云原生 Java 的洞察和经验中受益。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;——Dava Syer 博士&lt;/strong&gt;，Spring 框架的贡献者，Spring Boot 和 Spring Cloud 的贡献者和联合创始人&lt;/p&gt;
&lt;h2 id=&#34;作者信息&#34;&gt;作者信息&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Josh Long&lt;/strong&gt;是一名 Spring 布道师，同时也是 InfoQ.com 的 Java queue 编辑，以及包括 Spring Recipes 第二版（Apress 出版社出版）在内的多本书籍的主要作者。Josh 在许多国际行业会议上发表过演讲，包括 TheServiceSide Java Symposium、SpringOne、OSCON、JavaZone、Devoxx、Java2Days 等。当他没在编写 SpringSource 的代码的时候，不是泡在 Java 用户组就是在咖啡店里喝咖啡。Josh 喜欢能够推动技术发展的解决方案。他的兴趣包括可扩展性、BPM、网格计算、移动计算和所谓的“智能”系统等。您可以在&lt;a href=&#34;http://blog.springsource.org/&#34; title=&#34;http://blog.springsource.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.springsource.org&lt;/a&gt;
或&lt;a href=&#34;http://joshlong.com/&#34; title=&#34;http://joshlong.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://joshlong.com&lt;/a&gt;
上浏览他的博客。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kenny Bastani&lt;/strong&gt;是 Pivotal 的 Spring 布道师。作为一名开源贡献者和博客作者，Kenny 关注图数据库、微服务等，并喜欢吸引一群充满热情的软件开发人员。Kenny 还是 OSCON、SpringOne Platform 和 GOTO 等行业会议的常客。他维护了一个关于软件架构的&lt;a href=&#34;http://kennybastani.com/&#34; title=&#34;个人博客&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;个人博客&lt;/a&gt;
，并提供用于构建事件驱动的微服务和无服务器架构的教程和开源参考示例。&lt;/p&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;序言（James Watters）xvii&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;序言（Rod Johnson）xix&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;前言 xxi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第Ⅰ部分 基础知识&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 1 章 云原生应用程序 3&lt;/li&gt;
&lt;li&gt;第 2 章 训练营：Spring Boot 和 Cloud Foundry 21&lt;/li&gt;
&lt;li&gt;第 3 章 符合十二要素程序风格的配置 67&lt;/li&gt;
&lt;li&gt;第 4 章 测试 85&lt;/li&gt;
&lt;li&gt;第 5 章 迁移遗留的应用程序 115&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;第Ⅱ部分 Web 服务&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 6 章 REST API 137&lt;/li&gt;
&lt;li&gt;第 7 章 路由 179&lt;/li&gt;
&lt;li&gt;第 8 章 边缘服务 197&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;第Ⅲ部分 数据整合&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 9 章 数据管理 251&lt;/li&gt;
&lt;li&gt;第 10 章 消息系统 303&lt;/li&gt;
&lt;li&gt;第 11 章 批处理和任务 325&lt;/li&gt;
&lt;li&gt;第 12 章 数据集成 363&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;第 IV 部分 生产&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第 13 章 可观测的系统 411&lt;/li&gt;
&lt;li&gt;第 14 章 服务代理 469&lt;/li&gt;
&lt;li&gt;第 15 章 持续交付 497&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;第 V 部分 附录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;附录 A 在 Java EE 中使用 Spring Boot 527&lt;/strong&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Cloud Native Go</title>
      <link>https://jimmysong.io/book/cloud-native-go/</link>
      <pubDate>Tue, 01 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://jimmysong.io/book/cloud-native-go/</guid>
      <description>
        
        
        &lt;p&gt;《Cloud Native Go》，Kevin Hoffman 著，宋净超、吴迎松、徐蓓、马超译，电子工业出版社出版，2017 年 8 月。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
    &lt;img src=&#34;cloud-native-go.jpg&#34; loading=&#34;lazy&#34; decoding=&#34;async&#34;
         alt=&#34;Cloud Native Go 图书封面&#34; width=&#34;50%&#34;data-img=&#34;cloud-native-go.jpg&#34;
         data-caption=&#34;&#34;
         
         
         data-width=&#34;610&#34;
         data-height=&#34;800&#34;
         
         
    /&gt;&lt;figcaption&gt;
            &lt;p&gt;Cloud Native Go 图书封面&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;本书作者：Kevin Hoffman &amp;amp; Dan Nemeth&lt;/li&gt;
&lt;li&gt;译者：宋净超、吴迎松、徐蓓、马超译&lt;/li&gt;
&lt;li&gt;出版社：电子工业出版社&lt;/li&gt;
&lt;li&gt;全名：Cloud Native Go - 基于 Go 和 React 的 web 云原生应用构建指南&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本书已由电子工业出版社出版，可以&lt;a href=&#34;https://item.m.jd.com/product/12123347.html&#34; title=&#34;在京东上购买&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在京东上购买&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cloud-native-go/jimmy-song-with-kevein-hoffman.jpg&#34; data-img=&#34;/book/cloud-native-go/jimmy-song-with-kevein-hoffman.jpg&#34; data-width=&#34;1200&#34; data-height=&#34;737&#34; alt=&#34;image&#34; data-caption=&#34;Jimmy Song with Kevin Hoffman&#34;&gt;
    
  
  &lt;figcaption&gt;Jimmy Song with Kevin Hoffman&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;照片拍摄于 2017 年 9 月 12 日，北京&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;简介&#34;&gt;简介&lt;/h2&gt;
&lt;p&gt;Cloud Native Go 向开发人员展示如何构建大规模云应用程序，在满足当今客户的强大需求的同时还可以动态扩展来处理几乎任何规模的数据量、流量或用户。&lt;/p&gt;
&lt;p&gt;Kevin Hoffman 和 Dan Nemeth 详细描述了现代云原生应用程序，阐明了与快速、可靠的云原生开发相关的因素、规则和习惯。他们还介绍了 Go 这种“简单优雅”的高性能语言，它特别适合于云开发。&lt;/p&gt;
&lt;p&gt;在本书中你将使用 Go 语言创建微服务，使用 ReactJS 和 Flux 添加前端 Web 组件，并掌握基于 Go 的高级云原生技术。Hoffman 和 Nemeth 展示了如何使用 Wercker、Docker 和 Dockerhub 等工具构建持续交付管道; 自动推送应用程序到平台上; 并系统地监控生产中的应用程序性能。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学习“云之道”：为什么开发好的云软件基本上是关于心态和规则&lt;/li&gt;
&lt;li&gt;了解为什么使用 Go 语言是云本地微服务开发的理想选择&lt;/li&gt;
&lt;li&gt;规划支持持续交付和部署的云应用程序&lt;/li&gt;
&lt;li&gt;设计服务生态系统，然后以 test-first 的方式构建它们&lt;/li&gt;
&lt;li&gt;将正在进行的工作推送到云&lt;/li&gt;
&lt;li&gt;使用事件源和 CQRS 模式来响应大规模和高吞吐量&lt;/li&gt;
&lt;li&gt;安全的基于云的 Web 应用程序：做与不做的选择&lt;/li&gt;
&lt;li&gt;使用第三方消息传递供应商创建响应式云应用程序&lt;/li&gt;
&lt;li&gt;使用 React 和 Flux 构建大规模，云友好的 GUI&lt;/li&gt;
&lt;li&gt;监控云中的动态扩展，故障转移和容错&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;章节简介如下图。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cloud-native-go/cloud-native-go-abstract.png&#34; data-img=&#34;/book/cloud-native-go/cloud-native-go-abstract.png&#34; data-width=&#34;3676&#34; data-height=&#34;1854&#34; alt=&#34;image&#34; data-caption=&#34;Cloud Native Go 各章节简介&#34;&gt;
    
  
  &lt;figcaption&gt;Cloud Native Go 各章节简介&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;关于作者&#34;&gt;关于作者&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Kevin Hoffman&lt;/strong&gt;通过现代化和以多种不同语言构建云原生服务的方式帮助企业将其应用程序引入云端。他 10 岁时开始编程，在重新组装的 CommodoreVIC-20 上自习 BASIC。从那时起，他已经沉迷于构建软件，并花了很多时间学习语言、框架和模式。他已经构建了从遥控摄影无人机、仿生性安全系统、超低延迟金融应用程序到移动应用程序等一系列软件。他在构建需要与 Pivotal Cloud Foundry 配合使用的自定义组件时爱上了 Go 语言。&lt;/p&gt;
&lt;p&gt;Kevin 是流行的幻想书系列（&lt;a href=&#34;http://amzn.to/2fc8iES&#34; title=&#34;The Sigilord Chronicles&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Sigilord Chronicles&lt;/a&gt;
 ）的作者，他热切地期待着最终能够将自己对构建软件的热爱与对构建幻想世界的热爱结合起来。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dan Nemeth&lt;/strong&gt;目前在 Pivotal 担任咨询解决方案架构师，负责支持 Pivotal Cloud Foundry。他从 Commodore 64 开始就一直在开发软件，从 1995 年起开始专业编码，使用 ANSIC 编写了用于本地 ISP 的 CGI 脚本。从那时起，他职业生涯的大部分时间里是作为独立顾问为从金融到制药行业提供解决方案，并使用当时流行的各种语言和框架。Dan 最近接受了 Go 作为自己的归宿，并热情地将它用于所有的项目。&lt;/p&gt;
&lt;p&gt;如果你发现 Dan 没在电脑前，他很可能就是在靠近安纳波利斯的水域玩帆船或飞钓。&lt;/p&gt;
&lt;h2 id=&#34;目录&#34;&gt;目录&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;第 1 章 云之道&lt;/li&gt;
&lt;li&gt;第 2 章  开始&lt;/li&gt;
&lt;li&gt;第 3 章  Go 入门&lt;/li&gt;
&lt;li&gt;第 4 章  持续交付&lt;/li&gt;
&lt;li&gt;第 5 章  在 Go 中构建微服务&lt;/li&gt;
&lt;li&gt;第 6 章  运用后端服务&lt;/li&gt;
&lt;li&gt;第 7 章  构建数据服务&lt;/li&gt;
&lt;li&gt;第 8 章  事件溯源和 CQRS&lt;/li&gt;
&lt;li&gt;第 9 章  使用 Go 构建 web 应用程序&lt;/li&gt;
&lt;li&gt;第 10 章  云安全&lt;/li&gt;
&lt;li&gt;第 11 章  使用 WebSockets&lt;/li&gt;
&lt;li&gt;第 12 章  使用 React 构建 Web 视图&lt;/li&gt;
&lt;li&gt;第 13 章  使用 Flux 构建可扩展的 UI&lt;/li&gt;
&lt;li&gt;第 14 章  创建完整应用 World of FluxCraft&lt;/li&gt;
&lt;li&gt;第 15 章  结论&lt;/li&gt;
&lt;li&gt;附录 A  云应用的故障排查&lt;/li&gt;
&lt;li&gt;索引&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
