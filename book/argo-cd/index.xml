<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – Argo CD 中文文档</title>
    <link>https://jimmysong.io/book/argo-cd/</link>
    <description>Recent content in Argo CD 中文文档 on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 30 Jun 2023 16:20:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/book/argo-cd/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Argo CD 简介</title>
      <link>https://jimmysong.io/book/argo-cd/overview/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/overview/</guid>
      <description>
        
        
        &lt;h2 id=&#34;什么是-argo-cd&#34;&gt;什么是 Argo CD？&lt;/h2&gt;
&lt;p&gt;Argo CD 是一个基于声明式 GitOps 的 Kubernetes 应用程序交付工具。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/book/argo-cd/overview/argocd-ui.gif&#34; data-img=&#34;/book/argo-cd/overview/argocd-ui.gif&#34; data-width=&#34;960&#34; data-height=&#34;464&#34; alt=&#34;image&#34; data-caption=&#34;Argo CD UI&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Argo CD UI&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;为什么选择-argo-cd&#34;&gt;为什么选择 Argo CD？&lt;/h2&gt;
&lt;p&gt;应用程序定义、配置和环境应该是声明式的，并进行版本控制。应用程序部署和生命周期管理应该是自动化的、可审计的和易于理解的。&lt;/p&gt;
&lt;h2 id=&#34;入门指南&#34;&gt;入门指南&lt;/h2&gt;
&lt;h3 id=&#34;快速入门&#34;&gt;快速入门&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create namespace argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;请参阅我们的&lt;a href=&#34;../getting-started/&#34; title=&#34;入门指南&#34;&gt;入门指南&lt;/a&gt;。我们还为其他功能提供了面向用户的文档。如果你想升级 ArgoCD，请参阅升级指南。我们还为有兴趣构建第三方集成的开发人员提供面向开发者的文档。&lt;/p&gt;
&lt;h2 id=&#34;工作原理&#34;&gt;工作原理&lt;/h2&gt;
&lt;p&gt;Argo CD 遵循使用 Git 存储库作为定义期望应用程序状态的真实来源的 GitOps 模式。Kubernetes 清单可以通过以下几种方式指定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kustomize.io/&#34; title=&#34;kustomize&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kustomize&lt;/a&gt; 应用程序&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/&#34; title=&#34;helm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;helm&lt;/a&gt; chart&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jsonnet.org/&#34; title=&#34;jsonnet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;jsonnet&lt;/a&gt; 文件&lt;/li&gt;
&lt;li&gt;YAML/json 清单的普通目录&lt;/li&gt;
&lt;li&gt;配置为配置管理插件的任何自定义配置管理工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Argo CD 自动部署指定目标环境中所需的应用程序状态。应用程序部署可以跟踪分支、标签的更新或固定到 Git 提交的特定版本的清单。请参见&lt;a href=&#34;../user-guide/tracking-strategies/&#34; title=&#34;跟踪策略&#34;&gt;跟踪策略&lt;/a&gt;以了解有关可用跟踪策略的更多详细信息。&lt;/p&gt;
&lt;p&gt;针对 Sig Apps 社区会议展示的快速 10 分钟的 Argo CD 概述，请查看演示：&lt;/p&gt;


    
    &lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
      &lt;iframe allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&#34; allowfullscreen=&#34;allowfullscreen&#34; loading=&#34;eager&#34; referrerpolicy=&#34;strict-origin-when-cross-origin&#34; src=&#34;https://www.youtube.com/embed/aWDIQMbp1cc?autoplay=0&amp;controls=1&amp;end=0&amp;loop=0&amp;mute=0&amp;start=0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; title=&#34;YouTube video&#34;
      &gt;&lt;/iframe&gt;
    &lt;/div&gt;

&lt;h2 id=&#34;架构&#34;&gt;架构&lt;/h2&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
  
  
  &lt;figcaption&gt;ArgoCD 架构&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;Argo CD 实现为 Kubernetes 控制器，它持续监视正在运行的应用程序，并将当前的实时状态与所需的目标状态（如 Git 存储库中指定的状态）进行比较。实时状态偏离目标状态的已部署应用程序被视为“OutofSync”。Argo CD 报告并可视化差异，同时提供自动或手动同步实时状态到所需目标状态的设施。对 Git 存储库中所需的目标状态所做的任何修改都可以自动应用并反映在指定的目标环境中。&lt;/p&gt;
&lt;p&gt;有关详细信息，请参见&lt;a href=&#34;../operator-manual/architecture/&#34; title=&#34;架构概述&#34;&gt;架构概述&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;功能&#34;&gt;功能&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;自动将应用程序部署到指定的目标环境&lt;/li&gt;
&lt;li&gt;支持多个配置管理/模板工具（Kustomize、Helm、Jsonnet、plain-YAML）&lt;/li&gt;
&lt;li&gt;能够管理和部署到多个集群&lt;/li&gt;
&lt;li&gt;SSO 集成（OIDC、OAuth2、LDAP、SAML 2.0、GitHub、GitLab、Microsoft、LinkedIn）&lt;/li&gt;
&lt;li&gt;授权的多租户和 RBAC 策略&lt;/li&gt;
&lt;li&gt;回滚/在任何提交到 Git 存储库中的应用程序配置中进行回滚&lt;/li&gt;
&lt;li&gt;应用程序资源的健康状态分析&lt;/li&gt;
&lt;li&gt;自动配置漂移检测和可视化&lt;/li&gt;
&lt;li&gt;应用程序同步到其所需状态的自动或手动同步&lt;/li&gt;
&lt;li&gt;Web UI 提供应用程序活动的实时视图&lt;/li&gt;
&lt;li&gt;用于自动化和 CI 集成的 CLI&lt;/li&gt;
&lt;li&gt;Webhook 集成（GitHub、BitBucket、GitLab）&lt;/li&gt;
&lt;li&gt;访问令牌用于自动化&lt;/li&gt;
&lt;li&gt;为覆盖 Git 中的 Helm 参数而提供的参数重写&lt;/li&gt;
&lt;li&gt;用于支持复杂应用程序升级（例如蓝/绿和金丝雀升级）的 PreSync、Sync、PostSync 钩子&lt;/li&gt;
&lt;li&gt;应用程序事件和 API 调用的审计跟踪&lt;/li&gt;
&lt;li&gt;Prometheus 指标&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开发状态&#34;&gt;开发状态&lt;/h2&gt;
&lt;p&gt;Argo CD 正在由社区积极开发。我们的发布可以在&lt;a href=&#34;https://github.com/argoproj/argo-cd/releases&#34; title=&#34;这里&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;找到。&lt;/p&gt;
&lt;h2 id=&#34;采用情况&#34;&gt;采用情况&lt;/h2&gt;
&lt;p&gt;正式采用 Argo CD 的组织可以在&lt;a href=&#34;https://github.com/argoproj/argo-cd/blob/master/USERS.md&#34; title=&#34;这里&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;这里&lt;/a&gt;找到。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>理解基础</title>
      <link>https://jimmysong.io/book/argo-cd/understand-the-basics/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/understand-the-basics/</guid>
      <description>
        
        
        &lt;p&gt;在有效使用 Argo CD 之前，有必要了解该平台构建的底层技术。还有必要了解向你提供的功能以及如何使用它们。以下部分提供了一些有用的链接来建立这种理解。&lt;/p&gt;
&lt;h2 id=&#34;学习基础知识&#34;&gt;学习基础知识&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;浏览在线 Docker 和 Kubernetes 教程：
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.freecodecamp.org/a-beginner-friendly-introduction-to-containers-vms-and-docker-79a9e3e119b&#34; title=&#34;适合初学者的容器、虚拟机和 Docker 简介&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;适合初学者的容器、虚拟机和 Docker 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.edx.org/course/introduction-to-kubernetes&#34; title=&#34;Kubernetes 简介&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 简介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tutorials/&#34; title=&#34;教程&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;根据你计划如何模板化你的应用程序：
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kustomize.io/&#34; title=&#34;Kustomize&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kustomize&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/&#34; title=&#34;Helm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果你要与 CI 工具集成：
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.github.com/en/actions&#34; title=&#34;GitHub Actions 文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Actions 文档&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jenkins.io/doc/book/&#34; title=&#34;Jenkins 用户指南&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins 用户指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>核心概念</title>
      <link>https://jimmysong.io/book/argo-cd/core-concepts/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/core-concepts/</guid>
      <description>
        
        
        &lt;p&gt;假设你熟悉 Git、Docker、Kubernetes、持续交付和 GitOps 的核心概念。以下是 Argo CD 特有的一些概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;应用程序&lt;/strong&gt;由清单定义的一组 Kubernetes 资源。这是自定义资源定义 (CRD)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;应用程序源类型&lt;/strong&gt;使用哪个&lt;strong&gt;工具来构建应用程序。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;目标状态&lt;/strong&gt;应用程序的所需状态，由 Git 存储库中的文件表示。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;实时状态&lt;/strong&gt;该应用程序的实时状态。部署了哪些 pod 等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步状态&lt;/strong&gt;实时状态是否与目标状态匹配。部署的应用程序是否与 Git 所说的一样？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步&lt;/strong&gt;使应用程序移动到其目标状态的过程。例如，通过将更改应用到 Kubernetes 集群。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;同步操作状态&lt;/strong&gt;同步是否成功。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;刷新&lt;/strong&gt;将 Git 中的最新代码与实时状态进行比较。弄清楚有什么不同。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;健康&lt;/strong&gt;应用程序的健康状况，是否正常运行？它可以满足请求吗？&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;工具&lt;/strong&gt;从文件目录创建清单的工具。例如定制。请参阅&lt;strong&gt;应用程序源类型&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置管理工具&lt;/strong&gt;请参阅&lt;strong&gt;工具&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;配置管理插件&lt;/strong&gt;自定义工具。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>安装</title>
      <link>https://jimmysong.io/book/argo-cd/cli-installation/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/cli-installation/</guid>
      <description>
        
        
        &lt;p&gt;你可以从此存储库的&lt;a href=&#34;https://github.com/argoproj/argo-cd/releases/latest&#34; title=&#34;最新发布页面&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;最新发布页面&lt;/a&gt;下载最新的 Argo CD 版本，其中将包含&lt;code&gt;argocd&lt;/code&gt; CLI。&lt;/p&gt;
&lt;h2 id=&#34;linux-和-wsl&#34;&gt;Linux 和 WSL&lt;/h2&gt;
&lt;h3 id=&#34;archlinux&#34;&gt;ArchLinux&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pacman -S argocd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;homebrew&#34;&gt;Homebrew&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install argocd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用-curl-下载&#34;&gt;使用 curl 下载&lt;/h3&gt;
&lt;h4 id=&#34;下载最新版本&#34;&gt;下载最新版本&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo install -m &lt;span class=&#34;m&#34;&gt;555&lt;/span&gt; argocd-linux-amd64 /usr/local/bin/argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm argocd-linux-amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;下载具体版本&#34;&gt;下载具体版本&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;VERSION&lt;/code&gt;将以下命令中的替换设置&lt;code&gt;&amp;lt;TAG&amp;gt;&lt;/code&gt;为你要下载的 Argo CD 版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&amp;lt;TAG&amp;gt; &lt;span class=&#34;c1&#34;&gt;# Select desired TAG from https://github.com/argoproj/argo-cd/releases&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/download/&lt;span class=&#34;nv&#34;&gt;$VERSION&lt;/span&gt;/argocd-linux-amd64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo install -m &lt;span class=&#34;m&#34;&gt;555&lt;/span&gt; argocd-linux-amd64 /usr/local/bin/argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm argocd-linux-amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你现在应该能够运行&lt;code&gt;argocd&lt;/code&gt;命令。&lt;/p&gt;
&lt;h2 id=&#34;mac-m1&#34;&gt;Mac (M1)&lt;/h2&gt;
&lt;h3 id=&#34;使用-curl-下载-1&#34;&gt;使用 curl 下载&lt;/h3&gt;
&lt;p&gt;你可以在上面的链接查看最新版本的 Argo CD 或运行以下命令来获取版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl --silent &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.github.com/repos/argoproj/argo-cd/releases/latest&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;tag_name&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -E &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/.*&amp;#34;([^&amp;#34;]+)&amp;#34;.*/\1/&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将以下命令替换&lt;code&gt;VERSION&lt;/code&gt;为你要下载的 Argo CD 版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -sSL -o argocd-darwin-arm64 https://github.com/argoproj/argo-cd/releases/download/&lt;span class=&#34;nv&#34;&gt;$VERSION&lt;/span&gt;/argocd-darwin-arm64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装 Argo CD CLI 二进制文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo install -m &lt;span class=&#34;m&#34;&gt;555&lt;/span&gt; argocd-darwin-arm64 /usr/local/bin/argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm argocd-darwin-arm64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mac&#34;&gt;Mac&lt;/h2&gt;
&lt;h3 id=&#34;homebrew-1&#34;&gt;Homebrew&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install argocd
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;使用-curl-下载-2&#34;&gt;使用 curl 下载&lt;/h3&gt;
&lt;p&gt;你可以在上面的链接查看最新版本的 Argo CD 或运行以下命令来获取版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;VERSION&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;curl --silent &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://api.github.com/repos/argoproj/argo-cd/releases/latest&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#34;tag_name&amp;#34;&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sed -E &lt;span class=&#34;s1&#34;&gt;&amp;#39;s/.*&amp;#34;([^&amp;#34;]+)&amp;#34;.*/\1/&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将以下命令替换&lt;code&gt;VERSION&lt;/code&gt;为你要下载的 Argo CD 版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -sSL -o argocd-darwin-amd64 https://github.com/argoproj/argo-cd/releases/download/&lt;span class=&#34;nv&#34;&gt;$VERSION&lt;/span&gt;/argocd-darwin-amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装 Argo CD CLI 二进制文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo install -m &lt;span class=&#34;m&#34;&gt;555&lt;/span&gt; argocd-darwin-amd64 /usr/local/bin/argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm argocd-darwin-amd64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完成上述任一说明后，你现在应该能够运行&lt;code&gt;argocd&lt;/code&gt;命令。&lt;/p&gt;
&lt;h2 id=&#34;windows&#34;&gt;Windows&lt;/h2&gt;
&lt;h3 id=&#34;使用-powershell-下载invoke-webrequest&#34;&gt;使用 PowerShell 下载：Invoke-WebRequest&lt;/h3&gt;
&lt;p&gt;你可以在上面的链接查看最新版本的 Argo CD 或运行以下命令来获取版本：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$version = (Invoke-RestMethod https://api.github.com/repos/argoproj/argo-cd/releases/latest).tag_name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将以下命令替换&lt;code&gt;$version&lt;/code&gt;为你要下载的 Argo CD 版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://github.com/argoproj/argo-cd/releases/download/&amp;#34;&lt;/span&gt; + &lt;span class=&#34;nv&#34;&gt;$version&lt;/span&gt; + &lt;span class=&#34;s2&#34;&gt;&amp;#34;/argocd-windows-amd64.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$output&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;argocd.exe&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Invoke-WebRequest -Uri &lt;span class=&#34;nv&#34;&gt;$url&lt;/span&gt; -OutFile &lt;span class=&#34;nv&#34;&gt;$output&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另请注意，你可能需要将该文件移至你的 PATH 中。&lt;/p&gt;
&lt;p&gt;完成上述说明后，你现在应该能够运行&lt;code&gt;argocd&lt;/code&gt;命令。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>入门</title>
      <link>https://jimmysong.io/book/argo-cd/getting-started/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/getting-started/</guid>
      <description>
        
        
        &lt;p&gt;🔔 提示：本指南假设你对 Argo CD 所基于的工具有一定的了解。请阅读&lt;a href=&#34;../understand-the-basics/&#34; title=&#34;了解基础知识&#34;&gt;了解基础知识&lt;/a&gt;以了解这些工具。&lt;/p&gt;
&lt;h2 id=&#34;要求&#34;&gt;要求&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;安装 &lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/install-kubectl/&#34; title=&#34;kubectl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubectl&lt;/a&gt; 命令行工具。&lt;/li&gt;
&lt;li&gt;有一个 &lt;a href=&#34;https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/&#34; title=&#34;kubeconfig&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubeconfig&lt;/a&gt; 文件（默认位置是&lt;code&gt;~/.kube/config&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;CoreDNS。可以通过以下方式为 microk8s 启用&lt;code&gt;microk8s enable dns &amp;amp;&amp;amp; microk8s stop &amp;amp;&amp;amp; microk8s start&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-安装-argo-cd&#34;&gt;1. 安装 Argo CD&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create namespace argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这将创建一个新的命名空间，&lt;code&gt;argocd&lt;/code&gt;，Argo CD 服务和应用程序资源将驻留在其中。&lt;/p&gt;
&lt;p&gt;🔔 警告：安装清单包括&lt;code&gt;ClusterRoleBinding&lt;/code&gt;引用命名空间的资源&lt;code&gt;argocd&lt;/code&gt;。如果你要将 Argo CD 安装到不同的命名空间中，请确保更新命名空间引用。&lt;/p&gt;
&lt;p&gt;如果你对 UI、SSO、多集群功能不感兴趣，那么你可以仅安装&lt;a href=&#34;../operator-manual/installation/#core&#34; title=&#34;核心&#34;&gt;核心&lt;/a&gt; Argo CD 组件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create namespace argocd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/core-install.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此默认安装将具有自签名证书，如果没有一些额外的工作就无法访问。执行以下操作之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;按照&lt;a href=&#34;../operator-manual/tls/&#34; title=&#34;说明配置证书&#34;&gt;说明配置证书&lt;/a&gt;（并确保客户端操作系统信任它）。&lt;/li&gt;
&lt;li&gt;配置客户端操作系统以信任自签名证书。&lt;/li&gt;
&lt;li&gt;在本指南中的所有 Argo CD CLI 操作上使用 &amp;ndash;insecure 标志。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;用于&lt;code&gt;argocd login --core&lt;/code&gt;配置 CLI 访问并&lt;a href=&#34;../user-guide/commands/argocd_login/&#34; title=&#34;跳过&#34;&gt;跳过&lt;/a&gt;步骤 3-5。&lt;/p&gt;
&lt;h2 id=&#34;2-下载-argo-cd-cli&#34;&gt;2. 下载 Argo CD CLI&lt;/h2&gt;
&lt;p&gt;从 &lt;a href=&#34;https://github.com/argoproj/argo-cd/releases/latest&#34; title=&#34;GitHub&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt; 下载最新的 Argo CD 版本。更详细的安装说明可以通过 &lt;a href=&#34;../cli-installation/&#34; title=&#34;CLI 安装文档&#34;&gt;CLI 安装文档&lt;/a&gt;找到。&lt;/p&gt;
&lt;p&gt;还适用于 Mac、Linux 和 WSL Homebrew：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install argocd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-访问-argo-cd-api-服务器&#34;&gt;3. 访问 Argo CD API 服务器&lt;/h2&gt;
&lt;p&gt;默认情况下，Argo CD API 服务器不向外部 IP 公开。要访问 API 服务器，请选择以下技术之一来公开 Argo CD API 服务器：&lt;/p&gt;
&lt;h3 id=&#34;服务类型负载均衡器&#34;&gt;服务类型负载均衡器&lt;/h3&gt;
&lt;p&gt;将 argocd-server 服务类型更改为&lt;code&gt;LoadBalancer&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl patch svc argocd-server -n argocd -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;: {&amp;#34;type&amp;#34;: &amp;#34;LoadBalancer&amp;#34;}}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ingress&#34;&gt;Ingress&lt;/h3&gt;
&lt;p&gt;请按照&lt;a href=&#34;../operator-manual/ingress/&#34; title=&#34;ingress 文档&#34;&gt;ingress 文档&lt;/a&gt;了解如何使用 ingress 配置 Argo CD。&lt;/p&gt;
&lt;h3 id=&#34;转发端口&#34;&gt;转发端口&lt;/h3&gt;
&lt;p&gt;Kubectl 端口转发还可用于连接到 API 服务器，而无需公开服务。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl port-forward svc/argocd-server -n argocd 8080:443
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后可以使用 https://localhost:8080 访问 API 服务器&lt;/p&gt;
&lt;h2 id=&#34;4-使用-cli-登录&#34;&gt;4. 使用 CLI 登录&lt;/h2&gt;
&lt;p&gt;帐户的初始密码&lt;code&gt;admin&lt;/code&gt;是自动生成的，并以明文形式存储 在 Argo CD 安装命名空间中&lt;code&gt;password&lt;/code&gt;命名的机密字段中。&lt;code&gt;argocd-initial-admin-secret&lt;/code&gt;你可以使用 CLI 简单地检索此密码&lt;code&gt;argocd&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd admin initial-password -n argocd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;🔔 警告：&lt;code&gt;argocd-initial-admin-secret&lt;/code&gt;更改密码后，你应该从 Argo CD 命名空间中删除。该秘密除了以明文形式存储最初生成的密码外没有其他用途，并且可以随时安全地删除。如果必须重新生成新的管理员密码，Argo CD 将根据需要重新创建它。&lt;/p&gt;
&lt;p&gt;使用上面的用户名&lt;code&gt;admin&lt;/code&gt;和密码，登录 Argo CD 的 IP 或主机名：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd login &amp;lt;ARGOCD_SERVER&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;🔔 注意：CLI 环境必须能够与 Argo CD API 服务器通信。如果无法按照上述步骤 3 中的描述直接访问它，你可以告诉 CLI 通过以下机制之一使用端口转发来访问它：1) 向每个 CLI 命令添加 &lt;code&gt;--port-forward-namespace argocd&lt;/code&gt;标志；或 2) 设置&lt;code&gt;ARGOCD_OPTS&lt;/code&gt;环境变量：&lt;code&gt;export ARGOCD_OPTS=&#39;--port-forward-namespace argocd&#39;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;使用以下命令更改密码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd account update-password
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;5-注册集群以部署应用程序可选&#34;&gt;5. 注册集群以部署应用程序（可选）&lt;/h2&gt;
&lt;p&gt;此步骤将集群的凭据注册到 Argo CD，并且仅在部署到外部集群时才需要。在内部部署时（到运行 Argo CD 的同一集群），应使用 &lt;a href=&#34;https://kubernetes.default.svc&#34; title=&#34;https://kubernetes.default.svc&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://kubernetes.default.svc&lt;/a&gt; 作为应用程序的 K8s API 服务器地址。&lt;/p&gt;
&lt;p&gt;首先列出当前 kubeconfig 中的所有集群上下文：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl config get-contexts -o name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从列表中选择一个上下文名称并将其提供给&lt;code&gt;argocd cluster add CONTEXTNAME&lt;/code&gt;。例如，对于 docker-desktop 上下文，运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd cluster add docker-desktop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上面的命令将 ServiceAccount ( &lt;code&gt;argocd-manager&lt;/code&gt;) 安装到该 kubectl 上下文的 &lt;code&gt;kube-system&lt;/code&gt; 命名空间中，并将服务帐户绑定到管理员级别的 ClusterRole。Argo CD 使用此服务帐户令牌来执行其管理任务（即部署 / 监控）。&lt;/p&gt;
&lt;p&gt;🔔 注意：可以修改 &lt;code&gt;argocd-manager-role&lt;/code&gt; 角色的规则，使其仅具有对有限的命名空间、组和类型集的 &lt;code&gt;create&lt;/code&gt;、&lt;code&gt;update&lt;/code&gt;、&lt;code&gt;patch&lt;/code&gt;、&lt;code&gt;delete&lt;/code&gt;权限。但是，要使 Argo CD 发挥作用，在集群作用域中需要&lt;code&gt;get&lt;/code&gt;、&lt;code&gt;list&lt;/code&gt;和&lt;code&gt;watch&lt;/code&gt;权限。&lt;/p&gt;
&lt;h2 id=&#34;6-从-git-存储库创建应用程序&#34;&gt;6. 从 Git 存储库创建应用程序&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/argoproj/argocd-example-apps.git&#34; title=&#34;https://github.com/argoproj/argocd-example-apps.git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/argoproj/argocd-example-apps.git&lt;/a&gt; 提供了包含 guestbook 应用程序的示例存储库，以演示 Argo CD 的工作原理。&lt;/p&gt;
&lt;h3 id=&#34;通过-cli-创建应用程序&#34;&gt;通过 CLI 创建应用程序&lt;/h3&gt;
&lt;p&gt;首先，我们需要运行以下命令将当前命名空间设置为 argocd：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl config set-context --current --namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;argocd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用以下命令创建示例 guestbook 应用程序：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd app create guestbook --repo https://github.com/argoproj/argocd-example-apps.git --path guestbook --dest-server https://kubernetes.default.svc --dest-namespace default
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;通过-ui-创建应用程序&#34;&gt;通过 UI 创建应用程序&lt;/h3&gt;
&lt;p&gt;打开浏览器访问 Argo CD 外部 UI，通过在浏览器中访问 IP / 主机名进行登录，并使用步骤 4 中设置的凭据。&lt;/p&gt;
&lt;p&gt;登录后，点击 &lt;strong&gt;+ New App&lt;/strong&gt; 按钮，如下图：&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/book/argo-cd/getting-started/new-app_hub7edc8ab4f52a47418f6e5466c606a09_16592_305x350_resize_q75_h2_lanczos_3.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/book/argo-cd/getting-started/new-app.png&#34; data-img=&#34;/book/argo-cd/getting-started/new-app.png&#34; data-width=&#34;305&#34; data-height=&#34;350&#34; alt=&#34;image&#34; data-caption=&#34;&amp;#43; New App 按钮&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;&amp;#43; New App 按钮&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;为你的应用程序命名&lt;code&gt;guestbook&lt;/code&gt;，使用项目&lt;code&gt;default&lt;/code&gt;，并将同步策略保留为&lt;code&gt;Manual&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/book/argo-cd/getting-started/app-ui-information_hu90ad247daa959f358d7b6a99698e15d9_17225_441x473_resize_q75_h2_lanczos_3.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/book/argo-cd/getting-started/app-ui-information.png&#34; data-img=&#34;/book/argo-cd/getting-started/app-ui-information.png&#34; data-width=&#34;441&#34; data-height=&#34;473&#34; alt=&#34;image&#34; data-caption=&#34;应用程序信息&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;应用程序信息&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;通过将存储库 url 设置为 github 存储库 url，将 &lt;a href=&#34;https://github.com/argoproj/argocd-example-apps.git&#34; title=&#34;https://github.com/argoproj/argocd-example-apps.git&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/argoproj/argocd-example-apps.git&lt;/a&gt; 存储库连接到 Argo CD，将修订保留为&lt;code&gt;HEAD&lt;/code&gt;，并将路径设置为&lt;code&gt;guestbook&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
  
  
  &lt;figcaption&gt;连接仓库&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;对于&lt;strong&gt;Destination&lt;/strong&gt;，将集群 URL 设置为&lt;code&gt;https://kubernetes.default.svc&lt;/code&gt;（或&lt;code&gt;in-cluster&lt;/code&gt;集群名称），将命名空间设置为&lt;code&gt;default&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/book/argo-cd/getting-started/destination_hu303dd245ef4b1180fac2dfacf9b7b4a8_9110_263x302_resize_q75_h2_lanczos_3.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/book/argo-cd/getting-started/destination.png&#34; data-img=&#34;/book/argo-cd/getting-started/destination.png&#34; data-width=&#34;263&#34; data-height=&#34;302&#34; alt=&#34;image&#34; data-caption=&#34;目的地&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;目的地&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;填写完以上信息后，点击 UI 顶部的&lt;strong&gt;Create&lt;/strong&gt; &lt;code&gt;guestbook&lt;/code&gt;即可创建应用程序：&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/book/argo-cd/getting-started/create-app_hu81221ef97954a3ccb50d5ad924d5c54b_3340_196x44_resize_q75_h2_lanczos_3.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/book/argo-cd/getting-started/create-app.png&#34; data-img=&#34;/book/argo-cd/getting-started/create-app.png&#34; data-width=&#34;196&#34; data-height=&#34;44&#34; alt=&#34;image&#34; data-caption=&#34;目的地&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;目的地&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;7-同步部署应用程序&#34;&gt;7. 同步（部署）应用程序&lt;/h2&gt;
&lt;h3 id=&#34;通过-cli-同步&#34;&gt;通过 CLI 同步&lt;/h3&gt;
&lt;p&gt;创建 guestbook 应用程序后，你现在可以查看其状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ argocd app get guestbook
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Name:               guestbook
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Server:             https://kubernetes.default.svc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Namespace:          default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;URL:                https://10.97.164.88/applications/guestbook
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Repo:               https://github.com/argoproj/argocd-example-apps.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Target:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Path:               guestbook
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Sync Policy:        &amp;lt;none&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Sync Status:        OutOfSync from  &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;1ff8a67&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Health Status:      Missing
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;GROUP  KIND        NAMESPACE  NAME          STATUS     HEALTH
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;apps   Deployment  default    guestbook-ui  OutOfSync  Missing
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       Service     default    guestbook-ui  OutOfSync  Missing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;应用程序状态为初始&lt;code&gt;OutOfSync&lt;/code&gt;状态，因为应用程序尚未部署，并且尚未创建 Kubernetes 资源。要同步（部署）应用程序，请运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd app sync guestbook
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令从存储库检索清单并执行&lt;code&gt;kubectl apply&lt;/code&gt;其中一个清单。guestbook 应用程序现已运行，你现在可以查看其资源组件、日志、事件和评估的健康状态。&lt;/p&gt;
&lt;h3 id=&#34;通过-ui-同步&#34;&gt;通过 UI 同步&lt;/h3&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/book/argo-cd/getting-started/guestbook-app_hubaa4d6b94663f607f697244aa2f6bb67_64175_769x797_resize_q75_h2_lanczos_3.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/book/argo-cd/getting-started/guestbook-app.png&#34; data-img=&#34;/book/argo-cd/getting-started/guestbook-app.png&#34; data-width=&#34;769&#34; data-height=&#34;797&#34; alt=&#34;image&#34; data-caption=&#34;guestbook 应用&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;guestbook 应用&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/book/argo-cd/getting-started/guestbook-tree_hu2328fd1d85b889825f745ae7933123fa_71573_1428x507_resize_q75_h2_lanczos_3.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/book/argo-cd/getting-started/guestbook-tree.png&#34; data-img=&#34;/book/argo-cd/getting-started/guestbook-tree.png&#34; data-width=&#34;1428&#34; data-height=&#34;507&#34; alt=&#34;image&#34; data-caption=&#34;查看应用&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;查看应用&lt;/figcaption&gt;
  
&lt;/figure&gt;

      </description>
    </item>
    
    <item>
      <title>操作手册</title>
      <link>https://jimmysong.io/book/argo-cd/operator-manual/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/operator-manual/</guid>
      <description>
        
        
        &lt;p&gt;本指南适用于想要为其他开发人员安装和配置 Argo CD 的管理员和操作员。&lt;/p&gt;
&lt;p&gt;🔔 注意：请确保你已完成 &lt;a href=&#34;../getting-started/&#34; title=&#34;入门指南&#34;&gt;入门指南&lt;/a&gt;。&lt;/p&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/operator-manual/architecture/&#34;&gt;架构概述&lt;/a&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/operator-manual/applicationset/&#34;&gt;ApplicationSet 控制器&lt;/a&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;



      </description>
    </item>
    
    <item>
      <title>用户手册</title>
      <link>https://jimmysong.io/book/argo-cd/user-guide/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/user-guide/</guid>
      <description>
        
        
        &lt;p&gt;本指南适用于已安装 Argo CD 并正在管理应用程序的开发人员。&lt;/p&gt;
&lt;p&gt;🔔 注意：请确保你已完成 &lt;a href=&#34;../getting-started/&#34; title=&#34;入门指南&#34;&gt;入门指南&lt;/a&gt;。&lt;/p&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/user-guide/application-sources/&#34;&gt;工具&lt;/a&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/user-guide/auto-sync/&#34;&gt;自动同步策略&lt;/a&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/user-guide/compare-options/&#34;&gt;对比选项&lt;/a&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/user-guide/sync-options/&#34;&gt;同步选项 &lt;/a&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/user-guide/environment-variables/&#34;&gt;环境变量&lt;/a&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;a href=&#34;https://jimmysong.io/book/argo-cd/user-guide/selective-sync/&#34;&gt;选择性同步&lt;/a&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;



      </description>
    </item>
    
    <item>
      <title>开发手册</title>
      <link>https://jimmysong.io/book/argo-cd/developer-guide/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/developer-guide/</guid>
      <description>
        
        
        &lt;p&gt;🔔 警告：你可能不想阅读这部分文档。本手册的这一部分面向想要开发与 Argo CD 交互的第三方应用程序的人们，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;聊天机器人&lt;/li&gt;
&lt;li&gt;Slack 集成&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🔔 注意：请确保你已完成 &lt;a href=&#34;../getting-started/&#34; title=&#34;入门指南&#34;&gt;入门指南&lt;/a&gt;。&lt;/p&gt;




      </description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://jimmysong.io/book/argo-cd/faq/</link>
      <pubDate>Fri, 30 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/argo-cd/faq/</guid>
      <description>
        
        
        &lt;h2 id=&#34;我删除损坏了我的存储库无法删除我的应用程序&#34;&gt;我删除/损坏了我的存储库，无法删除我的应用程序。&lt;/h2&gt;
&lt;p&gt;如果 Argo CD 无法生成清单，则无法删除应用程序。你需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;恢复/修复你的存储库。&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;cascade=false&lt;/code&gt;删除应用程序，然后手动删除资源。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;为什么我的应用程序在成功同步后仍然处于-outofsync-状态&#34;&gt;为什么我的应用程序在成功同步后仍然处于 &lt;code&gt;OutOfSync&lt;/code&gt; 状态？&lt;/h2&gt;
&lt;p&gt;请查看 差异比较 文档，了解资源可能处于 &lt;code&gt;OutOfSync&lt;/code&gt; 状态的原因，以及配置 Argo CD 忽略字段的方法 当存在不同之处时。&lt;/p&gt;
&lt;h2 id=&#34;为什么我的应用程序一直处于progressing状态&#34;&gt;为什么我的应用程序一直处于“Progressing”状态？&lt;/h2&gt;
&lt;p&gt;Argo CD 为几种标准 Kubernetes 类型提供健康状态。 &lt;code&gt;Ingress&lt;/code&gt;、&lt;code&gt;StatefulSet&lt;/code&gt; 和 &lt;code&gt;SealedSecret&lt;/code&gt; 类型存在已知问题，可能会导致健康检查返回 &lt;code&gt;Progressing&lt;/code&gt; 状态而不是 &lt;code&gt;Healthy&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ingress&lt;/code&gt; 如果 &lt;code&gt;status.loadBalancer.ingress&lt;/code&gt; 列表是非空的，并且至少有一个值为 &lt;code&gt;hostname&lt;/code&gt; 或 &lt;code&gt;IP&lt;/code&gt;，则被视为健康状态。一些 Ingress 控制器（&lt;a href=&#34;https://github.com/heptio/contour/issues/403&#34; title=&#34;contour&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;contour&lt;/a&gt;、&lt;a href=&#34;https://github.com/argoproj/argo-cd/issues/968#issuecomment-451082913&#34; title=&#34;traefik&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;traefik&lt;/a&gt;）不会更新 &lt;code&gt;status.loadBalancer.ingress&lt;/code&gt; 字段，这会导致 &lt;code&gt;Ingress&lt;/code&gt; 永久停留在 &lt;code&gt;Progressing&lt;/code&gt; 状态。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;StatefulSet&lt;/code&gt; 如果 &lt;code&gt;status.updatedReplicas&lt;/code&gt; 字段的值与 &lt;code&gt;spec.replicas&lt;/code&gt; 字段匹配，则被视为健康状态。由于 Kubernetes bug &lt;a href=&#34;https://github.com/kubernetes/kubernetes/issues/68573&#34; title=&#34;kubernetes/kubernetes#68573&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubernetes/kubernetes#68573&lt;/a&gt;，&lt;code&gt;status.updatedReplicas&lt;/code&gt; 没有填充。因此，除非你运行包括修复程序 &lt;a href=&#34;https://github.com/kubernetes/kubernetes/pull/67570&#34; title=&#34;kubernetes/kubernetes#67570&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubernetes/kubernetes#67570&lt;/a&gt; 的 Kubernetes 版本，否则 &lt;code&gt;StatefulSet&lt;/code&gt; 可能会保持在 &lt;code&gt;Progressing&lt;/code&gt; 状态。&lt;/li&gt;
&lt;li&gt;你的 &lt;code&gt;StatefulSet&lt;/code&gt; 或 &lt;code&gt;DaemonSet&lt;/code&gt; 正在使用 &lt;code&gt;OnDelete&lt;/code&gt; 而不是 &lt;code&gt;RollingUpdate&lt;/code&gt; 策略。请参见 &lt;a href=&#34;https://github.com/argoproj/argo-cd/issues/1881&#34; title=&#34;#1881&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#1881&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;对于 &lt;code&gt;SealedSecret&lt;/code&gt;，请参阅 为什么 &lt;code&gt;SealedSecret&lt;/code&gt; 类型的资源处于 &lt;code&gt;Progressing&lt;/code&gt; 状态？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;作为解决方法，Argo CD 允许提供 健康检查 自定义，覆盖默认行为。&lt;/p&gt;
&lt;h2 id=&#34;我忘记了管理员密码如何重置密码&#34;&gt;我忘记了管理员密码，如何重置密码？&lt;/h2&gt;
&lt;p&gt;对于 Argo CD v1.8 及更早版本，初始密码设置为服务器 pod 的名称，如 &lt;a href=&#34;../gettting-started/&#34; title=&#34;入门指南&#34;&gt;入门指南&lt;/a&gt; 中所述。对于 Argo CD v1.9 及更高版本，初始密码可从名为 &lt;code&gt;argocd-initial-admin-secret&lt;/code&gt; 的 secret 中获取。&lt;/p&gt;
&lt;p&gt;要更改密码，请编辑 &lt;code&gt;argocd-secret&lt;/code&gt; secret，并使用新的 bcrypt 哈希更新 &lt;code&gt;admin.password&lt;/code&gt; 字段。&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    生成 bcrypt 哈希
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    &lt;p&gt;使用以下命令生成 &lt;code&gt;admin.password&lt;/code&gt; 的 bcrypt 哈希：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;argocd account bcrypt --password &amp;lt;YOUR-PASSWORD-HERE&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;要应用新的密码哈希，请使用以下命令（用你自己的哈希替换哈希）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;c1&#34;&gt;# bcrypt(password)=$2a$10$rRyBsGSHK6.uc8fntPwVIuLVHgsAhAX7TcdrqW/RADU0uh7CaChLa&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; kubectl -n argocd patch secret argocd-secret &lt;span class=&#34;se&#34;&gt;\\\\&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   -p &lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;stringData&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;s2&#34;&gt;&amp;#34;admin.password&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$2&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$10$rRyBsGSHK6&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;.uc8fntPwVIuLVHgsAhAX7TcdrqW/RADU0uh7CaChLa&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另一个选项是删除 &lt;code&gt;admin.password&lt;/code&gt; 和 &lt;code&gt;admin.passwordMtime&lt;/code&gt; 两个键，然后重新启动 argocd-server。这将根据 &lt;a href=&#34;../getting-started/&#34; title=&#34;入门指南&#34;&gt;入门指南&lt;/a&gt; 生成新密码，因此要么使用 pod 名称 (Argo CD 1.8 及更早版本)，要么使用存储在 secret 中的随机生成的密码 (Argo CD 1.9 及更高版本)。&lt;/p&gt;
&lt;h2 id=&#34;如何禁用管理员用户&#34;&gt;如何禁用管理员用户？&lt;/h2&gt;
&lt;p&gt;将 &lt;code&gt;admin.enabled: &amp;quot;false&amp;quot;&lt;/code&gt; 添加到 &lt;code&gt;argocd-cm&lt;/code&gt; ConfigMap 中 ( 参见 &lt;a href=&#34;../user-guide/&#34; title=&#34;用户管理&#34;&gt;用户管理&lt;/a&gt;)。&lt;/p&gt;
&lt;h2 id=&#34;argo-cd-无法在没有互联网访问的情况下部署基于-helm-chart-的应用程序该怎么办&#34;&gt;Argo CD 无法在没有互联网访问的情况下部署基于 Helm Chart 的应用程序，该怎么办？&lt;/h2&gt;
&lt;p&gt;如果 Helm Chart 有位于外部存储库中的依赖项，则 Argo CD 可能无法生成 Helm Chart 清单。要解决此问题，你需要确保 &lt;code&gt;requirements.yaml&lt;/code&gt; 仅使用内部可用的 Helm 存储库。即使 chart 仅使用来自内部存储库的依赖项，Helm 也可能决定刷新 &lt;code&gt;stable&lt;/code&gt; 存储库。作为解决方法，可以在 &lt;code&gt;argocd-cm&lt;/code&gt; config map 中覆盖 &lt;code&gt;stable&lt;/code&gt; 存储库 URL：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;repositories&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;sd&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;     - type: helm
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;       url: http://&amp;lt;internal-helm-repo-host&amp;gt;:8080
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;sd&#34;&gt;       name: stable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;使用-argo-cd-部署-helm-应用程序后我无法使用-helm-ls-和其他-helm-命令看到它&#34;&gt;使用 Argo CD 部署 Helm 应用程序后，我无法使用 &lt;code&gt;helm ls&lt;/code&gt; 和其他 Helm 命令看到它&lt;/h2&gt;
&lt;p&gt;在部署 Helm 应用程序时，Argo CD 仅使用 Helm 作为模板机制。它运行 &lt;code&gt;helm template&lt;/code&gt;，然后在集群上部署生成的清单，而不是执行 &lt;code&gt;helm install&lt;/code&gt;。这意味着你无法使用任何 Helm 命令查看/验证应用程序。它由 Argo CD 完全管理。请注意，Argo CD 支持一些 Helm 中可能缺少的本地功能（例如历史记录和回滚命令）。&lt;/p&gt;
&lt;p&gt;做出这个决定是为了使 Argo CD 对所有清单生成器都是中立的。&lt;/p&gt;
&lt;h2 id=&#34;我已经配置了-cluster-secret但是在-cliui-中没有显示我该如何修复&#34;&gt;我已经配置了 cluster secret，但是在 CLI/UI 中没有显示，我该如何修复？&lt;/h2&gt;
&lt;p&gt;检查集群机密是否具有 &lt;code&gt;argocd.argoproj.io/secret-type: cluster&lt;/code&gt; 标签。如果机密具有该标签但仍然无法看到集群，则可能是权限问题。尝试使用 &lt;code&gt;admin&lt;/code&gt; 用户列出集群 ( 例如，&lt;code&gt;argocd login --username admin &amp;amp;&amp;amp; argocd cluster list&lt;/code&gt;)。&lt;/p&gt;
&lt;h2 id=&#34;argo-cd-无法连接到我的集群我该如何进行故障排除&#34;&gt;Argo CD 无法连接到我的集群，我该如何进行故障排除？&lt;/h2&gt;
&lt;p&gt;使用以下步骤重建配置的集群配置并使用 kubectl 手动连接到集群：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; kubectl &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it &amp;lt;argocd-pod-name&amp;gt; bash &lt;span class=&#34;c1&#34;&gt;# ssh 到任何 argocd 服务器 pod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; argocd admin cluster kubeconfig https://&amp;lt;cluster-url&amp;gt; /tmp/config --namespace argocd &lt;span class=&#34;c1&#34;&gt;# 生成你的集群配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;nv&#34;&gt;KUBECONFIG&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;/tmp/config kubectl get pods &lt;span class=&#34;c1&#34;&gt;# 手动测试连接&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在，你可以手动验证 Argo CD pod 可以访问集群。&lt;/p&gt;
&lt;h2 id=&#34;如何终止同步&#34;&gt;如何终止同步？&lt;/h2&gt;
&lt;p&gt;要终止同步，请单击“synchronisation”，然后单击“terminate”：&lt;/p&gt;
&lt;h2 id=&#34;即使同步了我的应用程序仍然out-of-sync为什么&#34;&gt;即使同步了，我的应用程序仍然“Out Of Sync”，为什么？&lt;/h2&gt;
&lt;p&gt;在某些情况下，你使用的工具可能会通过添加 &lt;code&gt;app.kubernetes.io/instance&lt;/code&gt; 标签与 Argo CD 冲突。例如，使用 Kustomize 的常见标签功能。&lt;/p&gt;
&lt;p&gt;Argo CD 自动设置 &lt;code&gt;app.kubernetes.io/instance&lt;/code&gt; 标签，并使用它来确定哪些资源形成应用程序。如果工具也这样做，这会导致混淆。你可以通过在 &lt;code&gt;argocd-cm&lt;/code&gt; configmap 中设置 &lt;code&gt;application.instanceLabelKey&lt;/code&gt; 值来更改此标签。我们建议你使用 &lt;code&gt;argocd.argoproj.io/instance&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;🔔 提示：更改此设置后，你的应用程序将变为“不同步”，需要重新同步。&lt;/p&gt;
&lt;p&gt;请参见 &lt;a href=&#34;https://github.com/argoproj/argo-cd/issues/1482&#34; title=&#34;#1482&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#1482&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;argo-cd-每隔多长时间检查我的-git-或-helm-存储库中的更改&#34;&gt;Argo CD 每隔多长时间检查我的 Git 或 Helm 存储库中的更改？&lt;/h2&gt;
&lt;p&gt;默认轮询间隔为 3 分钟 (180 秒)。你可以通过更新 &lt;a href=&#34;https://github.com/argoproj/argo-cd/blob/2d6ce088acd4fb29271ffb6f6023dbb27594d59b/docs/operator-manual/argocd-cm.yaml#L279-L282&#34; title=&#34;argocd-cm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;argocd-cm&lt;/a&gt; config map 中的 &lt;code&gt;timeout.reconciliation&lt;/code&gt; 值来更改此设置。如果有任何 Git 更改，ArgoCD 仅会更新启用了 auto-sync setting 的应用程序。如果将其设置为 &lt;code&gt;0&lt;/code&gt;，则 Argo CD 将停止自动轮询 Git 存储库，你只能使用替代方法（例如 webhooks 和/或手动同步）来部署应用程序。&lt;/p&gt;
&lt;h2 id=&#34;为什么我的资源限制不同步&#34;&gt;为什么我的资源限制“不同步”？&lt;/h2&gt;
&lt;p&gt;Kubernetes 在应用资源限制时对其进行了规范化，然后 Argo CD 比较了生成清单中的版本和 K8s 中的规范化版本 - 它们不会匹配。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&#39;1000m&#39;&lt;/code&gt; 规范化为 &lt;code&gt;&#39;1&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;0.1&#39;&lt;/code&gt; 规范化为 &lt;code&gt;&#39;100m&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&#39;3072Mi&#39;&lt;/code&gt; 规范化为 &lt;code&gt;&#39;3Gi&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3072&lt;/code&gt; 规范化为 &lt;code&gt;&#39;3072&#39;&lt;/code&gt; (添加引号)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要解决此问题，请使用差异化自定义&lt;a href=&#34;../user-guide/diffing/&#34; title=&#34;设置&#34;&gt;设置&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;如何修复invalid-cookie-longer-than-max-length-4093&#34;&gt;如何修复“invalid cookie, longer than max length 4093”？&lt;/h2&gt;
&lt;p&gt;Argo CD 使用 JWT 作为身份验证令牌。你可能是许多组的一部分，并超过了设置为 cookie 的 4KB 限制。你可以通过打开“开发人员工具-&amp;gt;网络”来获取组列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单击登录&lt;/li&gt;
&lt;li&gt;找到调用 &lt;code&gt;&amp;lt;argocd_instance&amp;gt;/auth/callback?code=&amp;lt;random_string&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在 &lt;a href=&#34;https://jwt.io/&#34; title=&#34;https://jwt.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://jwt.io/&lt;/a&gt; 上解码令牌。这将提供你可以从中删除自己的团队列表。&lt;/p&gt;
&lt;p&gt;请参见 &lt;a href=&#34;https://github.com/argoproj/argo-cd/issues/2165&#34; title=&#34;#2165&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#2165&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;在使用-cli-时为什么会出现rpc-error-code--unavailable-desc--transport-is-closing&#34;&gt;在使用 CLI 时为什么会出现“rpc error: code = Unavailable desc = transport is closing”？&lt;/h2&gt;
&lt;p&gt;也许你在使用不支持 HTTP 2 的代理？尝试使用 &lt;code&gt;--grpc-web&lt;/code&gt; 标志：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; argocd ... --grpc-web
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;在使用-cli-时为什么会出现x509-certificate-signed-by-unknown-authority&#34;&gt;在使用 CLI 时为什么会出现“x509: certificate signed by unknown authority”？&lt;/h2&gt;
&lt;p&gt;Argo CD 默认创建的证书未被 Argo CD CLI 自动识别，为了创建安全的系统，你必须遵循&lt;a href=&#34;../operator-manual/tls/&#34; title=&#34;安装证书&#34;&gt;安装证书&lt;/a&gt;的说明，并配置客户端操作系统以信任该证书。&lt;/p&gt;
&lt;p&gt;如果你不在生产系统中运行（例如，你正在测试 Argo CD），请尝试使用 &lt;code&gt;--insecure&lt;/code&gt; 标志：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; argocd ... --insecure
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;🔔 警告：不要在生产中使用 &lt;code&gt;--insecure&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;我已经通过-dexconfig-在-argocd-cm-中配置了-dex但它仍然显示-dex-未配置为什么&#34;&gt;我已经通过 &lt;code&gt;dex.config&lt;/code&gt; 在 &lt;code&gt;argocd-cm&lt;/code&gt; 中配置了 Dex，但它仍然显示 Dex 未配置。为什么？&lt;/h2&gt;
&lt;p&gt;很可能你忘记将 &lt;code&gt;argocd-cm&lt;/code&gt; 中的 &lt;code&gt;url&lt;/code&gt; 设置为指向你的 ArgoCD。另请参见 &lt;a href=&#34;../operator-manual/user-management/&#34; title=&#34;文档&#34;&gt;文档&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;为什么sealedsecret资源会报告status&#34;&gt;为什么&lt;code&gt;SealedSecret&lt;/code&gt;资源会报告&lt;code&gt;Status&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SealedSecret&lt;/code&gt;的版本包括&lt;code&gt;v0.15.0&lt;/code&gt;（特别是通过 helm &lt;code&gt;1.15.0-r3&lt;/code&gt;）不包括现代 CRD，因此状态字段将不会在 k8s &lt;code&gt;1.16+&lt;/code&gt;上公开。如果你的 Kubernetes 部署是&lt;a href=&#34;https://www.openshift.com/blog/a-look-into-the-technical-details-of-kubernetes-1-16&#34; title=&#34;modern&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;modern&lt;/a&gt;，请确保使用固定的 CRD，如果你想要此功能工作。&lt;/p&gt;
&lt;h2 id=&#34;sealedsecret类型资源为什么停留在progressing状态中&#34;&gt;&lt;code&gt;SealedSecret&lt;/code&gt;类型资源为什么停留在&lt;code&gt;Progressing&lt;/code&gt;状态中？&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;SealedSecret&lt;/code&gt;资源的控制器可以在它提供的资源上公开状态条件。自&lt;code&gt;v2.0.0&lt;/code&gt;版本以来，ArgoCD 会获取该状态条件以为&lt;code&gt;SealedSecret&lt;/code&gt;推导出健康状态。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;SealedSecret&lt;/code&gt;控制器的&lt;code&gt;v0.15.0&lt;/code&gt;版本之前受到有关此状态条件更新的问题的影响，因此在这些版本中默认禁用此功能。可以通过使用&lt;code&gt;--update-status&lt;/code&gt;命令行参数启动&lt;code&gt;SealedSecret&lt;/code&gt;控制器或通过设置&lt;code&gt;SEALED_SECRETS_UPDATE_STATUS&lt;/code&gt;环境变量来启用状态条件更新。&lt;/p&gt;
&lt;p&gt;要禁用 ArgoCD 检查&lt;code&gt;SealedSecret&lt;/code&gt;资源上的状态条件，请通过&lt;code&gt;resource.customizations.health.&amp;lt;group_kind&amp;gt;&lt;/code&gt;键在&lt;code&gt;argocd-cm&lt;/code&gt; ConfigMap 中添加以下资源自定义。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;resource.customizations.health.bitnami.com_SealedSecret: |
 hs = {}
 hs.status = &amp;#34;Healthy&amp;#34;
 hs.message = &amp;#34;Controller doesn&amp;#39;t report resource status&amp;#34;
 return hs
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;如何修复the-order-in-patch-list--doesnt-match-setelementorder-list-&#34;&gt;如何修复&lt;code&gt;The order in patch list … doesn&#39;t match $setElementOrder list: …&lt;/code&gt;?&lt;/h2&gt;
&lt;p&gt;应用程序可能会触发一个同步错误，标记为&lt;code&gt;ComparisonError&lt;/code&gt;，其消息如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The order in patch list: [map[name:KEY_BC value:150] map[name:KEY_BC value:500] map[name:KEY_BD value:250] map[name:KEY_BD value:500] map[name:KEY_BI value:something]] doesn&amp;rsquo;t match $setElementOrder list: [map[name:KEY_AA] map[name:KEY_AB] map[name:KEY_AC] map[name:KEY_AD] map[name:KEY_AE] map[name:KEY_AF] map[name:KEY_AG] map[name:KEY_AH] map[name:KEY_AI] map[name:KEY_AJ] map[name:KEY_AK] map[name:KEY_AL] map[name:KEY_AM] map[name:KEY_AN] map[name:KEY_AO] map[name:KEY_AP] map[name:KEY_AQ] map[name:KEY_AR] map[name:KEY_AS] map[name:KEY_AT] map[name:KEY_AU] map[name:KEY_AV] map[name:KEY_AW] map[name:KEY_AX] map[name:KEY_AY] map[name:KEY_AZ] map[name:KEY_BA] map[name:KEY_BB] map[name:KEY_BC] map[name:KEY_BD] map[name:KEY_BE] map[name:KEY_BF] map[name:KEY_BG] map[name:KEY_BH] map[name:KEY_BI] map[name:KEY_BC] map[name:KEY_BD]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该消息有两个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;The order in patch list: [&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这标识了每个项目的值，特别是多次出现的项目的值：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;map[name:KEY_BC value:150] map[name:KEY_BC value:500] map[name:KEY_BD value:250] map[name:KEY_BD value:500] map[name:KEY_BI value:something]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你需要确定重复的键 &amp;ndash; 你可以专注于第一部分，因为每个重复的键将出现，每个值都与其值一起出现在第一个列表中。第二个列表实际上只是&lt;/p&gt;
&lt;p&gt;&lt;code&gt;]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;doesn&#39;t match $setElementOrder list: [&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这包括所有的键。为了调试目的，它被包含在内——你不需要太注意它。它将为你提供有关重复键的精确位置的提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;map[name:KEY_AA] map[name:KEY_AB] map[name:KEY_AC] map[name:KEY_AD] map[name:KEY_AE] map[name:KEY_AF] map[name:KEY_AG] map[name:KEY_AH] map[name:KEY_AI] map[name:KEY_AJ] map[name:KEY_AK] map[name:KEY_AL] map[name:KEY_AM] map[name:KEY_AN] map[name:KEY_AO] map[name:KEY_AP] map[name:KEY_AQ] map[name:KEY_AR] map[name:KEY_AS] map[name:KEY_AT] map[name:KEY_AU] map[name:KEY_AV] map[name:KEY_AW] map[name:KEY_AX] map[name:KEY_AY] map[name:KEY_AZ] map[name:KEY_BA] map[name:KEY_BB] map[name:&lt;strong&gt;KEY_BC&lt;/strong&gt;] map[name:&lt;strong&gt;KEY_BD&lt;/strong&gt;] map[name:KEY_BE] map[name:KEY_BF] map[name:KEY_BG] map[name:KEY_BH] map[name:KEY_BI] map[name:&lt;strong&gt;KEY_BC&lt;/strong&gt;] map[name:&lt;strong&gt;KEY_BD&lt;/strong&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;]&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在这种情况下，重复的键已被&lt;strong&gt;加粗&lt;/strong&gt;以帮助你识别有问题的键。许多编辑器都有突出显示所有字符串实例的功能，使用这样的编辑器可以帮助解决此类问题。&lt;/p&gt;
&lt;p&gt;此错误的最常见实例是针对&lt;code&gt;containers&lt;/code&gt;的&lt;code&gt;env:&lt;/code&gt;字段。&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    动态应用程序
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    可能你的应用程序是由工具生成的，因此在单个文件的范围内可能不会显现出重复。如果你在调试此问题时遇到麻烦，请考虑向生成器工具的所有者提交工单，要求他们改进其验证和错误报告功能。
  &lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
  </channel>
</rss>
