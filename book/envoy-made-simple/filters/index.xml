
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – 过滤器</title>
    <link>https://jimmysong.io/book/envoy-made-simple/filters/</link>
    <description>Recent content in 过滤器 on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>Jimmy Song</managingEditor>
    <webMaster>Jimmy Song</webMaster>
    
      <follow_challenge>
        <feedId>51621818828612637</feedId>
        <userId>59800919738273792</userId>
      </follow_challenge>
    
    
    <lastBuildDate>Thu, 08 Aug 2024 00:00:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/book/envoy-made-simple/filters/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
                                                         
    
                                                   
                           
    <item>
      <title>过滤器简介</title>
      <link>https://jimmysong.io/book/envoy-made-simple/filters/overview/</link>
      <pubDate>Thu, 15 Aug 2024 00:00:00 +0000</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/book/envoy-made-simple/filters/overview/</guid>
      <description>
        
        
        &lt;p&gt;Envoy 中的 &lt;strong&gt;Filter&lt;/strong&gt; 是一种可插拔的组件，用于处理进出代理的流量。过滤器可以在不同的层次上工作，包括网络层（L3/L4）和 HTTP 层。&lt;/p&gt;
&lt;h2 id=&#34;过滤器的类型&#34;&gt;过滤器的类型&lt;/h2&gt;
&lt;p&gt;Envoy 提供了多种类型的过滤器，主要可以分为以下几类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;监听器过滤器（Listener Filters）&lt;/strong&gt;：这些过滤器在网络层级上操作，处理传入的连接请求，如 TLS 握手或协议检测。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;网络过滤器（Network Filters）&lt;/strong&gt;：网络过滤器直接操作 TCP 流量，负责处理所有通过特定监听器的数据。典型的网络过滤器包括 TCP 代理、HTTP 连接管理器等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HTTP 过滤器（HTTP Filters）&lt;/strong&gt;：这些过滤器专门用于处理 HTTP 流量，可以操作 HTTP 请求和响应。它们在 HTTP 连接管理器的上下文中运行，例如实现路由、身份验证和授权等功能。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自定义过滤器（Custom Filters）&lt;/strong&gt;：Envoy 也支持自定义过滤器开发，允许开发者根据特定需求创建过滤器。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;过滤器的工作流程&#34;&gt;过滤器的工作流程&lt;/h2&gt;
&lt;p&gt;在 Envoy 中，过滤器以管道的形式组织，请求和响应数据会依次流经每个过滤器。每个过滤器可以对数据进行处理，并决定是否将数据传递给链中的下一个过滤器。这种设计允许灵活地添加、修改或删除任何处理步骤，而不会影响其他组件。&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/book/envoy-made-simple/filters/overview/e1b452a0e0155380de25e6790fa6949b.svg&#34; data-img=&#34;/book/envoy-made-simple/filters/overview/e1b452a0e0155380de25e6790fa6949b.svg&#34; alt=&#34;image&#34; data-caption=&#34;过滤器的工作流程&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;过滤器的工作流程&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h3 id=&#34;网络过滤器-network-filters&#34;&gt;网络过滤器 (Network Filters)&lt;/h3&gt;
&lt;p&gt;网络过滤器在 Listener 级别工作，用于处理原始字节流。它们在 Listener 接收到新连接时被实例化。常见的网络过滤器包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TLS 终止&lt;/strong&gt;：处理 TLS 握手并终止 TLS 连接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redis 代理&lt;/strong&gt;：实现 Redis 协议的代理逻辑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MongoDB 代理&lt;/strong&gt;：实现 MongoDB 协议的代理逻辑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DynamoDB 代理&lt;/strong&gt;：实现 DynamoDB 协议的代理逻辑。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;网络过滤器按照配置的顺序组成一个过滤器链，依次处理进出的流量。&lt;/p&gt;
&lt;h3 id=&#34;http-过滤器-http-filters&#34;&gt;HTTP 过滤器 (HTTP Filters)&lt;/h3&gt;
&lt;p&gt;HTTP 过滤器在 HTTP 连接管理器级别工作，用于处理 HTTP 请求和响应。它们在 HTTP 连接管理器接收到新的 HTTP 请求时被实例化。常见的 HTTP 过滤器包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;路由&lt;/strong&gt;：实现请求路由逻辑，将请求转发到合适的上游集群。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;速率限制&lt;/strong&gt;：对请求速率进行限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;缓冲&lt;/strong&gt;：为请求和响应实现缓冲。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CORS&lt;/strong&gt;：实现 CORS 策略。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gzip&lt;/strong&gt;：对响应进行 Gzip 压缩。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;HTTP 过滤器也是按照配置的顺序组成一个过滤器链，依次处理 HTTP 请求和响应。&lt;/p&gt;
&lt;h3 id=&#34;listener-过滤器-listener-filters&#34;&gt;Listener 过滤器 (Listener Filters)&lt;/h3&gt;
&lt;p&gt;Listener 过滤器在 Listener 接收到新连接时被实例化，用于收集连接信息，为后续的网络过滤器链选择做准备。例如，Listener 过滤器可以收集 TLS 握手数据，包括 SNI 和 ALPN，以选择合适的网络过滤器链。&lt;/p&gt;
&lt;h2 id=&#34;如何配置-envoy-过滤器&#34;&gt;如何配置 Envoy 过滤器？&lt;/h2&gt;
&lt;p&gt;配置 Envoy 过滤器通常涉及定义 YAML 或 JSON 配置文件。下面是一个配置 HTTP 过滤器的简单示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;static_resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;listeners&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;listener_0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;socket_address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address: 0.0.0.0, port_value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;filter_chains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;filters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.filters.network.http_connection_manager&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;typed_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;@type&amp;#34;: &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stat_prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ingress_http&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;codec_type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;AUTO&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;route_config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;local_route&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;virtual_hosts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;local_service&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;domains&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;match&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;prefix&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;route&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;cluster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;service_cluster }&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http_filters&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;envoy.filters.http.router&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在这个配置中，我们设置了一个 HTTP 连接管理器作为网络过滤器，它使用了 HTTP 路由过滤器来管理请求的路由。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
