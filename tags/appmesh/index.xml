
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – AppMesh</title>
    <link>https://jimmysong.io/tags/appmesh/</link>
    <description>Recent content in AppMesh on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>Jimmy Song</managingEditor>
    <webMaster>Jimmy Song</webMaster>
    
      <follow_challenge>
        <feedId>51621818828612637</feedId>
        <userId>59800919738273792</userId>
      </follow_challenge>
    
    
    <lastBuildDate>Wed, 30 Oct 2024 14:20:22 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/appmesh/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
                                                         
    
                                                   
                           
    <item>
      <title>AppMesh 快速开始</title>
      <link>https://jimmysong.io/book/argo-rollouts/getting-started/appmesh/index/</link>
      <pubDate>Wed, 21 Jun 2023 16:00:00 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/book/argo-rollouts/getting-started/appmesh/index/</guid>
      <description>
        
        
        &lt;p&gt;本指南介绍了如何让 Argo Rollouts 与由 &lt;a href=&#34;https://docs.aws.amazon.com/app-mesh/latest/userguide/what-is-app-mesh.html&#34; title=&#34;AWS App Mesh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS App Mesh&lt;/a&gt; 管理的服务网格集成。本指南基于 基本入门指南 的概念构建。&lt;/p&gt;
&lt;p&gt;要求&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装了 AWS App Mesh Controller for K8s 的 Kubernetes 集群&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🔔 提示：请参阅 &lt;a href=&#34;https://docs.aws.amazon.com/app-mesh/latest/userguide/getting-started-kubernetes.html&#34; title=&#34;App Mesh Controler Installation instructions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;App Mesh Controler Installation instructions&lt;/a&gt; 以了解如何开始使用 Kubernetes 的 App Mesh。&lt;/p&gt;
&lt;h2 id=&#34;1-部署-rollout服务和-app-mesh-crd&#34;&gt;1. 部署 Rollout、服务和 App Mesh CRD&lt;/h2&gt;
&lt;p&gt;当 App Mesh 用作流量路由器时，Rollout canary 策略必须定义以下强制字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;argoproj.io/v1alpha1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Rollout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-rollout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;   &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;strategy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;     &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canary&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# canaryService 和 stableService 是指向 Rollout 将要修改的服务的引用，以便针对金丝雀 ReplicaSet 和稳定 ReplicaSet（均为必需）。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canaryService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-svc-canary&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stableService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-svc-stable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;trafficRouting&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;         &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;appMesh&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 引用的虚拟服务将用于确定虚拟路由器，后者将被操纵以更新金丝雀权重。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;virtualService&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 虚拟服务 App Mesh CR 的名称&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-svc&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 要更新的路由的可选集。如果为空，则更新与虚拟服务关联的所有路由。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;routes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;http-primary&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# virtualNodeGroup 是一个结构，用于引用 App Mesh 虚拟节点 CR，该节点对应于金丝雀和稳定版本&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;           &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;virtualNodeGroup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# canaryVirtualNodeRef 指的是对应于金丝雀版本的虚拟节点的引用。Rollouts 控制器将会&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 更新这个虚拟节点的 podSelector 以匹配控制器生成的最新的 canary pod-hash。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canaryVirtualNodeRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-vn-canary&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# stableVirtualNodeRef 指的是对应于稳定版本的虚拟节点的引用。Rollouts 控制器将会&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 更新这个虚拟节点的 podSelector 以匹配控制器生成的最新的 stable pod-hash。&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;             &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stableVirtualNodeRef&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;               &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-vn-stable&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;setWeight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;pause&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;       &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在本指南中，这两个服务分别是：&lt;code&gt;my-svc-canary&lt;/code&gt; 和 &lt;code&gt;my-svc-stable&lt;/code&gt;。这两个服务对应的是两个名为 &lt;code&gt;my-vn-canary&lt;/code&gt; 和 &lt;code&gt;my-vn-stable&lt;/code&gt; 的虚拟节点 CR。此外，还有一个名为 &lt;code&gt;rollout-demo-vsvc&lt;/code&gt; 的虚拟服务，它由一个名为 &lt;code&gt;rollout-demo-vrouter&lt;/code&gt; 的虚拟路由器 CR 提供。这个虚拟路由器需要至少有一个路由，用于将流量转发到 canary 和 stable 虚拟节点。最初，canary 的权重设置为 0%，而 stable 的权重设置为 100%。在部署期间，控制器将根据 &lt;code&gt;steps[N].setWeight&lt;/code&gt; 中定义的配置修改路由的权重。&lt;/p&gt;
&lt;p&gt;canary 和 stable 服务的配置为无头服务。这是必要的，以便 App Mesh 正确处理由 canary 到 stable 重新分配的 pod 的连接池。&lt;/p&gt;
&lt;p&gt;总之，运行以下命令以部署服务：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两个服务（stable 和 canary）&lt;/li&gt;
&lt;li&gt;一个服务（用于 VIP 和 DNS 查询）&lt;/li&gt;
&lt;li&gt;两个 App Mesh 虚拟节点（stable 和 canary）&lt;/li&gt;
&lt;li&gt;一个具有指向虚拟节点的路由的 App Mesh 虚拟路由器&lt;/li&gt;
&lt;li&gt;一个对应 VIP 服务的 App Mesh 虚拟服务&lt;/li&gt;
&lt;li&gt;一个 rollout&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/master/examples/appmesh/canary-service.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/argoproj/argo-rollouts/master/examples/appmesh/canary-rollout.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-验证服务&#34;&gt;2. 验证服务&lt;/h2&gt;
&lt;p&gt;首先确保 rollout 稳定。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl argo rollouts get rollout my-rollout -n argo-examples -w
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后确保服务正常运行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl -n argo-examples port-forward svc/my-svc 8181:80
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-部署新版本&#34;&gt;3. 部署新版本&lt;/h2&gt;
&lt;p&gt;现在是部署新版本的时候了。使用新镜像更新 rollout。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl argo rollouts &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; image my-rollout &lt;span class=&#34;nv&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;argoproj/rollouts-demo:green -n argo-examples
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Rollout 应该会部署一个新的 canary 修订版本，并在虚拟路由器下更新权重。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get -n argo-examples virtualrouter my-vrouter -o json &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; jq &lt;span class=&#34;s2&#34;&gt;&amp;#34;.spec.routes[0].httpRoute.action.weightedTargets&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;s2&#34;&gt;&amp;#34;virtualNodeRef&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;my-vn-canary&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;s2&#34;&gt;&amp;#34;weight&amp;#34;&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;25&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;s2&#34;&gt;&amp;#34;virtualNodeRef&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;       &lt;span class=&#34;s2&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;my-vn-stable&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;s2&#34;&gt;&amp;#34;weight&amp;#34;&lt;/span&gt;: &lt;span class=&#34;m&#34;&gt;75&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;现在手动批准无限期暂停的 rollout，并继续观察路由更新&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl argo rollouts promote my-rollout -n argo-examples
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;watch -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;kubectl get -n argo-examples virtualrouter my-vrouter -o json | jq &amp;#34;.spec.routes[0].httpRoute.action.weightedTargets&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
                           
    <item>
      <title>从 AWS App Mesh 迁移到 Istio 全面指南</title>
      <link>https://jimmysong.io/blog/migrating-from-aws-app-mesh-to-istio-a-comprehensive-guide/</link>
      <pubDate>Wed, 30 Oct 2024 14:20:22 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/blog/migrating-from-aws-app-mesh-to-istio-a-comprehensive-guide/</guid>
      <description>
        
        
        &lt;p&gt;随着 &lt;a href=&#34;https://aws.amazon.com/cn/blogs/containers/migrating-from-aws-app-mesh-to-amazon-ecs-service-connect/&#34; title=&#34;AWS 宣布将在 2026 年 9 月 30 日停用 AWS App Mesh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS 宣布将在 2026 年 9 月 30 日停用 AWS App Mesh&lt;/a&gt;，许多企业正在评估继续使用服务网格的替代方案。如果您也在寻找替代方案，Istio 将是一个强大且功能丰富的选项，尤其适合 Kubernetes 原生环境。在本文中，我将介绍从 AWS App Mesh 迁移到 Istio 的过程，对比这两种服务网格，并介绍我们开发的 Tetrate Istio 迁移工具，帮助简化这一迁移过程。&lt;/p&gt;
&lt;h2 id=&#34;app-mesh-vs-istio迁移准备&#34;&gt;App Mesh vs Istio：迁移准备&lt;/h2&gt;
&lt;p&gt;由于 AWS App Mesh 即将停用，了解 App Mesh 和 Istio 之间的相似性和差异对于成功迁移至关重要。以下是一些关键比较点，帮助您将当前的基础设施与 Istio 提供的功能对齐：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;全面的功能&lt;/strong&gt;：App Mesh 和 Istio 都提供流量管理、可观测性和安全功能，但 Istio 提供了更多可自定义的选项，包括高级流量路由和增强的遥测。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;云无关性&lt;/strong&gt;：与紧密集成 AWS 的 App Mesh 不同，Istio 是云无关的，可在多云或混合环境中提供更大的灵活性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高级安全&lt;/strong&gt;：Istio 默认支持 mTLS，与 App Mesh 相比，提供了更广泛的安全功能和策略。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;AWS 建议 ECS 客户迁移到 &lt;a href=&#34;https://docs.aws.amazon.com/AmazonECS/latest/developerguide/service-connect.html&#34; title=&#34;Service Connect&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Service Connect&lt;/a&gt; 而 EKS 客户迁移到 &lt;a href=&#34;https://aws.amazon.com/vpc/lattice/&#34; title=&#34;VPC Lattice&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;VPC Lattice&lt;/a&gt;。对于一个功能丰富的开源解决方案，Istio 是一个很有吸引力的选择。接下来，让我们深入了解从 AWS App Mesh 迁移到 Istio 的过程，并使用 Tetrate 的迁移工具进行支持。&lt;/p&gt;
&lt;h2 id=&#34;比较-app-meshservice-connectvpc-lattice-和-istio&#34;&gt;比较 App Mesh、Service Connect、VPC Lattice 和 Istio&lt;/h2&gt;
&lt;p&gt;在开始迁移之前，了解 AWS App Mesh、Service Connect、VPC Lattice 和 Istio 之间的关键区别非常重要：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;功能&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;App Mesh&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Service Connect&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;VPC Lattice&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Istio&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;网络可靠性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;使用 &lt;a href=&#34;https://envoyproxy.io/&#34; title=&#34;Envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt; 作为 Sidecar 代理，进行异常检测、健康检查和重试，支持精细调整。&lt;/td&gt;
          &lt;td&gt;使用 Envoy 作为 Sidecar 代理，仅支持超时调整。&lt;/td&gt;
          &lt;td&gt;内置健康检查和重试，由 AWS 管理的可靠性，不需要 Sidecar 代理。&lt;/td&gt;
          &lt;td&gt;支持 Sidecar 和 Ambient 模式，使用 Envoy 并完全支持精细化调整。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;高级流量路由&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;支持高级流量路由，如 A/B 测试和金丝雀发布。&lt;/td&gt;
          &lt;td&gt;不支持高级流量路由。&lt;/td&gt;
          &lt;td&gt;支持基本的流量路由和负载均衡。&lt;/td&gt;
          &lt;td&gt;支持包括 A/B 测试和金丝雀发布在内的高级流量控制。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可观测性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;需要手动收集和监控指标。&lt;/td&gt;
          &lt;td&gt;自动将指标发送到 Amazon CloudWatch。&lt;/td&gt;
          &lt;td&gt;集成 AWS CloudWatch 和 X-Ray 监控。&lt;/td&gt;
          &lt;td&gt;开箱即用的可观测性，支持 Prometheus、Grafana 和 Jaeger。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;服务发现&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;集成 AWS Cloud Map。&lt;/td&gt;
          &lt;td&gt;使用 AWS Cloud Map。&lt;/td&gt;
          &lt;td&gt;使用 AWS 服务发现机制。&lt;/td&gt;
          &lt;td&gt;使用 Kubernetes 原生的服务发现机制。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;安全性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;支持与 AWS PCA 的 TLS 和双向 TLS（mTLS）。&lt;/td&gt;
          &lt;td&gt;支持 TLS，不支持 mTLS。&lt;/td&gt;
          &lt;td&gt;支持 mTLS。&lt;/td&gt;
          &lt;td&gt;支持 mTLS 和细粒度的安全策略。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;资源共享&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;可以跨多个 AWS 账户共享网格。&lt;/td&gt;
          &lt;td&gt;不支持跨账户共享命名空间。&lt;/td&gt;
          &lt;td&gt;可以跨多个 AWS 账户共享资源。&lt;/td&gt;
          &lt;td&gt;可以跨多个集群和云部署。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;介绍-tetrate-的-istio-迁移工具&#34;&gt;介绍 Tetrate 的 Istio 迁移工具&lt;/h2&gt;
&lt;p&gt;为了使迁移过程更加顺利，Tetrate 开发了一个 Istio 迁移工具包，目前处于私有状态，但可供内部或经过批准的客户通过 &lt;a href=&#34;https://resources.tetrate.dev/app-mesh-istio?__hstc=218802950.edcf2542a8010c44aa57b98adaef028a.1721092227167.1729818643207.1730268606576.91&amp;amp;__hssc=218802950.2.1730268606576&amp;amp;__hsfp=872206273&#34; title=&#34;此表单&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;此表单&lt;/a&gt; 申请使用。该工具包帮助自动转换 AWS App Mesh 配置为 Istio 的等效配置，包括 Virtual Nodes、Virtual Routers 和其他网络结构。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键考量&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;服务发现&lt;/strong&gt;：App Mesh 和 Istio 的服务发现方式不同。Istio 依赖 Kubernetes 原生的服务发现，而 App Mesh 则集成 AWS Cloud Map。迁移过程中，需相应调整服务定义。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全性&lt;/strong&gt;：Istio 原生支持服务之间的 mTLS。虽然 AWS App Mesh 也支持 mTLS，但迁移至 Istio 需要配置 CA（证书颁发机构）并更新证书以适应 Istio 的安全模型。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;流量管理&lt;/strong&gt;：Istio 的 Virtual Services 和 Destination Rules 提供了比 App Mesh 的 Virtual Routers 和 Nodes 更高级的流量路由能力。迁移过程中，需额外配置以建立类似的路由行为。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用-tetrate-迁移工具逐步完成迁移&#34;&gt;使用 Tetrate 迁移工具逐步完成迁移&lt;/h2&gt;
&lt;p&gt;下面是使用此工具的有效步骤：&lt;/p&gt;
&lt;h3 id=&#34;前提条件&#34;&gt;前提条件&lt;/h3&gt;
&lt;p&gt;开始迁移之前，确保已安装以下工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/doc/install&#34; title=&#34;Go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tasks/tools/#kubectl&#34; title=&#34;kubectl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubectl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/setup/getting-started/#download&#34; title=&#34;istioctl&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;istioctl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;确保在 EKS 集群上正确安装和配置 AWS App Mesh。您还需要一个名为 tetrate-tis-creds 的 Kubernetes secret，用于 Istio 安装，详见工具文档。&lt;/p&gt;
&lt;p&gt;该工具还提供预检查命令，以识别迁移前的任何潜在阻碍因素。&lt;/p&gt;
&lt;h3 id=&#34;运行预检查&#34;&gt;运行预检查&lt;/h3&gt;
&lt;p&gt;为确保设置准备就绪，运行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tim precheck
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此命令将扫描 App Mesh 环境，标出任何需要调整的项，以确保成功迁移。&lt;/p&gt;
&lt;h3 id=&#34;迁移过程&#34;&gt;迁移过程&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安装 Istio&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用 Istio 迁移工具包生成 IstioOperator 配置并安装 Istio：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tim generate iop &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; istioctl install –skip-confirmation -f –
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;应用 Istio 网络规则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接下来，生成并应用 Istio 网络规则：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;tim generate networking &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; kubectl apply -f –
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;移除 AWS App Mesh 标签&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从命名空间中移除现有的 App Mesh 标签。例如，对于 default 命名空间：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl label namespace default &lt;span class=&#34;s2&#34;&gt;&amp;#34;appmesh.k8s.aws/sidecarInjectorWebhook-&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;启用 Istio Sidecar 注入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;添加标签以启用 Istio 的自动 Sidecar 注入：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl label namespace default istio-injection&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;enabled
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重启部署&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为应用更改并启动新的 Envoy Sidecar 注入，重启部署：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl rollout restart deployment &amp;lt;deployment-name&amp;gt; -n &amp;lt;deployment-namespace&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;迁移策略&#34;&gt;迁移策略&lt;/h3&gt;
&lt;p&gt;从 AWS App Mesh 迁移到 Istio 时，可以使用如原地迁移、金丝雀发布、蓝绿部署等策略，这些策略与迁移到 VPC Lattice 的策略相似。合适的策略取决于应用需求，如是否需要零停机或安排维护窗口。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;原地迁移&lt;/strong&gt;：用配置为 Istio 的新 Pods 替换当前 App Mesh 的 Kubernetes Pods，适合可容忍迁移过程中的停机的应用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;蓝绿部署&lt;/strong&gt;：在新命名空间中配置为 Istio 的应用副本，而原始部署继续运行 App Mesh，无停机地逐步将流量从 App Mesh 迁移到 Istio。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;金丝雀发布&lt;/strong&gt;：与 App Mesh 并行部署 Istio，逐步将少量流量转移到 Istio，监控性能和稳定性，逐步增加流量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;分阶段迁移&lt;/strong&gt;：逐步迁移组件或服务，而非一次性迁移，以减少风险并帮助识别潜在问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;测试和验证&lt;/strong&gt;：在完全切换前，进行全面测试，验证服务功能、安全性和性能指标符合或超出预期。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;
&lt;p&gt;从 AWS App Mesh 迁移到 Istio 可以解锁流量管理、可观测性和安全方面的新功能。Tetrate 的 Istio 迁移工具简化了过程，提供了分步骤方法，减少手动配置，确保平稳过渡。&lt;/p&gt;
&lt;p&gt;如果您有兴趣试用 Tetrate 的 Istio 迁移工具，欢迎联系我们——该工具目前可私密使用，我们将很乐意讨论访问权限。&lt;/p&gt;
&lt;p&gt;此次迁移不仅是采用新的服务网格，更是一个充分利用 Istio 全面功能、支持多云部署、增强基础设施弹性的机会。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;本文最初发表于 &lt;a href=&#34;https://tetrate.io/blog/migrating-from-aws-app-mesh-to-istio-a-comprehensive-guide/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
