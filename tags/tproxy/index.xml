<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song - 专注于探索后 Kubernetes 时代的云原生新范式 – tproxy</title>
    <link>https://jimmysong.io/tags/tproxy/</link>
    <description>Recent content in tproxy on Jimmy Song - 专注于探索后 Kubernetes 时代的云原生新范式</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2017-2022 Jimmy Song 保留所有权利</copyright>
    <lastBuildDate>Mon, 21 Nov 2022 11:09:40 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/tproxy/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>什么是 tproxy 透明代理？</title>
      <link>https://jimmysong.io/blog/what-is-tproxy/</link>
      <pubDate>Mon, 21 Nov 2022 11:09:40 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/what-is-tproxy/</guid>
      <description>
        
        
        &lt;p&gt;在 Istio 最新的 Ambient 模式中，使用了 tproxy 做透明流量劫持（&lt;a href=&#34;https://jimmysong.io/blog/ambient-mesh-l4-traffic-path/&#34; title=&#34;见此博客&#34;&gt;见此博客&lt;/a&gt;
），这与 Sidecar 模式中基于 IPtables 的流量劫持方式有些许不同，这篇文文章，我们就就一起来探究下什么是 tproxy。&lt;/p&gt;
&lt;h2 id=&#34;什么是代理&#34;&gt;什么是代理？&lt;/h2&gt;
&lt;p&gt;在介绍透明代理之前，我们先了解下什么是代理。&lt;/p&gt;
&lt;h3 id=&#34;代理的功能&#34;&gt;代理的功能&lt;/h3&gt;
&lt;p&gt;代理在互联网中的用途非常广泛，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缓存请求：加快网络响应速度，作用类似于 CDN；&lt;/li&gt;
&lt;li&gt;请求过滤：用于网络监管，屏蔽或允许对某些主机、网站的访问；&lt;/li&gt;
&lt;li&gt;请求转发：用于负载均衡或作为网络中继；&lt;/li&gt;
&lt;li&gt;流量管理：对进出代理的流量进行细粒度的管理，例如按百分比发布到不同的后端、超时和重试设置、熔断等；&lt;/li&gt;
&lt;li&gt;安全审计：记录和限制客户端请求，用于计费或审计；&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;代理的分类&#34;&gt;代理的分类&lt;/h3&gt;
&lt;p&gt;代理的分类方式有很多，下图根据代理的位置将其划分为了两类：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/what-is-tproxy/proxy.svg&#34; data-img=&#34;/blog/what-is-tproxy/proxy.svg&#34; alt=&#34;image&#34; data-caption=&#34;代理示意图&#34;&gt;
    
  
  &lt;figcaption&gt;代理示意图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前向代理（Forward Proxy）：运行在客户端侧，代替客户端想服务端发送请求，例如我们日常使用的各种科学上网代理；&lt;/li&gt;
&lt;li&gt;反向代理（Reverse Proxy）：代替服务端接受互联网或外部请求，然后将请求路由到对应的服务端，例如各种 Web 服务器，&lt;a href=&#34;https://jimmysong.io/awesome-cloud-native/#proxy&#34; title=&#34;在这里&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;在这里&lt;/a&gt;
你可以看到一个代理列表；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代理可能与客户端或服务器位于同一节点（或网络空间，如 Kubernetes 中的 Pod），也可以位于远端。&lt;/p&gt;
&lt;p&gt;另外还可以根据代理对客户端或服务端是否可见（visible）来分为透明代理和非透明代理，如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/what-is-tproxy/transparent-proxy.svg&#34; data-img=&#34;/blog/what-is-tproxy/transparent-proxy.svg&#34; alt=&#34;image&#34; data-caption=&#34;透明代理和非透明代理&#34;&gt;
    
  
  &lt;figcaption&gt;透明代理和非透明代理&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;透明代理：所谓透明代理，即客户端和服务端感知不到代理的存在，客户端无需修改目的地址，也不需要采用代理协议连接代理服务器，所有目的地址转换都是在透明代理中完成的；&lt;/li&gt;
&lt;li&gt;非透明代理：客户端需要修改目的地址为代理服务器的地址，并使用代理协议连接代理服务器；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用-tproxy-透明代理&#34;&gt;使用 tproxy 透明代理&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;tproxy&lt;/code&gt; 是 Linux 的内核模块（自 Linux 2.2 版本开始引入），用于实现透明代理，其名称中的字母 &lt;code&gt;t&lt;/code&gt; 即代表透明（transparent）。&lt;/p&gt;
&lt;p&gt;要使用透明代理首先需要把指定的数据包使用 iptables 拦截到指定的网卡上，然后在该网卡监听并转发数据包。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;tproxy&lt;/code&gt; 实现透明代理的步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先需要实现流量拦截：在 iptables 的 &lt;code&gt;PREROUTING&lt;/code&gt; 链的 &lt;code&gt;mangle&lt;/code&gt; 表中创建一个规则，拦截流量发送给 tproxy 处理，例如 &lt;code&gt;iptables -t mangle -A PREROUTING -p tcp -dport 9080 -j TPROXY --on-port 15001 --on-ip 127.0.0.1 --tproxy-mark 0x1/0x1&lt;/code&gt;，给所有目的地为 &lt;code&gt;9080&lt;/code&gt; 端口的 TCP 数据包打上标记 &lt;code&gt;1&lt;/code&gt;，你还可以指定来源 IP 地址或者 &lt;a href=&#34;https://ipset.netfilter.org/&#34; title=&#34;IP 集&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IP 集&lt;/a&gt;
，进一步缩小标记范围，tproxy 监听在 &lt;code&gt;15001&lt;/code&gt; 端口；&lt;/li&gt;
&lt;li&gt;创建一个路由规则，将所有带有标记 &lt;code&gt;1&lt;/code&gt; 的数据包查找特定的路由表：例如 &lt;code&gt;ip rule add fwmark 1 lookup 100&lt;/code&gt;，让所有 &lt;code&gt;fwmark&lt;/code&gt; 为 1 的数据包查找 &lt;code&gt;100&lt;/code&gt; 路由表；&lt;/li&gt;
&lt;li&gt;将数据包映射到特定的本地地址：例如 &lt;code&gt;ip rule add local 0.0.0.0/0 dev lo table 100&lt;/code&gt;，在 &lt;code&gt;100&lt;/code&gt; 路由表中将所有 IPv4 地址声明为本地，当然这只是一个例子，实际使用时需要请将特定的 IP 的数据包转发到本地的 &lt;code&gt;lo&lt;/code&gt; 回环网卡；&lt;/li&gt;
&lt;li&gt;至此流量已被拦截到 tproxy 的监听端口 &lt;code&gt;15001&lt;/code&gt;（从 Linux 内核空间记入用户空间），你可以编写网络应用处理数据包或使用 &lt;a href=&#34;http://www.squid-cache.org/&#34; title=&#34;Squid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Squid&lt;/a&gt;
 或 &lt;a href=&#34;https://www.envoyproxy.io/&#34; title=&#34;Envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;
 等支持 tproxy 的软件来处理数据包；&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;pros&#34;&gt;透明代理的优点&lt;/h2&gt;
&lt;p&gt;透明代理具有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;透明代理提供更高的带宽并减少传输延迟，从而提高服务质量；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户无需配置网络和主机；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;企业可以控制对其网络服务的访问；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户可以通过透明代理连接互联网以绕过一些监管；&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cons&#34;&gt;透明代理的缺点&lt;/h2&gt;
&lt;p&gt;透明代理有以下缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果透明代理配置不当，可能导致用户无法连接互联网，而对于不知情的用户来说，他们无法排查和修改透明代理中的错误；&lt;/li&gt;
&lt;li&gt;透明代理的安全性无法得到保证，因为被拦截的用户流量可能被透明代理篡改；&lt;/li&gt;
&lt;li&gt;透明代理可能缓存用户信息，导致用户隐私泄露的风险；&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;透明代理作为代理中的一类重要类型，它的用途广泛，不论是 xray、clash 等代理软件，还是 Istio 服务网格中得使用了应用。了解它的原理和工作方式有助于我们科学正确的使用代理，而是否使用透明代理取决于你对它的新人和了解程度。&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kristrev/tproxy-example&#34; title=&#34;tproxy-example - github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tproxy-example - github.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://powerdns.org/tproxydoc/tproxy.md.html&#34; title=&#34;Linux transparent proxy support - powerdns.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Linux transparent proxy support - powerdns.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wiki.squid-cache.org/Features/Tproxy4&#34; title=&#34;Feature: TPROXY version 4.1&amp;#43; Support - wiki.squid-cache.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Feature: TPROXY version 4.1+ Support - wiki.squid-cache.org&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
