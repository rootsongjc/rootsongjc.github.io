<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song - 专注于探索后 Kubernetes 时代的云原生新范式 – 开源项目</title>
    <link>https://jimmysong.io/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</link>
    <description>Recent content in 开源项目 on Jimmy Song - 专注于探索后 Kubernetes 时代的云原生新范式</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2017-2022 Jimmy Song 保留所有权利</copyright>
    <lastBuildDate>Fri, 23 Jun 2017 12:24:12 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>使用 API blueprint 创建 API 文档</title>
      <link>https://jimmysong.io/blog/creating-api-document-with-api-blueprint/</link>
      <pubDate>Fri, 23 Jun 2017 12:24:12 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/creating-api-document-with-api-blueprint/</guid>
      <description>
        
        
        &lt;p&gt;在进行微服务开发的过程中，为了保证最终开发的系统跟最初的设计保持一致，约定RESTful接口之间的调用方法，我们需要将API设计文档化，因此我们引入了API Blueprint。&lt;/p&gt;
&lt;h2 id=&#34;api-blueprint-是什么&#34;&gt;API Blueprint 是什么&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://apiblueprint.org/&#34; title=&#34;API Blueprint&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;API Blueprint&lt;/a&gt;
 用来编写API文档的一种标记语言，类似于Markdown，因为是纯文本的，所以方便共享编辑，具体的语法规则可以在 &lt;a href=&#34;https://apiblueprint.org/documentation/&#34; title=&#34;API Blueprint documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;API Blueprint documentation&lt;/a&gt;
 查看，配合一些开源的工具可以把接口文档渲染成 html 再搭配一个静态服务器，方便于分享。&lt;/p&gt;
&lt;p&gt;另外，配合一些工具，可以直接生成一个 mock data 数据，这样只要和后端的同学约定好接口格式，那么前端再开发的时候可以使用 mock data 数据来做测试，等到后端写好接口之后再做联调就可以了。&lt;/p&gt;
&lt;p&gt;我们以&lt;a href=&#34;https://jimmysong.io/cloud-native-go&#34; title=&#34;Cloud Native Go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cloud Native Go&lt;/a&gt;
书中的&lt;a href=&#34;https://github.com/rootsongjc/gogo-service&#34; title=&#34;gogo-service&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gogo-service&lt;/a&gt;
示例里的&lt;code&gt;apiary.apib&lt;/code&gt;文件为例。&lt;/p&gt;
&lt;p&gt;该文件实际上是一个Markdown格式的文件，Github中原生支持该文件，使用&lt;a href=&#34;https://typora.io&#34; title=&#34;Typora&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Typora&lt;/a&gt;
打开后是这样子。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/creating-api-document-with-api-blueprint/apiary-api-blueprint.jpg&#34; data-img=&#34;/blog/creating-api-document-with-api-blueprint/apiary-api-blueprint.jpg&#34; data-width=&#34;939&#34; data-height=&#34;1057&#34; alt=&#34;image&#34; data-caption=&#34;apiary.apib文件&#34;&gt;
    
  
  &lt;figcaption&gt;apiary.apib文件&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在Visual Studio Code中有个API Element extension对于API Blueprint文件的支持也比较好。&lt;/p&gt;
&lt;h2 id=&#34;生成静态页面和进行冒烟测试&#34;&gt;生成静态页面和进行冒烟测试&lt;/h2&gt;
&lt;p&gt;我们分别使用开源的&lt;a href=&#34;https://github.com/danielgtaylor/aglio&#34; title=&#34;aglio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aglio&lt;/a&gt;
和&lt;a href=&#34;https://github.com/Aconex/drakov&#34; title=&#34;drakov&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;drakov&lt;/a&gt;
来生成静态页面和进行冒烟测试。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/danielgtaylor/aglio&#34; title=&#34;aglio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;aglio&lt;/a&gt;
 是一个可以根据 api-blueprint 的文档生成静态 HTML 页面的工具。&lt;/p&gt;
&lt;p&gt;其生成的工具不是简单的 markdown 到 html 的转换, 而是可以生成类似 rdoc 这样的拥有特定格式风格的查询文档。&lt;/p&gt;
&lt;p&gt;在本地安装有node环境的情况下，使用下面的命令安装和使用aglio。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ npm install -g aglio
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ aglio -i apiary.apib -o api.html
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;打开api.html文件后，如图：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/creating-api-document-with-api-blueprint/api-blueprint-html.jpg&#34; data-img=&#34;/blog/creating-api-document-with-api-blueprint/api-blueprint-html.jpg&#34; data-width=&#34;951&#34; data-height=&#34;930&#34; alt=&#34;image&#34; data-caption=&#34;使用aglio生成的API文档&#34;&gt;
    
  
  &lt;figcaption&gt;使用aglio生成的API文档&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;安装和使用drakov。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ npm install -g drakov
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ drakov -f apiary.apib -p &lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;INFO&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; No configuration files found
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;INFO&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Loading configuration from CLI
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   DRAKOV STARTED   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;LOG&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setup Route: GET /matches List All Matches
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;LOG&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setup Route: POST /matches Start a New Match
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;LOG&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setup Route: GET /matches/:match_id Get Match Details
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;LOG&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setup Route: GET /matches/:match_id Get Current Liberties &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; Match
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;LOG&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setup Route: GET /matches/:match_id Get Current Chains &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; Match
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;LOG&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setup Route: GET /matches/:match_id/moves Get a Sequential List of All Moves Performed in a Match
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;LOG&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; Setup Route: POST /matches/:match_id/moves Make a Move
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Drakov 1.0.4      Listening on port &lt;span class=&#34;m&#34;&gt;3000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;通过&lt;code&gt;http://localhost:3000&lt;/code&gt;就可以对该应用进行冒烟测试了。&lt;/p&gt;
&lt;p&gt;例如查询有哪些match：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ curl http://localhost:3000/matches
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt; : &lt;span class=&#34;s2&#34;&gt;&amp;#34;5a003b78-409e-4452-b456-a6f0dcee05bd&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;started_at&amp;#34;&lt;/span&gt;: 13231239123391,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;turn&amp;#34;&lt;/span&gt; : 27,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;gridsize&amp;#34;&lt;/span&gt; : 19,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;playerWhite&amp;#34;&lt;/span&gt; : &lt;span class=&#34;s2&#34;&gt;&amp;#34;bob&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;playerBlack&amp;#34;&lt;/span&gt; : &lt;span class=&#34;s2&#34;&gt;&amp;#34;alfred&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外通过&lt;a href=&#34;https://apiary.io&#34; title=&#34;Apiary&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apiary&lt;/a&gt;
这个网站，我们可以直接以上的所有功能，还可以同时在页面上进行mock test，生成多种语言的code example。如图：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/creating-api-document-with-api-blueprint/apiary-gogo-service.jpg&#34; data-img=&#34;/blog/creating-api-document-with-api-blueprint/apiary-gogo-service.jpg&#34; data-width=&#34;1863&#34; data-height=&#34;957&#34; alt=&#34;image&#34; data-caption=&#34;Apiary页面&#34;&gt;
    
  
  &lt;figcaption&gt;Apiary页面&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>开源微服务管理平台 fabric8 简介</title>
      <link>https://jimmysong.io/blog/fabric8-introduction/</link>
      <pubDate>Mon, 10 Apr 2017 21:39:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/fabric8-introduction/</guid>
      <description>
        
        
        &lt;p&gt;无意中发现&lt;a href=&#34;https://github.com/fabric8io/fabric8&#34; title=&#34;Fabric8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fabric8&lt;/a&gt;
这个&lt;strong&gt;对于Java友好的开源微服务管理平台&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;其实这在这里发现的&lt;a href=&#34;http://blog.sonatype.com/achieving-ci/cd-with-kubernetes&#34; title=&#34;Achieving CI/CD with Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Achieving CI/CD with Kubernetes&lt;/a&gt;
（by Ramit Surana,on February 17, 2017），其实是先在&lt;a href=&#34;https://www.slideshare.net/ramitsurana/achieving-cicd-with-kubernetes&#34; title=&#34;slideshare&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;slideshare&lt;/a&gt;
上看到的。&lt;/p&gt;
&lt;p&gt;大家可能以前听过一个叫做&lt;a href=&#34;https://github.com/fabric/fabric/&#34; title=&#34;fabric&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fabric&lt;/a&gt;
的工具，那是一个 Python (2.5-2.7) 库和命令行工具，用来流水线化执行 SSH 以部署应用或系统管理任务。所以大家不要把fabric8跟fabric搞混，虽然它们之间有一些共同点，但两者完全不是同一个东西，&lt;strong&gt;fabric8不是fabric的一个版本&lt;/strong&gt;。Fabric是用python开发的，fabric8是java开发的。&lt;/p&gt;
&lt;p&gt;如果你想了解简化Fabric可以看它的&lt;a href=&#34;http://fabric-docs-cn.readthedocs.io/zh_CN/latest/tutorial.html&#34; title=&#34;中文官方文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中文官方文档&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;fabric8简介&#34;&gt;Fabric8简介&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;fabric8&lt;/strong&gt;是一个开源&lt;strong&gt;集成开发平台&lt;/strong&gt;，为基于&lt;a href=&#34;http://kubernetes.io/&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
和&lt;a href=&#34;https://jenkins.io/&#34; title=&#34;Jenkins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins&lt;/a&gt;
的微服务提供&lt;a href=&#34;http://fabric8.io/guide/cdelivery.html&#34; title=&#34;持续发布&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;持续发布&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;使用fabric可以很方便的通过&lt;a href=&#34;http://fabric8.io/guide/cdelivery.html&#34; title=&#34;Continuous Delivery pipelines&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Continuous Delivery pipelines&lt;/a&gt;
创建、编译、部署和测试微服务，然后通过Continuous Improvement和&lt;a href=&#34;http://fabric8.io/guide/chat.html&#34; title=&#34;ChatOps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ChatOps&lt;/a&gt;
运行和管理他们。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://fabric8.io/guide/fabric8DevOps.html&#34; title=&#34;Fabric8微服务平台&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fabric8微服务平台&lt;/a&gt;
提供：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/console.html&#34; title=&#34;Developer Console&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Developer Console&lt;/a&gt;
，是一个&lt;a href=&#34;http://www.infoq.com/cn/news/2014/11/seven-principles-rich-web-app&#34; title=&#34;富web应用&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;富web应用&lt;/a&gt;
，提供一个单页面来创建、编辑、编译、部署和测试微服务。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/cdelivery.html&#34; title=&#34;Continuous Integration and Continous Delivery&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Continuous Integration and Continous Delivery&lt;/a&gt;
，使用 &lt;a href=&#34;https://jenkins.io/&#34; title=&#34;Jenkins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins&lt;/a&gt;
 with a &lt;a href=&#34;http://fabric8.io/guide/jenkinsWorkflowLibrary.html&#34; title=&#34;Jenkins Workflow Library&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins Workflow Library&lt;/a&gt;
更快和更可靠的交付软件。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/management.html&#34; title=&#34;Management&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Management&lt;/a&gt;
，集中式管理&lt;a href=&#34;http://fabric8.io/guide/logging.html&#34; title=&#34;Logging&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Logging&lt;/a&gt;
、&lt;a href=&#34;http://fabric8.io/guide/metrics.html&#34; title=&#34;Metrics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Metrics&lt;/a&gt;
, &lt;a href=&#34;http://fabric8.io/guide/chat.html&#34; title=&#34;ChatOps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ChatOps&lt;/a&gt;
、&lt;a href=&#34;http://fabric8.io/guide/chaosMonkey.html&#34; title=&#34;Chaos Monkey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chaos Monkey&lt;/a&gt;
，使用&lt;a href=&#34;http://hawt.io/&#34; title=&#34;Hawtio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hawtio&lt;/a&gt;
和&lt;a href=&#34;http://jolokia.org/&#34; title=&#34;Jolokia&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jolokia&lt;/a&gt;
管理Java Containers。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/ipaas.html&#34; title=&#34;Integration&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Integration&lt;/a&gt;
 &lt;!-- raw HTML omitted --&gt;&lt;em&gt;Integration Platform As A Service&lt;/em&gt;&lt;!-- raw HTML omitted --&gt; with &lt;a href=&#34;http://fabric8.io/guide/console.html&#34; title=&#34;deep visualisation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;deep visualisation&lt;/a&gt;
 of your &lt;a href=&#34;http://camel.apache.org/&#34; title=&#34;Apache Camel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache Camel&lt;/a&gt;
 integration services, an &lt;a href=&#34;http://fabric8.io/guide/apiRegistry.html&#34; title=&#34;API Registry&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;API Registry&lt;/a&gt;
 to view of all your RESTful and SOAP APIs and &lt;a href=&#34;http://fabric8.io/guide/fabric8MQ.html&#34; title=&#34;Fabric8 MQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fabric8 MQ&lt;/a&gt;
 provides &lt;!-- raw HTML omitted --&gt;&lt;em&gt;Messaging As A Service&lt;/em&gt;&lt;!-- raw HTML omitted --&gt; based on &lt;a href=&#34;http://activemq.apache.org/&#34; title=&#34;Apache ActiveMQ&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache ActiveMQ&lt;/a&gt;
。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/tools.html&#34; title=&#34;Java Tools&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java Tools&lt;/a&gt;
 帮助Java应用使用&lt;a href=&#34;http://kubernetes.io/&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/mavenPlugin.html&#34; title=&#34;Maven Plugin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Maven Plugin&lt;/a&gt;
 for working with &lt;a href=&#34;http://kubernetes.io/&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
 ，这真是极好的&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/testing.html&#34; title=&#34;Integration and System Testing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Integration and System Testing&lt;/a&gt;
 of &lt;a href=&#34;http://kubernetes.io/&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
 resources easily inside &lt;a href=&#34;http://junit.org/&#34; title=&#34;JUnit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;JUnit&lt;/a&gt;
 with &lt;a href=&#34;http://arquillian.org/&#34; title=&#34;Arquillian&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arquillian&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/javaLibraries.html&#34; title=&#34;Java Libraries&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Java Libraries&lt;/a&gt;
 and support for &lt;a href=&#34;http://fabric8.io/guide/cdi.html&#34; title=&#34;CDI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CDI&lt;/a&gt;
 extensions for working with &lt;a href=&#34;http://kubernetes.io/&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fabric8微服务平台&#34;&gt;Fabric8微服务平台&lt;/h2&gt;
&lt;p&gt;Fabric8提供了一个完全集成的开源微服务平台，可在任何的&lt;a href=&#34;http://kubernetes.io/&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt;
和&lt;a href=&#34;http://www.openshift.org/&#34; title=&#34;OpenShift&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OpenShift&lt;/a&gt;
环境中开箱即用。&lt;/p&gt;
&lt;p&gt;整个平台是基于微服务而且是模块化的，你可以按照微服务的方式来使用它。&lt;/p&gt;
&lt;p&gt;微服务平台提供的服务有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开发者控制台，这是一个富Web应用程序，它提供了一个单一的页面来创建、编辑、编译、部署和测试微服务。&lt;/li&gt;
&lt;li&gt;持续集成和持续交付，帮助团队以更快更可靠的方式交付软件，可以使用以下开源软件：
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jenkins.io/&#34; title=&#34;Jenkins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins&lt;/a&gt;
：CI／CD pipeline&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sonatype.org/nexus/&#34; title=&#34;Nexus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Nexus&lt;/a&gt;
： 组件库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gogs.io/&#34; title=&#34;Gogs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gogs&lt;/a&gt;
：git代码库&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.sonarqube.org/&#34; title=&#34;SonarQube&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SonarQube&lt;/a&gt;
：代码质量维护平台&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/jenkinsWorkflowLibrary.html&#34; title=&#34;Jenkins Workflow Library&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins Workflow Library&lt;/a&gt;
：在不同的项目中复用&lt;a href=&#34;https://github.com/fabric8io/jenkins-workflow-library&#34; title=&#34;Jenkins Workflow scripts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jenkins Workflow scripts&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/fabric8YmlFile.html&#34; title=&#34;Fabric8.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Fabric8.yml&lt;/a&gt;
：为每个项目、存储库、聊天室、工作流脚本和问题跟踪器提供一个配置文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/chat.html&#34; title=&#34;ChatOps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ChatOps&lt;/a&gt;
：通过使用&lt;a href=&#34;https://hubot.github.com/&#34; title=&#34;hubot&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hubot&lt;/a&gt;
来开发和管理，能够让你的团队拥抱DevOps，通过聊天和系统通知的方式来&lt;a href=&#34;https://github.com/fabric8io/fabric8-jenkins-workflow-steps#hubotapprove&#34; title=&#34;approval of release promotion&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;approval of release promotion&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/chaosMonkey.html&#34; title=&#34;Chaos Monkey&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Chaos Monkey&lt;/a&gt;
：通过干掉&lt;a href=&#34;http://fabric8.io/guide/pods.html&#34; title=&#34;pods&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pods&lt;/a&gt;
来测试系统健壮性和可靠性&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/management.html&#34; title=&#34;管理&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;管理&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/logging.html&#34; title=&#34;日志&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;日志&lt;/a&gt;
 统一集群日志和可视化查看状态&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/metrics.html&#34; title=&#34;metris&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;metris&lt;/a&gt;
 可查看历史metrics和可视化&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://hao.jobbole.com/fabric8/&#34; title=&#34;fabric8：容器集成平台——伯乐在线&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fabric8：容器集成平台——伯乐在线&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzI0NjI4MDg5MQ==&amp;amp;mid=2715290731&amp;amp;idx=1&amp;amp;sn=f1fcacb9aa4f1f3037918f03c29c0465&amp;amp;chksm=cd6d0bbffa1a82a978ccc0405afa295bd9265bd9f89f2217c80f48e1c497b25d1f24090108af&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=0410RTk3PKkxlFlLbCVlOKMK#rd&#34; title=&#34;Kubernetes部署微服务速成指南——&amp;lt;em&amp;gt;2017-03-09&amp;lt;/em&amp;gt; &amp;lt;em&amp;gt;徐薛彪&amp;lt;/em&amp;gt; 容器时代微信公众号&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes部署微服务速成指南——&lt;em&gt;2017-03-09&lt;/em&gt; &lt;em&gt;徐薛彪&lt;/em&gt; 容器时代微信公众号&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fabric8.io/&#34; title=&#34;fabric8官网&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fabric8官网&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fabric8.io/guide/getStarted/gofabric8.html&#34; title=&#34;fabric8 get started&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fabric8 get started&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;&lt;del&gt;我在自己笔记本上装了个minikube，试玩感受将在后续发表。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;试玩时需要科学上网。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$gofabric8&lt;/span&gt; start
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;using the executable /usr/local/bin/minikube
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;minikube already running
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;using the executable /usr/local/bin/kubectl
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Switched to context &lt;span class=&#34;s2&#34;&gt;&amp;#34;minikube&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Deploying fabric8 to your Kubernetes installation at https://192.168.99.100:8443 &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; domain  in namespace default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Loading fabric8 releases from maven repository:https://repo1.maven.org/maven2/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Deploying package: platform version: 2.4.24
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Now about to install package https://repo1.maven.org/maven2/io/fabric8/platform/packages/fabric8-platform/2.4.24/fabric8-platform-2.4.24-kubernetes.yml
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Namespace in namespace default name user-secrets-source-admin
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Found namespace on kind Secret of user-secrets-source-adminProcessing resource kind: Secret in namespace user-secrets-source-admin name default-gogs-git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Secret in namespace default name jenkins-docker-cfg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Secret in namespace default name jenkins-git-ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Secret in namespace default name jenkins-hub-api-token
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Secret in namespace default name jenkins-master-ssh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Secret in namespace default name jenkins-maven-settings
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Secret in namespace default name jenkins-release-gpg
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Secret in namespace default name jenkins-ssh-config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: ServiceAccount in namespace default name configmapcontroller
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: ServiceAccount in namespace default name exposecontroller
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: ServiceAccount in namespace default name fabric8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: ServiceAccount in namespace default name gogs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: ServiceAccount in namespace default name jenkins
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Service in namespace default name fabric8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Service in namespace default name fabric8-docker-registry
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Service in namespace default name fabric8-forge
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Processing resource kind: Service in namespace default name gogs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Default GOGS admin username/password &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; gogsadmin/RedHat&lt;span class=&#34;nv&#34;&gt;$1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Checking &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; PersistentVolumeClaims &lt;span class=&#34;nb&#34;&gt;bind&lt;/span&gt; to a PersistentVolume ....
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Downloading images and waiting to open the fabric8 console...
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-------------------------
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.....................................................
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;启动了半天一直是这种状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Waiting, endpoint &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; service is not ready yet...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我一看下载下来的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;https://repo1.maven.org/maven2/io/fabric8/platform/packages/fabric8-platform/2.4.24/fabric8-platform-2.4.24-kubernetes.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文件，真是&lt;strong&gt;蔚为壮观&lt;/strong&gt;啊，足足有&lt;strong&gt;24712行&lt;/strong&gt;(这里面都是实际配置，没有配置充行数)，使用了如下这些docker镜像，足足有&lt;strong&gt;53个docker镜像&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/alpine-caddy:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/apiman-gateway:2.2.168
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/apiman:2.2.168
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/chaos-monkey:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/configmapcontroller:2.3.5
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/eclipse-orion:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/elasticsearch-k8s:2.3.4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/elasticsearch-logstash-template:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/elasticsearch-v1:2.2.168
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/exposecontroller:2.3.2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/fabric8-console:2.2.199
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/fabric8-forge:2.3.88
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/fabric8-kiwiirc:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/fluentd-kubernetes:v1.19
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/gerrit:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/git-collector:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/gogs:v0.9.97
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/grafana:2.6.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/hubot-irc:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/hubot-letschat:v1.0.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/hubot-notifier:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/hubot-slack:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/jenkins-docker:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/jenkinshift:2.2.199
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/kafka:2.2.153
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/kibana-config:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/kibana4:v4.5.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/lets-chat:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/maven-builder:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/message-broker:2.2.168
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/message-gateway:2.2.168
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/nexus:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/taiga-back:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/taiga-front:2.2.311
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/turbine-server:1.0.28
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/zookeeper:2.2.153
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fabric8/zookeeper:2.2.168
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;funktion/funktion-nodejs-runtime:1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;funktion/funktion:1.0.9
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gitlab/gitlab-ce
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jboss/keycloak:2.2.0.Final
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jfrog-docker-registry.bintray.io/artifactory/artifactory-oss
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;jimmidyson/configmap-reload:v0.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;manageiq/manageiq:latest
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mongo
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;mysql:5.7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nginxdemos/nginx-ingress:0.3.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;openzipkin/zipkin:1.13.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;postgres
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;prom/blackbox-exporter:master
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;prom/node-exporter
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;prom/prometheus:v1.3.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;registry:2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你们感受下吧，我果断放弃了在自己笔记本上安装的念头。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>两款开源图片处理工具对比</title>
      <link>https://jimmysong.io/blog/picture-process/</link>
      <pubDate>Sun, 02 Apr 2017 20:27:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/picture-process/</guid>
      <description>
        
        
        &lt;p&gt;如果你看过美剧「硅谷」会记得剧中主角们所在的创业公司&lt;a href=&#34;www.piedpiper.com&#34; title=&#34;PiedPipper&#34;&gt;PiedPipper&lt;/a&gt;
，他们就是靠自己发明的视频压缩算法来跟大公司Hooli竞争的，这部剧现在已经发展到第4季，在&lt;a href=&#34;http://v.qq.com/detail/d/dr2zn76oez8tyt4.html?ptag=baidu.aladdin.tv&#34; title=&#34;腾讯视频&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;腾讯视频&lt;/a&gt;
上可以免费观看。&lt;/p&gt;
&lt;p&gt;最近关注了两个&lt;strong&gt;图像处理&lt;/strong&gt;的Open Source Projects。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/guetzli&#34; title=&#34;Google Guetzli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Guetzli&lt;/a&gt;
 图像压缩工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer&#34; title=&#34;Luan Fujun&amp;amp;rsquo;s Deep Photo Style Transfer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Luan Fujun&amp;rsquo;s Deep Photo Style Transfer&lt;/a&gt;
 图像style转换工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外对于图像处理还处于Photoshop、Lightroom这种摄影后期和图像处理命令行工具&lt;a href=&#34;https://www.imagemagick.org/script/index.php&#34; title=&#34;ImageMagick&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ImageMagick&lt;/a&gt;
的我来说，图像压缩，智能图像风格转换实乃上乘武功，不是我等凡夫俗子驾驭的了，但是乘兴而来，总不能败兴而归吧，下面我们来一探究竟。&lt;/p&gt;
&lt;h2 id=&#34;google-guetzli&#34;&gt;Google Guetzli&lt;/h2&gt;
&lt;p&gt;聊聊架构微信公众号上有一篇介绍&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659599074&amp;amp;idx=1&amp;amp;sn=a26ae2a8becdc1f2cfbddf44d8ca1495&amp;amp;chksm=8be997f0bc9e1ee6e33f3e33c73d11884ad66085c0aedc9dd5e482063482887d0733d8e7d187#rd&#34; title=&#34;Google开源新算法，可将JPEG文件缩小35%&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google开源新算法，可将JPEG文件缩小35%&lt;/a&gt;
文章。&lt;/p&gt;
&lt;p&gt;我在Mac上试用了一下，安装很简单，只要一条命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install guetzli
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是当我拿一张&lt;code&gt;22M&lt;/code&gt;大小的照片使用guetzli压缩的时候，我是绝望的，先后三次kill掉了进程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;因为实在是太慢了&lt;/strong&gt;，也能是我软件对内存和CPU的利用率不高，效果你们自己看看。&lt;/p&gt;
&lt;p&gt;原图是这个样子的，拍摄地点在景山上的，俯瞰紫禁城的绝佳位置。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5430.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5430.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;原图&#34;&gt;
    
  
  &lt;figcaption&gt;原图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;guetzli --quality &lt;span class=&#34;m&#34;&gt;84&lt;/span&gt; --verbose 20160403052.jpg output.jpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为什么quality要设置成84呢？因为只能设置为84+的quality，如果要设置的更低的话需要自己修改代码。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5429.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5429.JPG&#34; data-width=&#34;3254&#34; data-height=&#34;2034&#34; alt=&#34;image&#34; data-caption=&#34;process&#34;&gt;
    
  
  &lt;figcaption&gt;process&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;耗时了一个小时，后台进程信息。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5428.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5428.JPG&#34; data-width=&#34;3254&#34; data-height=&#34;2034&#34; alt=&#34;image&#34; data-caption=&#34;后台进程&#34;&gt;
    
  
  &lt;figcaption&gt;后台进程&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这个是使用&lt;strong&gt;Squash&lt;/strong&gt;压缩后的大小效果，压缩每张照片差不多只要3秒钟。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Squash的logo就是个正在被剥皮的🍊，这是&lt;a href=&#34;http://xclient.info/s/squash.html&#34; title=&#34;下载地址&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;下载地址&lt;/a&gt;
。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;压缩比分别为&lt;code&gt;70%&lt;/code&gt;和&lt;code&gt;30%&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5434.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5434.JPG&#34; data-width=&#34;1652&#34; data-height=&#34;314&#34; alt=&#34;image&#34; data-caption=&#34;Img&#34;&gt;
    
  
  &lt;figcaption&gt;Img&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;压缩比70%后的细节放大图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5432.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5432.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;70&#34;&gt;
    
  
  &lt;figcaption&gt;70&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;压缩比30%的细节放大图&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5433.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5433.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;30&#34;&gt;
    
  
  &lt;figcaption&gt;30&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;你看出什么区别了吗？反正我是没有。&lt;/p&gt;
&lt;p&gt;下面再来看看耗时一个小时，千呼万唤始出来的guetzli压缩后的效果和使用squash压缩比为30%的效果对比。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/picture-process/FullSizeRender.jpg&#34; data-img=&#34;/blog/picture-process/FullSizeRender.jpg&#34; data-width=&#34;3269&#34; data-height=&#34;2100&#34; alt=&#34;image&#34; data-caption=&#34;对比&#34;&gt;
    
  
  &lt;figcaption&gt;对比&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;左面是使用guetzli压缩后（4.1M），右面使用的squash压缩后（3.1M）的照片。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;似乎还是没有什么区别啊？你看出来了吗？&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;guetzli总结&#34;&gt;Guetzli总结&lt;/h3&gt;
&lt;p&gt;可能是我使用Guetzli的方式不对，但是命令行里确实没有设置CPU和内存资源的选项啊，为啥压缩照片会这么慢呢？效果也并不出彩，不改代码的话照片质量只能设置成84以上，但是这个是&lt;strong&gt;Open Source&lt;/strong&gt;的，使用的C++开发，可以研究下它的图像压缩算法。&lt;/p&gt;
&lt;h1 id=&#34;deep-photo-style-transfer&#34;&gt;Deep Photo Style Transfer&lt;/h1&gt;
&lt;p&gt;来自康奈尔大学的Luan Fujun开源的图像sytle转换工具，看了&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer&#34; title=&#34;README&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;README&lt;/a&gt;
的介绍，上面有很多图像风格转换的例子，真的很惊艳，市面上好像还没有这种能够在给定任意一张照片的情况下，自动将另一张照片转换成该照片的style。&lt;/p&gt;
&lt;p&gt;这个工具使用Matlab和Lua开发，基于&lt;a href=&#34;https://github.com/torch/torch7&#34; title=&#34;Torch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Torch&lt;/a&gt;
运行的时候需要&lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34; title=&#34;CUDA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CUDA&lt;/a&gt;
，&lt;a href=&#34;https://developer.nvidia.com/cudnn&#34; title=&#34;cudnn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cudnn&lt;/a&gt;
，&lt;a href=&#34;https://www.mathworks.com/&#34; title=&#34;Matlab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matlab&lt;/a&gt;
，环境实在太复杂，就没折腾，启动有人发布&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer/issues/29&#34; title=&#34;Docker镜像&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker镜像&lt;/a&gt;
，已经有人提了issue。&lt;/p&gt;
&lt;p&gt;如果它能够被商用，绝对是继&lt;strong&gt;Prisma&lt;/strong&gt;后又一人工智能照片处理应用利器。&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;是不是有了照片风格转换这个东西就不需要做照片后期了？只要选几张自己喜欢的风格照片，再鼠标点几下就可以完成照片处理了？摄影师要失业了？非也！照片风格东西本来就是很主观性的，每个人都有自己喜欢的风格，照相机发明后就有人说画家要失业了，其实不然，画画依然是创造性地劳动，只能说很多写实风格的画家要失业了。Deep Photo Style Transfer也许会成为Lightroom或者手机上一款app的功能，是一个不错的工具。也许还会成为像Prisma一样的现象级产品，who knows?🤷‍♂️&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
