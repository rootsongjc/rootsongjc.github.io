
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – 开源项目</title>
    <link>https://jimmysong.io/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/</link>
    <description>Recent content in 开源项目 on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>Jimmy Song</managingEditor>
    <webMaster>Jimmy Song</webMaster>
    <lastBuildDate>Mon, 15 Apr 2019 19:37:02 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
                                                         
    
                                                   
                           
    <item>
      <title>如何将一个开源项目加入 CNCF？</title>
      <link>https://jimmysong.io/blog/contribute-project-to-cncf/</link>
      <pubDate>Mon, 15 Apr 2019 19:37:02 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/blog/contribute-project-to-cncf/</guid>
      <description>
        
        
        &lt;p&gt;前段时间看了一篇文章&lt;a href=&#34;https://www.infoq.cn/article/l0bCXU3SojYXpz-AhP3v&#34; title=&#34;为什么中国没有 Apache 基金会这样的组织？&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;为什么中国没有 Apache 基金会这样的组织？&lt;/a&gt;，二叉树视频中采访了&lt;a href=&#34;http://www.kaiyuanshe.cn/&#34; title=&#34;开源社&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源社&lt;/a&gt;的理事长老刘，他的一番话也让我很受启发，在关注和参与 CNCF 基金会这几年来我也有很多收获，有一点就是了解到了一个开源社区（基金会）治理的规则。&lt;/p&gt;
&lt;p&gt;虽然 CNCF 没有 Apache、GNOME、FreeBSD 历史那么悠久，但是它成立的短短几年内就成功的运作了 &lt;a href=&#34;https://kubernetes.io&#34; title=&#34;Kubernetes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes&lt;/a&gt; 这样的超大型开源项目，一定有其可取之处。今天我就来给大家分享下 CNCF 基金会的开源项目治理规则和组织架构，还有如何将一个开源项目加入到 CNCF。&lt;/p&gt;
&lt;p&gt;CNCF 根据“&lt;a href=&#34;https://jimmysong.io/blog/crossing-the-chasm/&#34; title=&#34;鸿沟理论&#34;&gt;鸿沟理论&lt;/a&gt;”将其托管的项目分成三个成熟阶段，并设置了项目晋级到更高阶段的标准。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“鸿沟理论”是由 Geoffrey A. Moore 提出的高科技产品的市场营销理论。新技术要想跨越鸿沟，必须能够实现一些跨越式的发展，&lt;strong&gt;拥有某一些以前不可能实现的功能&lt;/strong&gt;，具有某种内在价值并能够&lt;strong&gt;赢得非技术人员的&lt;/strong&gt;青睐。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/contribute-project-to-cncf/cncf-graduation_hud737096b897764a104a70a094ee629ce_29168_866x368_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/contribute-project-to-cncf/cncf-graduation.jpg&#34; data-img=&#34;/blog/contribute-project-to-cncf/cncf-graduation.jpg&#34; data-width=&#34;866&#34; data-height=&#34;368&#34; alt=&#34;image&#34; data-caption=&#34;CNCF 项目的成熟度分类&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;CNCF 项目的成熟度分类&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;图片来自 &lt;a href=&#34;https://www.cncf.io/projects/&#34; title=&#34;https://www.cncf.io/projects/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cncf.io/projects/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;开源项目如何加入-cncf&#34;&gt;开源项目如何加入 CNCF&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;开源项目所支持的公司成为 CNCF 会员&lt;/li&gt;
&lt;li&gt;开源项目满足 CNCF 的要求（见后文）&lt;/li&gt;
&lt;li&gt;在 GitHub 上提交 &lt;a href=&#34;https://github.com/cncf/toc/issues/113&#34; title=&#34;proposal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;proposal&lt;/a&gt;（GitHub Issue）列举项目介绍、现状、目标、license、用户与社区等&lt;/li&gt;
&lt;li&gt;由 Chris Aniszczyk 安排该项目在某个 TOC 双月会议上介绍给 TOC 成员&lt;/li&gt;
&lt;li&gt;1.TOC 会将开源项目指定到某个 &lt;a href=&#34;https://jimmysong.io/kubernetes-handbook/cloud-native/cncf-sig.html&#34; title=&#34;SIG&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SIG&lt;/a&gt; 中&lt;/li&gt;
&lt;li&gt;项目获得两个 TOC 成员的赞成可进入 &lt;a href=&#34;https://github.com/cncf/toc/blob/master/process/sandbox.md&#34; title=&#34;sandbox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sandbox&lt;/a&gt;（也可以直接获得 2/3 多数 TOC 投票进入 Incubating 状态）&lt;/li&gt;
&lt;li&gt;知识产权转移给 CNCF&lt;/li&gt;
&lt;li&gt;CNCF 安排博客撰写、PR 等&lt;/li&gt;
&lt;li&gt;每年一次评审，晋升到 incubating 需要 2/3 的 TOC 成员投票赞成；至少 3 家用户成功在生产上使用；通过 TOC 的尽职调查；贡献者数量健康稳定&lt;/li&gt;
&lt;li&gt;Sandbox 中的项目没有时效性质，可能永远都无法进入 incubating 状态，被 CNCF 谨慎宣传&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;cncf-开源项目成熟度演进&#34;&gt;CNCF 开源项目成熟度演进&lt;/h3&gt;
&lt;p&gt;CNCF 的开源项目遵循如下图所示的成熟度演进。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/contribute-project-to-cncf/cncf-graduation-criteria-v2_huf4b643a33f77cf76048aac3c1ced1629_164397_1056x714_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/contribute-project-to-cncf/cncf-graduation-criteria-v2.jpg&#34; data-img=&#34;/blog/contribute-project-to-cncf/cncf-graduation-criteria-v2.jpg&#34; data-width=&#34;1056&#34; data-height=&#34;714&#34; alt=&#34;image&#34; data-caption=&#34;CNCF 项目成熟度级别&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;CNCF 项目成熟度级别&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;关于上图的一些说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加入 Sandbox 只需要 2 个 TOC 成员赞成&lt;/li&gt;
&lt;li&gt;成熟一点的项目可以直接进入 incubating 阶段，但是 CNCF 会控制不同阶段的项目比例&lt;/li&gt;
&lt;li&gt;晋级到 Incubating 或 Graduated 需要至少 2/3 的 TOC 成员（6 名或以上）投票赞成&lt;/li&gt;
&lt;li&gt;每年将评审一次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;目前处于沙箱、孵化中、已毕业项目的数量比例为 5:16:13，详见 &lt;a href=&#34;https://cncf.io/projects&#34; title=&#34;https://cncf.io/projects&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cncf.io/projects&lt;/a&gt;。其中沙箱（sandbox）项目因为其处于早期阶段并没有直接在上面的链接页面中列出，而是一个单独的 &lt;a href=&#34;https://www.cncf.io/sandbox-projects/&#34; title=&#34;Sandbox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sandbox&lt;/a&gt; 页面，因为 CNCF 为 sandbox 阶段的项目会谨慎背书。&lt;/p&gt;
&lt;h3 id=&#34;纳入-cncf-开源版图的项目需要符合其对云原生的定义&#34;&gt;纳入 CNCF 开源版图的项目需要符合其对云原生的定义&lt;/h3&gt;
&lt;p&gt;CNCF 中托管的开源项目要符合云原生定义：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;云原生技术有利于各组织在公有云、私有云和混合云等新型动态环境中，构建和运行可弹性扩展的应用。&lt;strong&gt;云原生的代表技术包括容器、服务网格、微服务、不可变基础设施和声明式 API&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;这些技术能够构建容错性好、易于管理和便于观察的松耦合系统。结合可靠的自动化手段，云原生技术使工程师能够轻松地对系统作出频繁和可预测的重大变更。&lt;/li&gt;
&lt;li&gt;云原生计算基金会（CNCF）致力于培育和维护一个厂商中立的开源生态系统，来推广云原生技术。我们通过将最前沿的模式民主化，让这些创新为大众所用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;项目运作流程&#34;&gt;项目运作流程&lt;/h3&gt;
&lt;p&gt;下图演示了开源项目加入 CNCF 后的整个运作流程。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/contribute-project-to-cncf/006tNc79ly1g1yz80ag98j31cs0n2gr7_hu3d4cf0904c5586c6ac292c8117205c68_161108_1756x830_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/contribute-project-to-cncf/006tNc79ly1g1yz80ag98j31cs0n2gr7.jpg&#34; data-img=&#34;/blog/contribute-project-to-cncf/006tNc79ly1g1yz80ag98j31cs0n2gr7.jpg&#34; data-width=&#34;1756&#34; data-height=&#34;830&#34; alt=&#34;image&#34; data-caption=&#34;CNCF 中的项目运作&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;CNCF 中的项目运作&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h3 id=&#34;开源项目如何加入-cncf-1&#34;&gt;开源项目如何加入 CNCF&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;开源项目所支持的公司成为 CNCF 会员&lt;/li&gt;
&lt;li&gt;开源项目满足 CNCF 的要求（见后文）&lt;/li&gt;
&lt;li&gt;在 GitHub 上提交&lt;a href=&#34;https://github.com/cncf/toc/issues/113&#34; title=&#34;proposal&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;proposal&lt;/a&gt;（GitHub Issue）列举项目介绍、现状、目标、license、用户与社区等&lt;/li&gt;
&lt;li&gt;由 Chris Aniszczyk 安排该项目在某个 TOC 双月会议上介绍给 TOC 成员&lt;/li&gt;
&lt;li&gt;1.TOC 会将开源项目指定到某个 &lt;a href=&#34;https://jimmysong.io/kubernetes-handbook/cloud-native/cncf-sig.html&#34; title=&#34;SIG&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SIG&lt;/a&gt; 中&lt;/li&gt;
&lt;li&gt;项目获得两个 TOC 成员的赞成可进入&lt;a href=&#34;https://github.com/cncf/toc/blob/master/process/sandbox.md&#34; title=&#34;sandbox&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;sandbox&lt;/a&gt;（也可以直接获得 2/3 多数 TOC 投票进入 Incubating 状态）&lt;/li&gt;
&lt;li&gt;知识产权转移给 CNCF&lt;/li&gt;
&lt;li&gt;CNCF 安排博客撰写、PR 等&lt;/li&gt;
&lt;li&gt;每年一次评审，晋升到 incubating 需要 2/3 的 TOC 成员投票赞成；至少 3 家用户成功在生产上使用；通过 TOC 的尽职调查；贡献者数量健康稳定&lt;/li&gt;
&lt;li&gt;Sandbox 中的项目没有时效性质，可能永远都无法进入 incubating 状态，被 CNCF 谨慎宣传&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;开源项目加入-cncf-的最低要求sandbox&#34;&gt;开源项目加入 CNCF 的最低要求（Sandbox）&lt;/h3&gt;
&lt;p&gt;一个开源项目要想加入 CNCF 必须满足以下要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目名称必须在 CNCF 中唯一&lt;/li&gt;
&lt;li&gt;项目描述（用途、价值、起源、历史）&lt;/li&gt;
&lt;li&gt;与 CNCF 章程一致的声明&lt;/li&gt;
&lt;li&gt;来自 TOC 的 sponsor（项目辅导）&lt;/li&gt;
&lt;li&gt;license（默认为 Apache 2）&lt;/li&gt;
&lt;li&gt;源码控制（Github）&lt;/li&gt;
&lt;li&gt;网站（英文）&lt;/li&gt;
&lt;li&gt;外部依赖（包括 license）&lt;/li&gt;
&lt;li&gt;成熟度模型评估（参考 &lt;a href=&#34;https://jimmysong.io/kubernetes-handbook/cloud-native/cncf-sandbox-criteria.html&#34; title=&#34;开源项目加入 CNCF Sandbox 的要求&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源项目加入 CNCF Sandbox 的要求&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;创始 committer（贡献项目的时长）&lt;/li&gt;
&lt;li&gt;基础设施需求（CI/CNCF 集群）&lt;/li&gt;
&lt;li&gt;沟通渠道（slack、irc、邮件列表）&lt;/li&gt;
&lt;li&gt;issue 追踪（GitHub）&lt;/li&gt;
&lt;li&gt;发布方法和机制&lt;/li&gt;
&lt;li&gt;社交媒体账号&lt;/li&gt;
&lt;li&gt;社区规模和已有的赞助商&lt;/li&gt;
&lt;li&gt;svg 格式的项目 logo&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;由-sandbox-升级到-incubating-的要求&#34;&gt;由 Sandbox 升级到 Incubating 的要求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;通过 TOC 的&lt;a href=&#34;https://github.com/cncf/toc/blob/master/process/due-diligence-guidelines.md&#34; title=&#34;尽职调查&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;尽职调查&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;至少有 3 个独立的终端用户在在生产上使用该项目：一般在项目的官网列举实际用户&lt;/li&gt;
&lt;li&gt;足够健康数量的贡献者：项目的 GitHub 上有明确的 committer 权限划分、职责说明及成员列表，TOC 将根据项目大小来确认多少 committer 才算健康&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;展示项目在持续进行、良好的发布节奏、贡献频率十分重要&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;由-incubating-升级到-graduated-的要求&#34;&gt;由 Incubating 升级到 Graduated 的要求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;满足 Sandbox 和 Incubating 的所有要求&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;至少有来自两个组织的贡献者&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;明确定义的项目治理及 committer 身份、权限管理&lt;/li&gt;
&lt;li&gt;接受 CNCF 的&lt;a href=&#34;https://github.com/cncf/foundation/blob/master/code-of-conduct.md&#34; title=&#34;行为准则&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;行为准则&lt;/a&gt;，参考&lt;a href=&#34;https://bestpractices.coreinfrastructure.org/en/projects/486&#34; title=&#34;Prometheus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Prometheus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;获得 CII 最佳实践徽章&lt;/li&gt;
&lt;li&gt;在项目主库或项目官网有公开的采用者的 logo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考归档的 Review：&lt;a href=&#34;https://github.com/cncf/toc/tree/master/reviews&#34; title=&#34;https://github.com/cncf/toc/tree/master/reviews&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/cncf/toc/tree/master/reviews&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/a305fa93580b&#34; title=&#34;鸿沟理论 - jianshu.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;鸿沟理论 - jianshu.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cncf/toc/blob/master/process/graduation_criteria.adoc&#34; title=&#34;CNCF Graduation Criteria v1.2 - github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CNCF Graduation Criteria v1.2 - github.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.infoq.cn/article/l0bCXU3SojYXpz-AhP3v&#34; title=&#34;为什么中国没有 Apache 基金会这样的组织？ - infoq.cn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;为什么中国没有 Apache 基金会这样的组织？ - infoq.cn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kaiyuanshe.cn/&#34; title=&#34;开源社首页 - kaiyuanshe.cn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源社首页 - kaiyuanshe.cn&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
                           
    <item>
      <title>蚂蚁集团开源 SOFAMesh</title>
      <link>https://jimmysong.io/blog/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/</link>
      <pubDate>Mon, 16 Jul 2018 17:48:18 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/blog/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/</guid>
      <description>
        
        
        


&lt;div class=&#34;alert alert-warning-container&#34;&gt;
  
  &lt;div class=&#34;alert-warning-title px-2 py-2&#34;&gt;
    注意
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-warning px-2&#34;&gt;
    SOFAMesh 已闭源，本文已过时。
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;4 月，蚂蚁集团自主研发的分布式中间件（Scalable Open Financial Architecture，以下简称 SOFA）启动开源计划，并开放多个组件，（相关背景请点击链接阅读《&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzI0Nzc3MTQyMw==&amp;amp;mid=2247484729&amp;amp;idx=1&amp;amp;sn=0d8dbee2739fb0eef3e4ad699661fd13&amp;amp;chksm=e9abbd49dedc345fd5d6898fd1989710f249d6386bf3d52ae1603365a4a1c3696538bc8b9a8f&amp;amp;scene=21#wechat_redirect&#34; title=&#34;开源 | 蚂蚁集团启动分布式中间件开源计划，用于快速构建金融级云原生架构&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源 | 蚂蚁集团启动分布式中间件开源计划，用于快速构建金融级云原生架构&lt;/a&gt; 》、《&lt;a href=&#34;http://mp.weixin.qq.com/s?__biz=MzI0Nzc3MTQyMw==&amp;amp;mid=2247485026&amp;amp;idx=1&amp;amp;sn=0a367bc67d5fe3a268e3715b17e020ab&amp;amp;chksm=e9abbe12dedc370489102d9307b832457891fdb0530eec5c35c0fb82bc2a3e6dbbc7db8436c4&amp;amp;scene=21#wechat_redirect&#34; title=&#34;开源 | 蚂蚁集团分布式中间件开源第二弹：丰富微服务架构体系&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开源 | 蚂蚁集团分布式中间件开源第二弹：丰富微服务架构体系&lt;/a&gt; 》），这一系列的动作受到大家的关注和支持，SOFA 社区也日益壮大。&lt;/p&gt;
&lt;p&gt;在两轮开源之后，蚂蚁集团自主研发的分布式中间件（Scalable Open Financial Architecture，以下简称 SOFA）在今天推出了&lt;strong&gt;第三轮的开源产品：SOFAMesh&lt;/strong&gt;。和前两轮开源的历经多年沉淀和打磨的成熟产品不同，本轮的开源主角 SOFAMesh，将探索一条和以往产品有所不同的开源道路。下面我们就来看看到底有哪些不同吧！&lt;/p&gt;
&lt;h2 id=&#34;sofamesh-的开源探索之路&#34;&gt;SOFAMesh 的开源探索之路&lt;/h2&gt;
&lt;p&gt;SOFAMesh 尝试在以下几个方面进行自我突破和勇敢探索：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;全新的技术领域&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Service Mesh 是目前技术社区最为炙手可热的新技术方向，有下一代微服务的明显趋势。但是目前 Service Mesh 技术还处于发展早期，暂时还没有成熟的产品，尤其缺乏大规模的落地实践。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;较早的开源时间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在上述背景下，我们选择了将启动不久的 Service Mesh 产品开源在开发早期，也就是还未成熟之时，就对社区开放，开放源码并寻求社区合作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更加开放的态度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 SOFAMesh 上，我们愿意以开源共建的方式来和社区一起推进 Service Mesh 技术的更好发展和实现落地实践，共同打造一个技术先进，功能丰富，具备良好的性能和稳定性，可以实实在在的生产落地的优秀产品。欢迎国内技术社区的朋友们和我们开展不同层面的交流与合作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;务实的产品路线&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SOFAMesh 在产品路线上，选择了跟随社区主流，我们选择了目前 Service Mesh 中最有影响力和前景的 Istio。SOFAMesh 会在 Istio 的基础上，提升性能，增加扩展性，并在落地实践上做探索和补充，以弥补目前 Istio 的不足，同时保持与 Istio 社区的步骤一致和持续跟进。&lt;/p&gt;
&lt;h2 id=&#34;sofamesh-介绍&#34;&gt;SOFAMesh 介绍&lt;/h2&gt;
&lt;p&gt;SOFAMesh 将在兼容 Istio 整体架构和协议的基础上，做出部分调整：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 Golang 语言开发全新的 Sidecar，替代 Envoy&lt;/li&gt;
&lt;li&gt;为了避免 Mixer 带来的性能瓶颈，合并 Mixer 部分功能进入 Sidecar&lt;/li&gt;
&lt;li&gt;Pilot 和 Citadel 模块进行了大幅的扩展和增强&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们的目标：打造一个更加务实的 Istio 落地版本！&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    备注
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    以上架构调整的细节以及我们做调整的出发点和原因，请浏览 &lt;a href=&#34;https://cloudnative.to/blog/the-way-to-service-mesh-in-ant-financial/&#34; title=&#34;蚂蚁集团大规模微服务架构下的 Service Mesh 探索之路&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蚂蚁集团大规模微服务架构下的 Service Mesh 探索之路&lt;/a&gt; 一文，有非常详尽的解释。
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;开源内容&#34;&gt;开源内容&lt;/h2&gt;
&lt;p&gt;在本轮开源中，我们将推出 SOFAMesh 目前正在开发的两大模块：MOSN 和 SOFAPilot。&lt;/p&gt;
&lt;h2 id=&#34;mosn&#34;&gt;MOSN&lt;/h2&gt;
&lt;p&gt;SOFAMesh 中 Golang 版本的 Sidecar，是一个名为 MOSN (Modular Observable Smart Netstub) 的全新开发的模块，实现 Envoy 的功能，兼容 Envoy 的 API，可以和 Istio 集成。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/mosn-with-service-mesh_hue3a5cebc44033b7eaf8222aef73f7a8c_61555_1164x996_resize_q75_h2_lanczos_3.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/mosn-with-service-mesh.png&#34; data-img=&#34;/blog/sofamesh-and-mosn-proxy-sidecar-service-mesh-by-ant-financial/mosn-with-service-mesh.png&#34; data-width=&#34;1164&#34; data-height=&#34;996&#34; alt=&#34;image&#34; data-caption=&#34;MOSN 架构图&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;MOSN 架构图&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;此外，我们会增加对 SOFARPC、Dubbo 等通讯协议的支持，以便更好的迎合国内用户包括我们自身的实际需求。&lt;/p&gt;
&lt;p&gt;由于 Sidecar 相对独立，而且我们也预期会有单独使用 MOSN 的场景，因此 MOSN 的代码仓库是独立于 SOFAMesh 的，地址为：https://github.com/mosn/mosn&lt;/p&gt;
&lt;p&gt;欢迎大家使用，提供需求、反馈问题、贡献代码或者合作开发。&lt;/p&gt;
&lt;h2 id=&#34;sofapilot&#34;&gt;SOFAPilot&lt;/h2&gt;
&lt;p&gt;我们将大幅扩展和增强 Istio 中的 Pilot 模块：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增加 SOFARegistry 的 Adapter，提供超大规模服务注册和发现的解决方案&lt;/li&gt;
&lt;li&gt;增加数据同步模块，以实现多个服务注册中心之间的数据交换。&lt;/li&gt;
&lt;li&gt;增加 Open Service Registry API，提供标准化的服务注册功能&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;MOSN 和 SOFAPilot 配合，将可以提供让传统侵入式框架（如 Spring Cloud，Dubbo，SOFA RPC 等）和 Service Mesh 产品可以相互通讯的功能，以便可以平滑的向 Service Mesh 产品演进和过渡。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pilot 和后面会陆续开放的 Mixer，Citadel 等 Istio 模块&lt;/strong&gt;，会统一存放在同一个从 Istio Fork 出来的代码仓库中。未来会持续更新 Istio 最新代码，以保持和 Istio 的一致。&lt;/p&gt;
&lt;h2 id=&#34;附录&#34;&gt;附录&lt;/h2&gt;
&lt;p&gt;本文中提到的链接地址集合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mosn/mosn&#34; title=&#34;MOSN&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MOSN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudnative.to/blog/the-way-to-service-mesh-in-ant-financial/&#34; title=&#34;蚂蚁集团大规模微服务架构下的 Service Mesh 探索之路&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;蚂蚁集团大规模微服务架构下的 Service Mesh 探索之路&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
                           
    <item>
      <title>两款开源图片处理工具对比</title>
      <link>https://jimmysong.io/blog/picture-process/</link>
      <pubDate>Sun, 02 Apr 2017 20:27:00 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/blog/picture-process/</guid>
      <description>
        
        
        &lt;p&gt;如果你看过美剧「硅谷」会记得剧中主角们所在的创业公司 PiedPipper，他们就是靠自己发明的视频压缩算法来跟大公司 Hooli 竞争的，这部剧现在已经发展到第 4 季，在&lt;a href=&#34;http://v.qq.com/detail/d/dr2zn76oez8tyt4.html?ptag=baidu.aladdin.tv&#34; title=&#34;腾讯视频&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;腾讯视频&lt;/a&gt;上可以免费观看。&lt;/p&gt;
&lt;p&gt;最近关注了两个&lt;strong&gt;图像处理&lt;/strong&gt;的 Open Source Projects。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/guetzli&#34; title=&#34;Google Guetzli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Guetzli&lt;/a&gt; 图像压缩工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer&#34; title=&#34;Luan Fujun&amp;amp;rsquo;s Deep Photo Style Transfer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Luan Fujun&amp;rsquo;s Deep Photo Style Transfer&lt;/a&gt; 图像 style 转换工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外对于图像处理还处于 Photoshop、Lightroom 这种摄影后期和图像处理命令行工具&lt;a href=&#34;https://www.imagemagick.org/script/index.php&#34; title=&#34;ImageMagick&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ImageMagick&lt;/a&gt;的我来说，图像压缩，智能图像风格转换实乃上乘武功，不是我等凡夫俗子驾驭的了，但是乘兴而来，总不能败兴而归吧，下面我们来一探究竟。&lt;/p&gt;
&lt;h2 id=&#34;google-guetzli&#34;&gt;Google Guetzli&lt;/h2&gt;
&lt;p&gt;聊聊架构微信公众号上有一篇介绍&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659599074&amp;amp;idx=1&amp;amp;sn=a26ae2a8becdc1f2cfbddf44d8ca1495&amp;amp;chksm=8be997f0bc9e1ee6e33f3e33c73d11884ad66085c0aedc9dd5e482063482887d0733d8e7d187#rd&#34; title=&#34;Google 开源新算法，可将 JPEG 文件缩小 35%&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google 开源新算法，可将 JPEG 文件缩小 35%&lt;/a&gt;文章。&lt;/p&gt;
&lt;p&gt;我在 Mac 上试用了一下，安装很简单，只要一条命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install guetzli
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是当我拿一张&lt;code&gt;22M&lt;/code&gt;大小的照片使用 guetzli 压缩的时候，我是绝望的，先后三次 kill 掉了进程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;因为实在是太慢了&lt;/strong&gt;，也能是我软件对内存和 CPU 的利用率不高，效果你们自己看看。&lt;/p&gt;
&lt;p&gt;原图是这个样子的，拍摄地点在景山上的，俯瞰紫禁城的绝佳位置。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5430_hu0af2242c60cae5ba8295f3fe101c7811_1571880_2802x1978_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5430.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5430.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;原图&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;原图&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;guetzli --quality &lt;span class=&#34;m&#34;&gt;84&lt;/span&gt; --verbose 20160403052.jpg output.jpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为什么 quality 要设置成 84 呢？因为只能设置为 84+ 的 quality，如果要设置的更低的话需要自己修改代码。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5429_hub9c0e50fdb57d51b987a72e16255d0e2_266992_3254x2034_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5429.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5429.JPG&#34; data-width=&#34;3254&#34; data-height=&#34;2034&#34; alt=&#34;image&#34; data-caption=&#34;process&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;process&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;耗时了一个小时，后台进程信息。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5428_hub9c0e50fdb57d51b987a72e16255d0e2_552730_3254x2034_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5428.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5428.JPG&#34; data-width=&#34;3254&#34; data-height=&#34;2034&#34; alt=&#34;image&#34; data-caption=&#34;后台进程&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;后台进程&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;这个是使用&lt;strong&gt;Squash&lt;/strong&gt;压缩后的大小效果，压缩每张照片差不多只要 3 秒钟。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Squash 的 logo 就是个正在被剥皮的🍊，这是&lt;a href=&#34;http://xclient.info/s/squash.html&#34; title=&#34;下载地址&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;下载地址&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;压缩比分别为&lt;code&gt;70%&lt;/code&gt;和&lt;code&gt;30%&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;IMG_5434.JPG)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;压缩比 70% 后的细节放大图&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5432_hud2d0824400b5bb4b04770b2feb23e013_1136351_2802x1978_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5432.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5432.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;70&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;70&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;压缩比 30% 的细节放大图&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5433_hu5948eda6aca9feb7819f238d384bce68_1131492_2802x1978_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5433.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5433.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;30&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;30&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;你看出什么区别了吗？反正我是没有。&lt;/p&gt;
&lt;p&gt;下面再来看看耗时一个小时，千呼万唤始出来的 guetzli 压缩后的效果和使用 squash 压缩比为 30% 的效果对比。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/FullSizeRender_hu3ce4a3020f0d5c59c1e2663b6ce956d9_1518726_3269x2100_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/FullSizeRender.jpg&#34; data-img=&#34;/blog/picture-process/FullSizeRender.jpg&#34; data-width=&#34;3269&#34; data-height=&#34;2100&#34; alt=&#34;image&#34; data-caption=&#34;对比&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;对比&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;左面是使用 guetzli 压缩后（4.1M），右面使用的 squash 压缩后（3.1M）的照片。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;似乎还是没有什么区别啊？你看出来了吗？&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;guetzli-总结&#34;&gt;Guetzli 总结&lt;/h3&gt;
&lt;p&gt;可能是我使用 Guetzli 的方式不对，但是命令行里确实没有设置 CPU 和内存资源的选项啊，为啥压缩照片会这么慢呢？效果也并不出彩，不改代码的话照片质量只能设置成 84 以上，但是这个是&lt;strong&gt;Open Source&lt;/strong&gt;的，使用的 C++ 开发，可以研究下它的图像压缩算法。&lt;/p&gt;
&lt;h1 id=&#34;deep-photo-style-transfer&#34;&gt;Deep Photo Style Transfer&lt;/h1&gt;
&lt;p&gt;来自康奈尔大学的 Luan Fujun 开源的图像 sytle 转换工具，看了&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer&#34; title=&#34;README&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;README&lt;/a&gt;的介绍，上面有很多图像风格转换的例子，真的很惊艳，市面上好像还没有这种能够在给定任意一张照片的情况下，自动将另一张照片转换成该照片的 style。&lt;/p&gt;
&lt;p&gt;这个工具使用 Matlab 和 Lua 开发，基于&lt;a href=&#34;https://github.com/torch/torch7&#34; title=&#34;Torch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Torch&lt;/a&gt;运行的时候需要&lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34; title=&#34;CUDA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CUDA&lt;/a&gt;，&lt;a href=&#34;https://developer.nvidia.com/cudnn&#34; title=&#34;cudnn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cudnn&lt;/a&gt;，&lt;a href=&#34;https://www.mathworks.com/&#34; title=&#34;Matlab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matlab&lt;/a&gt;，环境实在太复杂，就没折腾，启动有人发布&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer/issues/29&#34; title=&#34;Docker 镜像&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker 镜像&lt;/a&gt;，已经有人提了 issue。&lt;/p&gt;
&lt;p&gt;如果它能够被商用，绝对是继&lt;strong&gt;Prisma&lt;/strong&gt;后又一人工智能照片处理应用利器。&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;是不是有了照片风格转换这个东西就不需要做照片后期了？只要选几张自己喜欢的风格照片，再鼠标点几下就可以完成照片处理了？摄影师要失业了？非也！照片风格东西本来就是很主观性的，每个人都有自己喜欢的风格，照相机发明后就有人说画家要失业了，其实不然，画画依然是创造性地劳动，只能说很多写实风格的画家要失业了。Deep Photo Style Transfer 也许会成为 Lightroom 或者手机上一款 app 的功能，是一个不错的工具。也许还会成为像 Prisma 一样的现象级产品，who knows?🤷‍♂️&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
