<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – 图片处理</title>
    <link>https://jimmysong.io/tags/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/</link>
    <description>Recent content in 图片处理 on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 02 Apr 2017 20:27:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>两款开源图片处理工具对比</title>
      <link>https://jimmysong.io/blog/picture-process/</link>
      <pubDate>Sun, 02 Apr 2017 20:27:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/picture-process/</guid>
      <description>
        
        
        &lt;p&gt;如果你看过美剧「硅谷」会记得剧中主角们所在的创业公司 PiedPipper，他们就是靠自己发明的视频压缩算法来跟大公司 Hooli 竞争的，这部剧现在已经发展到第 4 季，在&lt;a href=&#34;http://v.qq.com/detail/d/dr2zn76oez8tyt4.html?ptag=baidu.aladdin.tv&#34; title=&#34;腾讯视频&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;腾讯视频&lt;/a&gt;
上可以免费观看。&lt;/p&gt;
&lt;p&gt;最近关注了两个&lt;strong&gt;图像处理&lt;/strong&gt;的 Open Source Projects。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/google/guetzli&#34; title=&#34;Google Guetzli&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Guetzli&lt;/a&gt;
 图像压缩工具&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer&#34; title=&#34;Luan Fujun&amp;amp;rsquo;s Deep Photo Style Transfer&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Luan Fujun&amp;rsquo;s Deep Photo Style Transfer&lt;/a&gt;
 图像 style 转换工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外对于图像处理还处于 Photoshop、Lightroom 这种摄影后期和图像处理命令行工具&lt;a href=&#34;https://www.imagemagick.org/script/index.php&#34; title=&#34;ImageMagick&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ImageMagick&lt;/a&gt;
的我来说，图像压缩，智能图像风格转换实乃上乘武功，不是我等凡夫俗子驾驭的了，但是乘兴而来，总不能败兴而归吧，下面我们来一探究竟。&lt;/p&gt;
&lt;h2 id=&#34;google-guetzli&#34;&gt;Google Guetzli&lt;/h2&gt;
&lt;p&gt;聊聊架构微信公众号上有一篇介绍&lt;a href=&#34;https://mp.weixin.qq.com/s?__biz=MzA5Nzc4OTA1Mw==&amp;amp;mid=2659599074&amp;amp;idx=1&amp;amp;sn=a26ae2a8becdc1f2cfbddf44d8ca1495&amp;amp;chksm=8be997f0bc9e1ee6e33f3e33c73d11884ad66085c0aedc9dd5e482063482887d0733d8e7d187#rd&#34; title=&#34;Google 开源新算法，可将 JPEG 文件缩小 35%&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google 开源新算法，可将 JPEG 文件缩小 35%&lt;/a&gt;
文章。&lt;/p&gt;
&lt;p&gt;我在 Mac 上试用了一下，安装很简单，只要一条命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install guetzli
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但是当我拿一张&lt;code&gt;22M&lt;/code&gt;大小的照片使用 guetzli 压缩的时候，我是绝望的，先后三次 kill 掉了进程。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;因为实在是太慢了&lt;/strong&gt;，也能是我软件对内存和 CPU 的利用率不高，效果你们自己看看。&lt;/p&gt;
&lt;p&gt;原图是这个样子的，拍摄地点在景山上的，俯瞰紫禁城的绝佳位置。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5430_hu0af2242c60cae5ba8295f3fe101c7811_1571880_2802x1978_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5430.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5430.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;原图&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  &lt;figcaption&gt;原图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;guetzli --quality &lt;span class=&#34;m&#34;&gt;84&lt;/span&gt; --verbose 20160403052.jpg output.jpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;为什么 quality 要设置成 84 呢？因为只能设置为 84+ 的 quality，如果要设置的更低的话需要自己修改代码。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5429_hub9c0e50fdb57d51b987a72e16255d0e2_266992_3254x2034_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5429.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5429.JPG&#34; data-width=&#34;3254&#34; data-height=&#34;2034&#34; alt=&#34;image&#34; data-caption=&#34;process&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  &lt;figcaption&gt;process&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;耗时了一个小时，后台进程信息。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5428_hub9c0e50fdb57d51b987a72e16255d0e2_552730_3254x2034_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5428.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5428.JPG&#34; data-width=&#34;3254&#34; data-height=&#34;2034&#34; alt=&#34;image&#34; data-caption=&#34;后台进程&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  &lt;figcaption&gt;后台进程&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;这个是使用&lt;strong&gt;Squash&lt;/strong&gt;压缩后的大小效果，压缩每张照片差不多只要 3 秒钟。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Squash 的 logo 就是个正在被剥皮的🍊，这是&lt;a href=&#34;http://xclient.info/s/squash.html&#34; title=&#34;下载地址&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;下载地址&lt;/a&gt;
。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;压缩比分别为&lt;code&gt;70%&lt;/code&gt;和&lt;code&gt;30%&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5434_huded9f31d8000cfc41c718c347d082ad8_110550_1652x314_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5434.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5434.JPG&#34; data-width=&#34;1652&#34; data-height=&#34;314&#34; alt=&#34;image&#34; data-caption=&#34;Img&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  &lt;figcaption&gt;Img&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;压缩比 70% 后的细节放大图&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5432_hud2d0824400b5bb4b04770b2feb23e013_1136351_2802x1978_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5432.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5432.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;70&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  &lt;figcaption&gt;70&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;压缩比 30% 的细节放大图&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/IMG_5433_hu5948eda6aca9feb7819f238d384bce68_1131492_2802x1978_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/IMG_5433.JPG&#34; data-img=&#34;/blog/picture-process/IMG_5433.JPG&#34; data-width=&#34;2802&#34; data-height=&#34;1978&#34; alt=&#34;image&#34; data-caption=&#34;30&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  &lt;figcaption&gt;30&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;你看出什么区别了吗？反正我是没有。&lt;/p&gt;
&lt;p&gt;下面再来看看耗时一个小时，千呼万唤始出来的 guetzli 压缩后的效果和使用 squash 压缩比为 30% 的效果对比。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/picture-process/FullSizeRender_hu3ce4a3020f0d5c59c1e2663b6ce956d9_1518726_3269x2100_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/picture-process/FullSizeRender.jpg&#34; data-img=&#34;/blog/picture-process/FullSizeRender.jpg&#34; data-width=&#34;3269&#34; data-height=&#34;2100&#34; alt=&#34;image&#34; data-caption=&#34;对比&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  &lt;figcaption&gt;对比&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;左面是使用 guetzli 压缩后（4.1M），右面使用的 squash 压缩后（3.1M）的照片。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;似乎还是没有什么区别啊？你看出来了吗？&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;guetzli-总结&#34;&gt;Guetzli 总结&lt;/h3&gt;
&lt;p&gt;可能是我使用 Guetzli 的方式不对，但是命令行里确实没有设置 CPU 和内存资源的选项啊，为啥压缩照片会这么慢呢？效果也并不出彩，不改代码的话照片质量只能设置成 84 以上，但是这个是&lt;strong&gt;Open Source&lt;/strong&gt;的，使用的 C++ 开发，可以研究下它的图像压缩算法。&lt;/p&gt;
&lt;h1 id=&#34;deep-photo-style-transfer&#34;&gt;Deep Photo Style Transfer&lt;/h1&gt;
&lt;p&gt;来自康奈尔大学的 Luan Fujun 开源的图像 sytle 转换工具，看了&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer&#34; title=&#34;README&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;README&lt;/a&gt;
的介绍，上面有很多图像风格转换的例子，真的很惊艳，市面上好像还没有这种能够在给定任意一张照片的情况下，自动将另一张照片转换成该照片的 style。&lt;/p&gt;
&lt;p&gt;这个工具使用 Matlab 和 Lua 开发，基于&lt;a href=&#34;https://github.com/torch/torch7&#34; title=&#34;Torch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Torch&lt;/a&gt;
运行的时候需要&lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34; title=&#34;CUDA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CUDA&lt;/a&gt;
，&lt;a href=&#34;https://developer.nvidia.com/cudnn&#34; title=&#34;cudnn&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cudnn&lt;/a&gt;
，&lt;a href=&#34;https://www.mathworks.com/&#34; title=&#34;Matlab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Matlab&lt;/a&gt;
，环境实在太复杂，就没折腾，启动有人发布&lt;a href=&#34;https://github.com/luanfujun/deep-photo-styletransfer/issues/29&#34; title=&#34;Docker 镜像&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker 镜像&lt;/a&gt;
，已经有人提了 issue。&lt;/p&gt;
&lt;p&gt;如果它能够被商用，绝对是继&lt;strong&gt;Prisma&lt;/strong&gt;后又一人工智能照片处理应用利器。&lt;/p&gt;
&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;
&lt;p&gt;是不是有了照片风格转换这个东西就不需要做照片后期了？只要选几张自己喜欢的风格照片，再鼠标点几下就可以完成照片处理了？摄影师要失业了？非也！照片风格东西本来就是很主观性的，每个人都有自己喜欢的风格，照相机发明后就有人说画家要失业了，其实不然，画画依然是创造性地劳动，只能说很多写实风格的画家要失业了。Deep Photo Style Transfer 也许会成为 Lightroom 或者手机上一款 app 的功能，是一个不错的工具。也许还会成为像 Prisma 一样的现象级产品，who knows?🤷‍♂️&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
