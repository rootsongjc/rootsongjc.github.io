<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – Arm</title>
    <link>https://jimmysong.io/tags/arm/</link>
    <description>Recent content in Arm on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 31 Aug 2022 21:47:49 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/arm/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Istio 1.15 新增对 arm64 架构处理器的支持</title>
      <link>https://jimmysong.io/blog/istio-arm64-support/</link>
      <pubDate>Wed, 31 Aug 2022 21:47:49 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/istio-arm64-support/</guid>
      <description>
        
        
        &lt;p&gt;Istio 是基于容器的云原生技术栈的三大核心技术之一，另外两个是 Kubernetes 和 Knative。其中 Kubernetes 和 Knative 早已支持了 arm64 架构，甚至连 Istio 的数据平面 Envoy 早在 &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/v1.16.0/install/building#arm-binaries&#34; title=&#34;1.16 版本&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;1.16 版本&lt;/a&gt;就已支持 arm64 架构（2020 年 10 月）。随着 &lt;a href=&#34;https://istio.io/latest/news/releases/1.15.x/announcing-1.15/&#34; title=&#34;Istio 1.15 的发布&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 1.15 的发布&lt;/a&gt;，你可以开箱即用得在 arm64 架构上部署 Istio，不需要自己来编译 arm 架构的镜像。&lt;/p&gt;
&lt;h2 id=&#34;在-istio-115-之前如何在-arm-架构上安装-istio&#34;&gt;在 Istio 1.15 之前如何在 arm 架构上安装 Istio？&lt;/h2&gt;
&lt;p&gt;Istio 默认使用 Docker Hub 作为生产镜像仓库，Google Container Registry 作为生产和测试仓库。对于 1.14 及以前的版本，Istio 官方的镜像仓库中只有 amd64 架构的镜像，如果你的 Kubernetes 集群是运行在 arm 架构下，在安装 Istio 时会出现出现如下错误：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;exec user process caused: exec format error
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这时你需要为 Istio 安装重新指定一个包含 arm64 架构镜像的仓库，在安装 Istio 时执行下面的命令指定该镜像仓库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ istioctl install --set &lt;span class=&#34;nv&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;demo --set &lt;span class=&#34;nv&#34;&gt;hub&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;docker.io/mydockerhub -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时要想在 arm64 架构上使用 Istio，你可以使用 Istio 社区中有人为 Istio 单独构建了 arm64 架构的&lt;a href=&#34;https://github.com/resf/istio&#34; title=&#34;镜像&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;镜像&lt;/a&gt;，或者自己构建镜像。&lt;/p&gt;
&lt;h2 id=&#34;istio-为了支持-arm-做了哪些工作&#34;&gt;Istio 为了支持 arm 做了哪些工作？&lt;/h2&gt;
&lt;p&gt;为了让 Istio 支持 arm，需要将以下二进制文件或者镜像基于 arm 架构编译：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;istioctl&lt;/code&gt;：这是最简单的部分，只需要使用 Go 语言的交叉编译即可，Istio 的早期版本就已经支持；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pilot&lt;/code&gt;：控制平面 Istiod 中运行的镜像；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;proxyv2&lt;/code&gt;：在 Ingress Gateway、Egress Gateway 和 Sidecar 中使用的镜像，通过 Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#mutatingadmissionwebhook&#34; title=&#34;mutating webhook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mutating webhook&lt;/a&gt; 自动注入；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Istio 数据平面中的 Envoy 是从 Envoy 官方仓库中 fork 出来的，但是 Envoy 早就支持了 arm64，为什么 Istio 官方还不支持呢？这是因为一方面 Istio 的官方 CI 环境 &lt;a href=&#34;https://prow.istio.io/&#34; title=&#34;prow.istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;prow.istio.io&lt;/a&gt; 运行在 GKE 上的，而 GKE 上并没有 arm64 架构的环境，所以无法执行测试。直到 2022 年 7 月 GKE 才正式提供 arm64 架构的虚拟机，那时才可以方便的编译和测试 arm64 架构的 Istio，详见 &lt;a href=&#34;https://cloud.google.com/blog/products/containers-kubernetes/gke-supports-new-arm-based-tau-t2a-vms&#34; title=&#34;Run your Arm workloads on Google Kubernetes Engine with Tau T2A VMs&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Run your Arm workloads on Google Kubernetes Engine with Tau T2A VMs&lt;/a&gt;。&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    注意
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    Istio 官方仅提供了 amd64 和 arm64 架构的镜像，不支持 arm32。
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;至于 arm 架构的镜像构建，可以使用 Docker BuildKit 来实现多平台构建，你可以使用下面的命令编译指定 arm 平台架构的镜像：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker buildx build --platform linux/arm64
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;关于 &lt;code&gt;docker buildx&lt;/code&gt; 的详细信息请参考 &lt;a href=&#34;https://docs.docker.com/build/buildx/multiplatform-images/&#34; title=&#34;Docker 文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docker 文档&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;你可以像往常一样来安装 Istio，Kubernetes Node 会根据节点的架构自动拉起对应平台架构的镜像。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
