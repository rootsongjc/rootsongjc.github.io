<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song&#39;s blog – 存储</title>
    <link>https://jimmysong.io/tags/%E5%AD%98%E5%82%A8/</link>
    <description>Recent content in 存储 on Jimmy Song&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Tue, 11 Jul 2017 20:33:21 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/%E5%AD%98%E5%82%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Kubernetes 中的数据持久化问题</title>
      <link>https://jimmysong.io/blog/data-persistence-problem/</link>
      <pubDate>Tue, 11 Jul 2017 20:33:21 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/data-persistence-problem/</guid>
      <description>
        
        
        &lt;h2 id=&#34;数据落盘问题的由来&#34;&gt;数据落盘问题的由来&lt;/h2&gt;
&lt;p&gt;这本质上是数据持久化问题，对于有些应用依赖持久化数据，比如应用自身产生的日志需要持久化存储的情况，需要保证容器里的数据不丢失，在 Pod 挂掉后，其他应用依然可以访问到这些数据，因此我们需要将数据持久化存储起来。&lt;/p&gt;
&lt;h2 id=&#34;数据落盘问题解决方案&#34;&gt;数据落盘问题解决方案&lt;/h2&gt;
&lt;p&gt;下面以一个应用的日志收集为例，该日志需要持久化收集到 ElasticSearch 集群中，如果不考虑数据丢失的情形，可以直接使用&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook&#34; title=&#34;kubernetes-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubernetes-handbook&lt;/a&gt;
中【应用日志收集】一节中的方法，但考虑到 Pod 挂掉时 logstash（或 filebeat）并没有收集完该 pod 内日志的情形，我们想到了如下这种解决方案，示意图如下：&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/blog/data-persistence-problem/log-persistence-logstash.png&#34; data-img=&#34;/blog/data-persistence-problem/log-persistence-logstash.png&#34; data-width=&#34;789&#34; data-height=&#34;418&#34; alt=&#34;image&#34; data-caption=&#34;日志持久化收集解决方案示意图&#34;&gt;
    
  
  &lt;figcaption&gt;日志持久化收集解决方案示意图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先需要给数据落盘的应用划分 node，即这些应用只调用到若干台主机上&lt;/li&gt;
&lt;li&gt;给这若干台主机增加 label&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;deamonset&lt;/code&gt;方式在这若干台主机上启动 logstash 的 Pod（使用 nodeSelector 来限定在这几台主机上，我们在边缘节点启动的&lt;code&gt;treafik&lt;/code&gt;也是这种模式）&lt;/li&gt;
&lt;li&gt;将应用的数据通过 volume 挂载到宿主机上&lt;/li&gt;
&lt;li&gt;Logstash（或者 filebeat）收集宿主机上的数据，数据持久化不会丢失&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;side-effect&#34;&gt;Side-effect&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;首先 kubernetes 本身就提供了数据持久化的解决方案 statefulset，不过需要用到公有云的存储货其他分布式存储，这一点在我们的私有云环境里被否定了。&lt;/li&gt;
&lt;li&gt;需要管理主机的 label，增加运维复杂度，但是具体问题具体对待&lt;/li&gt;
&lt;li&gt;必须保证应用启动顺序，需要先启动 logstash&lt;/li&gt;
&lt;li&gt;为主机打 label 使用 nodeSelector 的方式限制了资源调度的范围&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;本文已归档到&lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook/&#34; title=&#34;kubernetes-handbook&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;kubernetes-handbook&lt;/a&gt;
中的【最佳实践—运维管理】章节中，一切内容以 kubernetes-handbook 为准。&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
