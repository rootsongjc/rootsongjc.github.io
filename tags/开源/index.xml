<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – 开源</title>
    <link>https://jimmysong.io/tags/%E5%BC%80%E6%BA%90/</link>
    <description>Recent content in 开源 on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 02 Sep 2022 10:47:49 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/tags/%E5%BC%80%E6%BA%90/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>自 2020 年以来全球的开源商业化软件融资情况</title>
      <link>https://jimmysong.io/blog/coss-vc-funding-since-2020/</link>
      <pubDate>Fri, 02 Sep 2022 10:47:49 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/coss-vc-funding-since-2020/</guid>
      <description>
        
        
        &lt;p&gt;昨天 COSS（Commercial Open Source）公司的创始人也是投资者 Joseph（JJ）Jacks 给我发消息，让我看下他们新发布的这个报告。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/coss-vc-funding-since-2020/jj_hu16016b35561e061ce227a6b52b3697b2_166908_856x1164_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/coss-vc-funding-since-2020/jj.jpg&#34; data-img=&#34;/blog/coss-vc-funding-since-2020/jj.jpg&#34; data-width=&#34;856&#34; data-height=&#34;1164&#34; alt=&#34;image&#34; data-caption=&#34;JJ 给我发的报告&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;JJ 给我发的报告&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;我早就知道 JJ 创业搞了一个 COSS 投资公司并创立了一个基金，这次他整理的这个全球 COSS 公司融资数据还是比较全面的。&lt;/p&gt;



&lt;div class=&#34;alert&#34;&gt;
  
  &lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
    什么是 COSS 公司？
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
    &lt;p&gt;COSS 是英文 Commercial Open Source Software（商业化开源软件）的简称，COSS 公司指的依靠这些 COSS 而生存的公司，即如果没有这些软件，这家公司就不会存在，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果没有 Kafka 就没有 Confluent；&lt;/li&gt;
&lt;li&gt;如果没有 Hadoop 就没有 Cloudera；&lt;/li&gt;
&lt;li&gt;如果没有 Spark，就没有 Databricks；&lt;/li&gt;
&lt;li&gt;如果没有 Git，就没有 GitLab；&lt;/li&gt;
&lt;li&gt;如果没有 Linux，就没有 Red Hat、SUSE 等；&lt;/li&gt;
&lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;COSS 与 SaaS 类公司的区别见下图。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/coss-vc-funding-since-2020/coss-vs-sass_hu98e5b7b9ebb088744da697475e0d1a84_152325_1600x681_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/coss-vc-funding-since-2020/coss-vs-sass.jpg&#34; data-img=&#34;/blog/coss-vc-funding-since-2020/coss-vs-sass.jpg&#34; data-width=&#34;1600&#34; data-height=&#34;681&#34; alt=&#34;image&#34; data-caption=&#34;COSS 与 SaaS 类公司对比&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;COSS 与 SaaS 类公司对比&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;关于-coss-公司融资的一些数据&#34;&gt;关于 COSS 公司融资的一些数据&lt;/h2&gt;
&lt;p&gt;自 2020 年一月至 2022 年 8 月（32 个月）这段时间内全球公开的 COSS 公司融资数据如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;500+ 次融资&lt;/li&gt;
&lt;li&gt;360+ 家 COSS 初创公司&lt;/li&gt;
&lt;li&gt;340+ 个开源项目&lt;/li&gt;
&lt;li&gt;230+ 家风投公司参与&lt;/li&gt;
&lt;li&gt;总融资 240+ 亿美元&lt;/li&gt;
&lt;li&gt;平均每月融资 7.5 亿美元&lt;/li&gt;
&lt;li&gt;2021 年 2 月和 2021 年 9 月单月融资规模最大&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多详细数据请阅读博客 &lt;a href=&#34;https://www.coss.community/cossc/global-vc-funding-into-coss-24b-raised-from-jan-2020-to-august-2022-3pc6&#34; title=&#34;Global VC Funding In COSS: $24B&amp;#43; Raised From Jan 2020 to August 2022&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Global VC Funding In COSS: $24B+ Raised From Jan 2020 to August 2022&lt;/a&gt;
 和&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1Bz0lxWzwW8q9AUSO5HgRrUyfR47em6YQW4h8PF_vRmE/edit#gid=666389338&#34; title=&#34;原始数据表格&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;原始数据表格&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;中国的开源商业化公司&#34;&gt;中国的开源商业化公司&lt;/h2&gt;
&lt;p&gt;近两年中国也涌现了一系列的开源商业化（COSS）公司，例如：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;开源软件&lt;/th&gt;
&lt;th&gt;公司名称&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Apache ShardingSphere&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://sphere-ex.cn&#34; title=&#34;SphereEx&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SphereEx&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TDengine&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.taosdata.com/&#34; title=&#34;涛思数据&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;涛思数据&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OceanBase&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.oceanbase.com/&#34; title=&#34;OceanBase&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OceanBase&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apache APISIX&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.apiseven.com/&#34; title=&#34;API7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;API7&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apache Pulsar&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://streamnative.io/&#34; title=&#34;StreamNative&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;StreamNative&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Apache DolphinScheduler&lt;/td&gt;
&lt;td&gt;未知&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Nebula Graph&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.vesoft.com/cn/&#34; title=&#34;悦数科技&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;悦数科技&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Milvus&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://zilliz.com/&#34; title=&#34;Zilliz&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Zilliz&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;figcaption class=&#34;text-center&#34;&gt;
    
    表：中国的 COSS 公司
    
&lt;/figcaption&gt;

&lt;p&gt;以上仅列举了部分笔者观察到的 COSS 公司，如有遗漏，欢迎补充。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;在 2020 年之前国内也有不少开源商业化公司，比如 PingCAP、Kylingence、EasyStack 等，2020 年后似乎在全球都有一种 COSS 创业的趋势，国内的开源商业化相对于国外还处于比较早期的阶段，一是有影响力的开源项目太少，二是国内用户尚未对商业化开源软件的付费的习惯，还有一些其他政策和法规问题。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>开源项目千千万，如何发现好项目？</title>
      <link>https://jimmysong.io/blog/oss-insight/</link>
      <pubDate>Thu, 02 Jun 2022 10:27:49 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/oss-insight/</guid>
      <description>
        
        
        &lt;p&gt;不知道大家听说没有 PingCAP 推出的一个 OSSInsight.io 网站，可以根据 GitHub 上的事件，提供开源软件洞察，这个项目也开源在 &lt;a href=&#34;https://github.com/pingcap/ossinsight&#34; title=&#34;GitHub&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;
 上。它可以提供以下方面的洞察能力，有点类似于 Google Analytics、Trends：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比较 GitHub 仓库历史 Star 趋势图&lt;/li&gt;
&lt;li&gt;开发者地理位置分布&lt;/li&gt;
&lt;li&gt;开发者贡献时间热力图&lt;/li&gt;
&lt;li&gt;编码活力，如每月 PR 数量、代码行数变化&lt;/li&gt;
&lt;li&gt;分类趋势排名&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;网站截图&#34;&gt;网站截图&lt;/h2&gt;
&lt;p&gt;以下图片来自 &lt;a href=&#34;https://ossinsight.io/blog/explore-deep-in-4.6-billion-github-events/&#34; title=&#34;OSSInsight 博客&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;OSSInsight 博客&lt;/a&gt;
，展示了该网站的一些功能。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2trup1v5bj20k00c5my9_hu7b80a3e647af979925fab8b27d9c16ca_26713_720x437_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2trup1v5bj20k00c5my9.jpg&#34; data-img=&#34;/blog/oss-insight/e6c9d24ely1h2trup1v5bj20k00c5my9.jpg&#34; data-width=&#34;720&#34; data-height=&#34;437&#34; alt=&#34;image&#34; data-caption=&#34;Kubernetes 和 Moby 的标记 star 的人员地理分布&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;Kubernetes 和 Moby 的标记 star 的人员地理分布&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2trw4iqpyj20wn0gvgnp_hudfb0569e1734b9e0916959cfb6cc1399_46278_1175x607_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2trw4iqpyj20wn0gvgnp.jpg&#34; data-img=&#34;/blog/oss-insight/e6c9d24ely1h2trw4iqpyj20wn0gvgnp.jpg&#34; data-width=&#34;1175&#34; data-height=&#34;607&#34; alt=&#34;image&#34; data-caption=&#34;K8s（上）和 Moby（下）的月度推送和提交&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;K8s（上）和 Moby（下）的月度推送和提交&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2ts5cig5kj21mw0u00xv_hu079b79402954cd455bbd96d20a758b1b_103825_2120x1080_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2ts5cig5kj21mw0u00xv.jpg&#34; data-img=&#34;/blog/oss-insight/e6c9d24ely1h2ts5cig5kj21mw0u00xv.jpg&#34; data-width=&#34;2120&#34; data-height=&#34;1080&#34; alt=&#34;image&#34; data-caption=&#34;分类排名&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;分类排名&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;你可以在首页输入一个 GitHub 仓库，查看该仓库的一些洞察信息。我查看了我的 &lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook/&#34; title=&#34;&amp;lt;code&amp;gt;rootsongjc/kubernetes-handbook&amp;lt;/code&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;rootsongjc/kubernetes-handbook&lt;/code&gt;&lt;/a&gt;
 之后，发现它还以获得关注者的公司信息，如下图。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2trz8bpqfj21di0u0gq4_hucf2ad326c460dd61afe84bdec00bee82_85181_1782x1080_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2trz8bpqfj21di0u0gq4.jpg&#34; data-img=&#34;/blog/oss-insight/e6c9d24ely1h2trz8bpqfj21di0u0gq4.jpg&#34; data-width=&#34;1782&#34; data-height=&#34;1080&#34; alt=&#34;image&#34; data-caption=&#34;rootsongjc/kubernetes-handbook 关注者的公司分布&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;rootsongjc/kubernetes-handbook 关注者的公司分布&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;这个网站有点类似于 CNCF 推出的 &lt;a href=&#34;https://devstats.cncf.io/&#34; title=&#34;DevStats&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DevStats&lt;/a&gt;
，不过 DevStats 只能洞察 CNCF 托管的项目。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2ts2o2rirj21mw0u00zv_hu786750cc2a8acb9aabbf9c24cb6488f3_140735_2120x1080_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2ts2o2rirj21mw0u00zv.jpg&#34; data-img=&#34;/blog/oss-insight/e6c9d24ely1h2ts2o2rirj21mw0u00zv.jpg&#34; data-width=&#34;2120&#34; data-height=&#34;1080&#34; alt=&#34;image&#34; data-caption=&#34;DevStats 页面&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;DevStats 页面&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;评论&#34;&gt;评论&lt;/h2&gt;
&lt;p&gt;OSSInsight 也可以算是 CHAOSS 类软件的一种，比如 Linux 基金会下的 CHAOSS（Community Health Analytics Open Source Software）工作组有一个开源项目 &lt;a href=&#34;https://chaoss.github.io/grimoirelab/&#34; title=&#34;GrimoireLab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GrimoireLab&lt;/a&gt;
 就是做软件开发分析的。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2ts7e6aiuj21ml0u078o_hu3c37f4c29af95dc9b78531dda0812d15_79181_2109x1080_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/oss-insight/e6c9d24ely1h2ts7e6aiuj21ml0u078o.jpg&#34; data-img=&#34;/blog/oss-insight/e6c9d24ely1h2ts7e6aiuj21ml0u078o.jpg&#34; data-width=&#34;2109&#34; data-height=&#34;1080&#34; alt=&#34;image&#34; data-caption=&#34;GrimoireLab 网站页面&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;GrimoireLab 网站页面&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;如果你关注开源和技术趋势的话，网上还有一些类似的 GitHub 趋势网站，大家可以根据自己的需要选用。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>开源软件合规实践</title>
      <link>https://jimmysong.io/blog/open-source-compliance-practices/</link>
      <pubDate>Sat, 08 Jun 2019 18:13:19 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/open-source-compliance-practices/</guid>
      <description>
        
        
        &lt;h2 id=&#34;总体概述&#34;&gt;总体概述&lt;/h2&gt;
&lt;p&gt;开源软件合规（Compliance）实践，从狭义上讲就是企业使用开源软件许可证（License）的合规。&lt;em&gt;Recommended Open Source Compliance Practices for the Enterprise&lt;/em&gt; 电子书（共 32 页）由 &lt;em&gt;Ibrahim Haddad&lt;/em&gt; 博士撰写，本书从以下几个角度为你的公司的进行开源合规实践以指导：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建开源审查委员会（Open Source Review Committee）&lt;/li&gt;
&lt;li&gt;代码扫描&lt;/li&gt;
&lt;li&gt;软件溯源（Software Sourcing）&lt;/li&gt;
&lt;li&gt;开源法务支持（Open Source Legal Support）&lt;/li&gt;
&lt;li&gt;流程中的合规检查（Compliance Checkpoints）&lt;/li&gt;
&lt;li&gt;开发和部署检查器&lt;/li&gt;
&lt;li&gt;合规事项看板&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;开源合规审查组&#34;&gt;开源合规审查组&lt;/h3&gt;
&lt;p&gt;企业为了保证自己产品或软件的合规，通常会有一个许可证合规审查组，负责以下几项职责：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遵守开源许可条款&lt;/li&gt;
&lt;li&gt;促进在产品和服务中使用开源&lt;/li&gt;
&lt;li&gt;遵守第三方商业软件的许可条款&lt;/li&gt;
&lt;li&gt;保护您的产品/服务差异化（知识产权/IP）&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unqmzuawj30yy0fmgnv_hu3985510db24dd6825c4aaf643422d817_96180_1258x562_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unqmzuawj30yy0fmgnv.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3unqmzuawj30yy0fmgnv.jpg&#34; data-width=&#34;1258&#34; data-height=&#34;562&#34; alt=&#34;image&#34; data-caption=&#34;开源促进及合规计划&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;开源促进及合规计划&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h3 id=&#34;开源合规流程&#34;&gt;开源合规流程&lt;/h3&gt;
&lt;p&gt;图 2 是开源合规流程闭环。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unru4rl8j31300qkmz8_hu8fe448957a29007dfedeffd5c6ffacf1_85005_1404x956_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unru4rl8j31300qkmz8.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3unru4rl8j31300qkmz8.jpg&#34; data-width=&#34;1404&#34; data-height=&#34;956&#34; alt=&#34;image&#34; data-caption=&#34;图 2. 开源合规流程闭环&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;图 2. 开源合规流程闭环&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;该流程中分为以下三步：确认（Identify）、批准（Approve）和确知（Satisfy）。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unvsqmmrj31zy0fu0w8_hu9b9a785132ea5d869d37a9f1ec2078b1_159559_2590x570_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unvsqmmrj31zy0fu0w8.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3unvsqmmrj31zy0fu0w8.jpg&#34; data-width=&#34;2590&#34; data-height=&#34;570&#34; alt=&#34;image&#34; data-caption=&#34;图 3. 开源合规步骤产出&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;图 3. 开源合规步骤产出&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h4 id=&#34;确认identify&#34;&gt;确认（Identify）&lt;/h4&gt;
&lt;p&gt;此初始步骤的目标是监控软件组合中开源来源，无论该组合是作为独立软件包还是嵌入在第三方或公司开发的软件中。此步骤的输出是详细的软件物料清单（Bill of Materials），用于标识所有开源软件包（Package）和代码片段（Snippet）的来源（Origin）、许可证（License）以及由软件组合分析工具所识别的许可冲突。&lt;/p&gt;
&lt;h4 id=&#34;批准approve&#34;&gt;批准（Approve）&lt;/h4&gt;
&lt;p&gt;这一步的目标是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查看上一步的输出，了解管理相关源代码的使用、修改和分发的许可证；&lt;/li&gt;
&lt;li&gt;根据其独特的背景（context），确定是否批准使用已识别的开源软件；&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;确知satisfy&#34;&gt;确知（Satisfy）&lt;/h4&gt;
&lt;p&gt;在最后一步中，准备好所有已批准的开源软件（整个组件和片段）的许可证、版权（copyright）和归属声明，并将其交给相关的部门，以包含在产品文档中。同样，已经确知和标记了许可义务的开源软件包，就可以在产品/服务上线时发布了。&lt;/p&gt;
&lt;h3 id=&#34;对企业开源合规实践的建议&#34;&gt;对企业开源合规实践的建议&lt;/h3&gt;
&lt;p&gt;作者提出了企业可以实施的实践建议，以改进和加强其开源合规性计划：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成立开源审查委员会（Open Source Review Board，简称 OSRB）&lt;/li&gt;
&lt;li&gt;建立自动化系统来识别开源软件&lt;/li&gt;
&lt;li&gt;让软件供应商遵守开源许可证&lt;/li&gt;
&lt;li&gt;扩展开源法律支持&lt;/li&gt;
&lt;li&gt;在业务和开发过程中集成开源合规性检查点&lt;/li&gt;
&lt;li&gt;提供各种开源合规性任务的清单（checklist）&lt;/li&gt;
&lt;li&gt;开发和部署支持清单&lt;/li&gt;
&lt;li&gt;建立开源合规活动基准（benchmark）&lt;/li&gt;
&lt;li&gt;参与关键合规性开源合规性计划&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;成立开源审查委员会&#34;&gt;成立开源审查委员会&lt;/h2&gt;
&lt;p&gt;除开源合规官或开源计划办公室的代表外，开源审查委员会（OSRB）由法律和产品/工程团队的代表组成。OSRB 的主要职责是审查和批准计划在产品和服务中使用开源软件。&lt;/p&gt;
&lt;p&gt;下面是 OSRB 中每个参与者职责的宏观概述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;开源法律顾问（Open Source Legal Counsel）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;审查和批准开源软件的使用、修改和分发。&lt;/li&gt;
&lt;li&gt;提供与开源许可相关的法律指导。&lt;/li&gt;
&lt;li&gt;为创建合规培训做出贡献。&lt;/li&gt;
&lt;li&gt;有助于改进合规计划。&lt;/li&gt;
&lt;li&gt;审查和批准与许可证合规性相关的 Web 门户的内容。&lt;/li&gt;
&lt;li&gt;审核并批准使用的开源软件的义务列表。&lt;/li&gt;
&lt;li&gt;从开源合规性角度签署产品发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;产品/工程代表（Product / Engineering Representative）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在其组织内实施合规性政策（policy）和流程（process）。&lt;/li&gt;
&lt;li&gt;在软件开发过程中集成合规性实践。&lt;/li&gt;
&lt;li&gt;从工程角度为改进合规计划做出贡献。&lt;/li&gt;
&lt;li&gt;遵循技术开源合规指南。&lt;/li&gt;
&lt;li&gt;与 OSRB 成员协作以响应合规性查询。&lt;/li&gt;
&lt;li&gt;进行设计、架构和代码审查。&lt;/li&gt;
&lt;li&gt;准备用于出版物的开源软件包和通知。&lt;/li&gt;
&lt;li&gt;从开源合规性角度签署产品发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;开源计划办公室和合规官的代表（Representative of the Open Source Program Office or Compliance Officer）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;推动开源合规活动。&lt;/li&gt;
&lt;li&gt;协调源代码扫描和审核。&lt;/li&gt;
&lt;li&gt;参与工程审查和分发准备评估。&lt;/li&gt;
&lt;li&gt;协调开源软件包和通知的发布。&lt;/li&gt;
&lt;li&gt;为培训工作和改进合规计划做出贡献。&lt;/li&gt;
&lt;li&gt;有助于促进开源软件的自动化和发现。&lt;/li&gt;
&lt;li&gt;从开源合规性角度签署产品发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了 OSRB 的成员之外，实现开源合规是一项跨学科活动，涉及到组织内的各个部门和个人，如图 4 所示。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unxxety2j31ik0li0v5_hub801ddd2287b450c30c236044ec617f1_103051_1964x774_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unxxety2j31ik0li0v5.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3unxxety2j31ik0li0v5.jpg&#34; data-width=&#34;1964&#34; data-height=&#34;774&#34; alt=&#34;image&#34; data-caption=&#34;图 4. 开源项目办公室组成&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;图 4. 开源项目办公室组成&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;下面是对支持团队帮助 OSRB 确保开源合规性的核心职责的描述。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IT&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建/获取确保合规性所需的新工具&lt;/li&gt;
&lt;li&gt;为合规计划使用的工具和自动化基础设施提供支持和维护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;企业发展（Cooperate Development）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求/监督开源合规性尽职调查在合并或收购之前完成&lt;/li&gt;
&lt;li&gt;从外包开发中心接收源代码时确保合规性记录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;文档（Documentation）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在产品文档中包含开源许可证信息和通知（notice）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;开源执行委员会（Open Source Executive Committee）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;审查并批准在开源许可下发布专有源代码的提议&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;软件采购（Software Procurement）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;授权第三方软件提供商在许可或购买的软件组件中披露开源&lt;/li&gt;
&lt;li&gt;协助引入包含（或不包含）开源软件的第三方软件&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;开源代码审查&#34;&gt;开源代码审查&lt;/h2&gt;
&lt;p&gt;开源合规性工作的核心是识别开源代码及其各自的许可证，以便组织可以满足适用的许可证义务。开源策略和流程指导此核心活动。合规性政策和流程管理开源软件的使用、贡献、审核和发布的各个方面。如果我们采用下图 5 所示的基本流程并对其进行扩展，我们将考虑端到端的合规流程。下图显示了这样一个流程，它具有源自多个源的源代码输入。源代码经过一系列步骤，流程的最终输出包括书面报价、通知列表（版权、归属、许可证），以及为履行许可义务而发布的源代码包。&lt;/p&gt;
&lt;p&gt;图 5 提供了端到端合规流程的详细示例，其中包括软件组件被 OSRB 批准在构建系统中与软件产品集成之前经历的各个步骤。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unjbh5amj31900fuac7_hudf07b00085f0c151d917e2aa4aebd20a_116782_1620x570_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3unjbh5amj31900fuac7.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3unjbh5amj31900fuac7.jpg&#34; data-width=&#34;1620&#34; data-height=&#34;570&#34; alt=&#34;image&#34; data-caption=&#34;图 5. 端到端开源合规流程示例&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;图 5. 端到端开源合规流程示例&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;图 6 简要描述了每个步骤中发生的情况。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3uzfnj1lzj327i0kuq71_hu857674948f5a8dc64ae5ecb263660ad5_136469_2862x750_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3uzfnj1lzj327i0kuq71.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3uzfnj1lzj327i0kuq71.jpg&#34; data-width=&#34;2862&#34; data-height=&#34;750&#34; alt=&#34;image&#34; data-caption=&#34;图 6. 开源合规代码确认步骤详解&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;图 6. 开源合规代码确认步骤详解&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;开源代码溯源&#34;&gt;开源代码溯源&lt;/h2&gt;
&lt;p&gt;让您的软件提供商参与开源合规中至关重要。软件提供商必须披露其可交付成果中包含的开源代码，并提供包括适用源代码在内的所有通知（notice）。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3upmcjnl5j31di0ncdjd_hu7cd0cf755314433ee5a5bf2bd6c7b62d_158093_1782x840_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3upmcjnl5j31di0ncdjd.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3upmcjnl5j31di0ncdjd.jpg&#34; data-width=&#34;1782&#34; data-height=&#34;840&#34; alt=&#34;image&#34; data-caption=&#34;图 7. 多源开发模型&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;图 7. 多源开发模型&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;图 7 描绘了多源开发模型和传入源代码的各种源组合。在此模型下，产品或软件堆栈可以包含专有软件、第三方商业和第三方开源软件的任意组合。例如，除了第三方专有源代码之外，软件组件 A 可以包括专有源代码，而软件组件 B 除了可以包含来自开源项目的源代码之外还可以包括专有源代码。&lt;/p&gt;
&lt;p&gt;当今的公司处于必须更新其供应链（软件采购）程序以解决获取和使用开源软件的状态。通常会有供应链人员参与将软件从供应商转移到贵公司。他们可以通过两种主要方式支持开源合规性活动：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要求第三方软件提供商披露他们在其可交付成果中使用的任何开源，以及&lt;/li&gt;
&lt;li&gt;协助许可与开源软件包捆绑在一起或与之集成的第三方软件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此领域的推荐做法是强制第三方软件提供商披露其产品中使用的所有开源组件，并声明他们计划如何满足适用的开源许可证义务。如果第三方软件包含开源，供应链必须确保在初始入口后满足开源许可证义务——您作为提供开源产品或服务的分销商将承担这些义务和责任。&lt;/p&gt;
&lt;h2 id=&#34;提供便捷的法务支持&#34;&gt;提供便捷的法务支持&lt;/h2&gt;
&lt;p&gt;大多数组织都会创建开源合规性计划并建立核心团队以确保合规性。大多数公司往往会会遇到开源法律支持的瓶颈，因为您公司里可能有成百上千的使用和集成开源代码的开发人员，而很少有法务人员提供所需的法律支持。扩展开源法律支持需要一些&lt;code&gt;开箱即用&lt;/code&gt;的思考，但可以借助以下实用方法实现。&lt;/p&gt;
&lt;h3 id=&#34;许可证手册license-playbooks&#34;&gt;许可证手册（License Playbooks）&lt;/h3&gt;
&lt;p&gt;提供面向软件开发人员的易于阅读和摘要的开源许可证摘要。提供有关这些许可证的易于理解的信息，例如许可证授予、限制、义务、专利影响等。使用开源软件许可证手册可以大量减少发送给法律顾问的基本问题的数量，并为开发人员提供了对常见查询的即时指导、信息和答案。&lt;/p&gt;
&lt;h3 id=&#34;许可证兼容性矩阵license-compatibility-matrix&#34;&gt;许可证兼容性矩阵（License Compatibility Matrix）&lt;/h3&gt;
&lt;p&gt;许可证兼容性是指确定某个许可证是否与另一个许可证兼容。GPL 兼容性是指确定某个许可证是否与 GPL 条款兼容。当合并源自不兼容许可下软件组件的源代码时，开发团队经常会遇到许可兼容性问题。当开发团队将不同许可证下的代码组合在一起时，可以参考许可证兼容性矩阵来验证在单个软件组件中是否存在加入源代码的许可冲突。如果开发团队使用的许可证源不在矩阵中，则可以后续获得法律顾问的建议。&lt;/p&gt;
&lt;h3 id=&#34;许可证分类&#34;&gt;许可证分类&lt;/h3&gt;
&lt;p&gt;为了减少开源法律顾问收到的问题数量并增加许可和合规流程教育，一些公司选择在几个类别下对其产品中最常用的许可进行分类。图 11 显示了许可证分类系统的一个简单示例，其中大多数使用的开源许可证分为四类。&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3ur9rfeqaj310c0gkdip_hud6c0b2e7b9fec9a6414dab56d97f1347_140613_1308x596_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/blog/open-source-compliance-practices/006tNc79ly1g3ur9rfeqaj310c0gkdip.jpg&#34; data-img=&#34;/blog/open-source-compliance-practices/006tNc79ly1g3ur9rfeqaj310c0gkdip.jpg&#34; data-width=&#34;1308&#34; data-height=&#34;596&#34; alt=&#34;image&#34; data-caption=&#34;图 8. 开源许可证分类（仅供参考）&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;图 8. 开源许可证分类（仅供参考）&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;上述许可证类别是对许可证进行分类的简单方法，使开发人员在根据这些许可证集成代码时更容易了解操作过程。下面这个例子是开发人员想要使用在以下许可下的开源软件包的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;License A - Action：尽管用，没有什么问题&lt;/li&gt;
&lt;li&gt;License E - Action：获得工程经理的批准&lt;/li&gt;
&lt;li&gt;License I - Action：获得法律顾问的批准&lt;/li&gt;
&lt;li&gt;License M - Action：根据政策禁止适用该 License&lt;/li&gt;
&lt;li&gt;其他 - Action：向经理询问行动方案&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有关此话题的进一步阅读，我们建议阅读**&lt;a href=&#34;https://www2.thelinuxfoundation.org/pub-practical-advice-to-scale-legal&#34; title=&#34;扩展开源法律支持的实用建议&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;扩展开源法律支持的实用建议&lt;/a&gt;
**。本文探讨了法律顾问在确保开源合规方面的作用，并为法律顾问提供了可以为软件开发团队提供的实用建议。这些实用建议将使软件开发人员能够做出与开源许可相关的日常决策，而无需再去找负责每个问题的法律顾问。&lt;/p&gt;
&lt;h2 id=&#34;开源合规流程中的检查点及发布清单&#34;&gt;开源合规流程中的检查点及发布清单&lt;/h2&gt;
&lt;p&gt;有必要将合规性实践纳入开发流程，以确保开源合规工作的成功。您可以通过多种方式实现这一目标。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;每个内部版本的合规性&lt;/strong&gt;：更新流程管理，以确保在产品开发周期中尽早包含开源合规性活动，以使组织能够满足其发布时间表。遵循此模型，未来版本的增量合规性也变得简单明了。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更新供应链程序&lt;/strong&gt;：定制供应链的供应商选择程序，以确保在对供应商及其可交付成果进行尽职调查（Due Diligence）时考虑开源合规性要求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;执行验证&lt;/strong&gt;：使用验证步骤确保在发生发行外部版本之前满足所有合规性要求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;培训员工&lt;/strong&gt;：为所有员工提供开源合规培训。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;采用 SPDX 报告许可证信息&lt;/strong&gt;：以 SDPX 格式提供许可证信息，以尽量减少任何可能的错误，并标准化报告信息的方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;SPDX&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://spdx.org/&#34; title=&#34;SPDX®&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SPDX®&lt;/a&gt;
（Software Package Data Exchange®）是用于传达软件物料清单信息（包括组件、许可证、版权和安全参考）的开放标准。&lt;/p&gt;
&lt;p&gt;SPDX 通过为公司和社区提供共享格式来共享软件许可、版权和安全参考的重要数据，从而简化和改进合规性，从而减少冗余工作。&lt;/p&gt;
&lt;p&gt;SPDX 规范由 SPDX 工作组开发，该工作组由 Linux 基金会托管。基层工作包括来自 20 多个组织的代表——软件、系统和工具供应商、基金会和系统集成商——都致力于为软件包数据交换格式创建标准。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;开发和部署清单&#34;&gt;开发和部署清单&lt;/h3&gt;
&lt;p&gt;清单很有用，可确保执行合规性任务的一致性和完整性。强烈建议根据员工职责建立合规里程碑清单和目标清单。&lt;/p&gt;
&lt;p&gt;清单的示例包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;批准将传入代码集成到产品的源代码存储库之前的核对表&lt;/li&gt;
&lt;li&gt;确保履行义务的清单&lt;/li&gt;
&lt;li&gt;开发人员的清单&lt;/li&gt;
&lt;li&gt;工程经理的清单&lt;/li&gt;
&lt;li&gt;合规人员清单&lt;/li&gt;
&lt;li&gt;开源法律人员的清单&lt;/li&gt;
&lt;li&gt;软件采购人员清单&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了说明这一点，我们提供了一个示例清单，展示了在组织发布源代码包之前必须检查的各种任务，以履行在交付产品中包含的开源代码的许可义务：&lt;/p&gt;
&lt;p&gt;预发行清单（Pre-Distribution Checklist）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证引入开源软件包的修改是否已记录，并作为更改日志的一部分包含在开源发行说明中。&lt;/li&gt;
&lt;li&gt;确保每个修改后的源代码文件都包含版权声明，免责声明和通用“更改日志”（Changelog）条目的附加条目。&lt;/li&gt;
&lt;li&gt;确认源代码包的所有内容均已由工程团队审核并由 OSRB 确认。&lt;/li&gt;
&lt;li&gt;确保在非公司标准 Linux 计算机上编译开源软件包。此步骤的目标是确保您要发布的开源软件包在通用最终用户系统上进行编译。&lt;/li&gt;
&lt;li&gt;将产品手册更新为：
&lt;ul&gt;
&lt;li&gt;提及该产品包含开源软件。&lt;/li&gt;
&lt;li&gt;包括与产品中包含的不同开源软件相对应的所有许可证的列表。&lt;/li&gt;
&lt;li&gt;提供适当的版权和归属通知。&lt;/li&gt;
&lt;li&gt;通过网页下载或通过产品手册中提供的指定地址通过电子邮件或邮寄方式与贵公司联系，说明如何访问开源软件包的代码（书面提供）。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;执行语言检查（linguistic review）以确保源代码中没有任何不适当的注释。
&lt;ul&gt;
&lt;li&gt;注意：有些公司忘记进行语言检查，当代码发布时，他们会因源代码中留下的不当注释而尴尬。执行语言检查的另一个重要原因是确保源代码和注释不涉及未来的产品代码名称或功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确保现有许可、版权和归属通知不受干扰。
&lt;ul&gt;
&lt;li&gt;验证要分发的源代码是否与产品一起使用的二进制文件对应，源代码构建到与产品一起分发的同一个库中，并且源代码分发中包含适当的指令（除时间/日期戳外派生的二进制文件通常是相同的）。&lt;/li&gt;
&lt;li&gt;验证包是否遵循开源策略中定义的链接关系和交互。&lt;/li&gt;
&lt;li&gt;确保在开源软件包的根文件夹中的 LICENSE 文件中包含许可证文本的副本（如果尚未存在）。&lt;/li&gt;
&lt;li&gt;如果源代码包需要特殊的构建工具或环境设置，则将详细信息包含在 README 文件或类似文件中。
这些清单，特别是在实现自动化并与业务和开发流程集成时，可以提醒您必须完成的所有事项，以确保合规性并减少发生错误的几率。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;最后&#34;&gt;最后&lt;/h2&gt;
&lt;p&gt;本书中的最后还推广了波 OpenChain 项目，该项目提供了一组自我认证的选项，由该领域的利益相关者创建，用于合规性规范，该规范允许给定的组织进行自我测试并声明其遵守特定的合规级别。您可以访问 &lt;strong&gt;&lt;a href=&#34;https://www.openchainproject.org/conformance&#34; title=&#34;https://www.openchainproject.org/conformance&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.openchainproject.org/conformance&lt;/a&gt;
&lt;/strong&gt; 了解更多信息。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>开源社区贡献者协议 CLA 介绍</title>
      <link>https://jimmysong.io/blog/open-source-cla/</link>
      <pubDate>Sat, 20 Apr 2019 15:16:09 +0800</pubDate>
      
      <guid>https://jimmysong.io/blog/open-source-cla/</guid>
      <description>
        
        
        &lt;p&gt;很多从事开源人可能会注意到有些开源项目要求贡献者在提交 PR 前首先签署 CLA，只有签署了 CLA 之后 PR 才可以合并。&lt;/p&gt;
&lt;h2 id=&#34;开源贡献协议简介&#34;&gt;开源贡献协议简介&lt;/h2&gt;
&lt;p&gt;下面列举了开源贡献协议的一些简介：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;开源贡献协议有 CLA（Contributor License Agreement）和 &lt;a href=&#34;https://developercertificate.org/&#34; title=&#34;DCO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DCO&lt;/a&gt;
（Developer Certificate of Origin）两种；&lt;/li&gt;
&lt;li&gt;DCO 由 Linux Foundation 提出，是固定的简短条文（只有 4 条），旨在让贡献者保证遵守开源 license；&lt;/li&gt;
&lt;li&gt;CLA 是对开源 license 的法律性质补充，由法务制定；&lt;/li&gt;
&lt;li&gt;CLA 可以自定义，不论是个人还是企业级签署的时候都需要提供详细的信息，如姓名、公司、邮箱、地址、电话等；&lt;/li&gt;
&lt;li&gt;下表中对比了 CLA 和 DCO 的特性，推荐大型跨公司开源项目使用 CLA，利用项目更加正规和长久发展；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;开源社区的贡献者协议一般分为两种 CLA 和 DCO，这两种协议各有优缺点如下。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;CLA&lt;/th&gt;
&lt;th&gt;DCO&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;社区属性&lt;/td&gt;
&lt;td&gt;弱&lt;/td&gt;
&lt;td&gt;强&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;签署方式&lt;/td&gt;
&lt;td&gt;一次性&lt;/td&gt;
&lt;td&gt;每次提交时在 commit 信息里追加 &lt;code&gt;Signed-off-by: email&lt;/code&gt; 信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;法律责任&lt;/td&gt;
&lt;td&gt;明确法律义务&lt;/td&gt;
&lt;td&gt;无声明，用来限制提交者遵守开源 license&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;是否可自定义&lt;/td&gt;
&lt;td&gt;公司或组织可自行定义&lt;/td&gt;
&lt;td&gt;否&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;使用案例&lt;/td&gt;
&lt;td&gt;Google、Pivotal、CNCF、阿里巴巴、Apache SkyWalking&lt;/td&gt;
&lt;td&gt;GitLab、Chef、Harbor、TiKV&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;公司属性&lt;/td&gt;
&lt;td&gt;强，可以签署公司级别的 CLA&lt;/td&gt;
&lt;td&gt;弱&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;什么是-cla&#34;&gt;什么是 CLA&lt;/h2&gt;
&lt;p&gt;CLA 是 Contributor License Agreement 的缩写，CLA 可以看做是对开源软件本身采用的开源协议的补充。一般分为公司级和个人级别的 CLA，所谓公司级即某公司代表签署 CLA 后即可代表该公司所有员工都签署了该 CLA，而个人级别 CLA 只代表个人认可该 CLA。&lt;/p&gt;
&lt;h2 id=&#34;cla-包含哪些内容&#34;&gt;CLA 包含哪些内容？&lt;/h2&gt;
&lt;p&gt;因为 CLA 是每个公司或组织自定义的，在细节上可能稍有不同，不过总体都包含以下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关于签署该 CLA 的主体和贡献的定义；&lt;/li&gt;
&lt;li&gt;授予著作权给拥有该软件知识产权的公司或组织；&lt;/li&gt;
&lt;li&gt;专利许可的授予；&lt;/li&gt;
&lt;li&gt;签署者保证依法有权授予上述许可；&lt;/li&gt;
&lt;li&gt;签署者确保所有的贡献内容均为原创作品；&lt;/li&gt;
&lt;li&gt;签署者为贡献内容支持的免责描述；&lt;/li&gt;
&lt;li&gt;说明贡献者提交非原创作品应该采用的方式；&lt;/li&gt;
&lt;li&gt;保证在获悉任何方面不准确的事实或情况之时通知签约方；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对于主体在中国的企业，还加入了一些本地化的内容，如 &lt;a href=&#34;https://github.com/aliyun/cla&#34; title=&#34;Alibaba Open Source Individual CLA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Alibaba Open Source Individual CLA&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;因为 CLA 分别为个人级和公司级，所以对于不同名义签署时需要提供不同的信息。签署个人级 CLA 的时候需要提供个人信息（姓名、地址、邮箱、电话等），签署公司级 CLA 还需要提供公司信息（名称、地址、联系电话、邮箱、传真等）；&lt;/p&gt;
&lt;h2 id=&#34;什么是-dco&#34;&gt;什么是 DCO&lt;/h2&gt;
&lt;p&gt;DCO 是 Developer Certificate of Origin 的缩写，由 Linux Foundation 于 2004 年制定。DCO 最大的优点是可以减轻开发者贡献的阻碍，不用阅读冗长的 CLA 法律条文，只需要在提交的时候签署邮件地址即可。Chef 和 GitLab 已分别于 2016 年和 2017 年从 CLA 迁移到 DCO。&lt;/p&gt;
&lt;p&gt;如 CNCF 的 Sandbox 项目 &lt;a href=&#34;https://github.com/goharbor/harbor&#34; title=&#34;harbor&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;harbor&lt;/a&gt;
 就是使用的 DCO。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developercertificate.org/&#34; title=&#34;DCO&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DCO&lt;/a&gt;
 目前是 1.1 版本，内容很简单，开源项目的贡献者只需要保证以下四点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;该贡献全部或部分由我创建，我有权根据文件中指明的开源许可提交；要么&lt;/li&gt;
&lt;li&gt;该贡献是基于以前的工作，这些工作属于适当的开源许可，无论这些工作全部还是部分由我完成，我有权根据相同的开源许可证（除非我被允许根据不同的许可证提交）提交修改后的工作；要么&lt;/li&gt;
&lt;li&gt;该贡献由 1、2、或 3 证明的其他人直接提供给我，而我没有对其进行修改。&lt;/li&gt;
&lt;li&gt;我理解并同意该项目和贡献是公开的，并且该贡献的记录（包括我随之提交的所有个人信息，包括我的签字）将无限期保留，并且可以与本项目或涉及的开源许可证保持一致或者重新分配。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cla-vs-dco&#34;&gt;CLA vs DCO&lt;/h2&gt;
&lt;p&gt;Kubernetes 社区中有过讨论将 Kubernetes 贡献者从 CLA 迁移到 DCO，最后 TOC 成员 Tim Hockin 觉得签署 CLA 对于贡献者只需要痛苦一次，每次提交都签署 DCO 是持续的痛苦，因此最后还是坚持使用 CLA。参考&lt;a href=&#34;https://github.com/kubernetes/community/issues/2649&#34; title=&#34;Move from CLA to DCO #2649&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Move from CLA to DCO #2649&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;2018 年 CNCF 对其托管的项目的 Maintainer 做了调研，从反馈来看，Maintainer 对 DCO 是存在痛点的，并希望 CNCF 投入更多的 PR 和市场力量来对抗具有全职 PR/marketing 的初创公司。&lt;/p&gt;
&lt;p&gt;如果为了更注重个人贡献者，考虑社区属性，可以使用 DCO，这样对于开源项目的管理者来说就不用指定复杂的 CLA 了，但是对于大型项目由众多合作方的项目，建议使用 CLA。&lt;/p&gt;
&lt;h2 id=&#34;阿里巴巴-cla&#34;&gt;阿里巴巴 CLA&lt;/h2&gt;
&lt;p&gt;阿里巴巴只提供个人级别的 CLA 签署：&lt;a href=&#34;https://cla-assistant.io/alibaba/weex&#34; title=&#34;https://cla-assistant.io/alibaba/weex&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cla-assistant.io/alibaba/weex&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;CLA 内容见：&lt;a href=&#34;https://github.com/aliyun/cla&#34; title=&#34;https://github.com/aliyun/cla&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/aliyun/cla&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;阿里巴巴的 CLA 是参照 &lt;a href=&#34;https://www.apache.org/licenses/icla.pdf&#34; title=&#34;Apache CLA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache CLA&lt;/a&gt;
 撰写的，最后加上两条补充，协议受中国杭州的法院监管，同时提供双语版本，如中引文版本有冲突以英文版本为准。&lt;/p&gt;
&lt;h2 id=&#34;google-cla&#34;&gt;Google CLA&lt;/h2&gt;
&lt;p&gt;Google 的 CLA 也是仿照 Apache CLA 撰写的，Google 开源的一些列项目如 Istio、TensorFlow、Knative 等都是需要签署 &lt;a href=&#34;https://cla.developers.google.com/clas&#34; title=&#34;Google CLA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google CLA&lt;/a&gt;
。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;要贡献者授予 Google 以及其他软件用户贡献内容的版权以及内容背后的专利权。贡献者不要因为版权和专利权诉讼 Google 和其他软件用户。&lt;/li&gt;
&lt;li&gt;明确贡献的原创性。不要因为贡献者的不适当抄袭行为，导致 Google 和其他软件使用者被诉讼。&lt;/li&gt;
&lt;li&gt;签署公司级别 CLA 的人要能代表所在公司的所有贡献者。&lt;/li&gt;
&lt;li&gt;维护贡献者列表的不一定是跟签署该协议的是同一个人，签名者可以指定一个人来管理。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;参考：&lt;a href=&#34;https://docs.google.com/document/d/1FJkYaEZbKwmoEWrsbzDxdI-ytlEg73OsOcMXaF8Z01E/&#34; title=&#34;解读：Google Software Grant and Corporate Contributor License Agreement&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;解读：Google Software Grant and Corporate Contributor License Agreement&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;pivotal-cla&#34;&gt;Pivotal CLA&lt;/h2&gt;
&lt;p&gt;Pivotal 的 CLA 也是仿照 Apache CLA 撰写的，唯一增加了一点是协议受美国加州法律监管。签署个人级协议的时候需要提供姓名、邮箱、邮寄地址（可选）、国家（可选）、电话（可选），签署公司级别的 CLA 的条款了还增加了一条对于签名者必须有权利代表整个公司，要求的信息也更加详细，包括姓名、邮箱、邮寄地址、国家、电话、公司名称、GitHub 组织、头衔等。参与贡献 Pivotal 主导的 Spring 社区和 CloudFoundry 里的项目需要签署 &lt;a href=&#34;https://cla.pivotal.io/&#34; title=&#34;Pivotal CLA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Pivotal CLA&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;建议&#34;&gt;建议&lt;/h2&gt;
&lt;p&gt;如果你的开源项目可能会有公司间合作或者要贡献给基金会，为了防范法律风险，请直接使用 CLA；如果更看重社区内的合作，可以使用 DCO。&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.apache.org/licenses/icla.pdf&#34; title=&#34;Individual Contributor License Agreement (“Agreement”) V2.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Individual Contributor License Agreement (“Agreement”) V2.0&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/kubernetes/community/issues/2649&#34; title=&#34;Move from CLA to DCO #2649 - github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Move from CLA to DCO #2649 - github.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://opensource.google.com/docs/cla/policy/&#34; title=&#34;Alphabet CLA Policy and Rationale - opensource.google.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Alphabet CLA Policy and Rationale - opensource.google.com&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.apache.org/licenses/cla-corporate.txt&#34; title=&#34;The Apache Software Foundation Software Grant and Corporate Contributor License Agreement (&amp;amp;ldquo;Agreement&amp;amp;rdquo;) - apache.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Apache Software Foundation Software Grant and Corporate Contributor License Agreement (&amp;ldquo;Agreement&amp;rdquo;) - apache.org&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/aliyun/cla&#34; title=&#34;Alibaba Open Source Individual CLA - github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Alibaba Open Source Individual CLA - github.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
