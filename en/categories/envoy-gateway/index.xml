<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song&#39;s Blog – Envoy Gateway</title>
    <link>https://jimmysong.io/en/categories/envoy-gateway/</link>
    <description>Recent content in Envoy Gateway on Jimmy Song&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 May 2023 13:19:28 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/en/categories/envoy-gateway/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Envoy Gateway 0.4.0: Extending the API for Customization</title>
      <link>https://jimmysong.io/en/blog/envoy-gateway-customization/</link>
      <pubDate>Tue, 16 May 2023 13:19:28 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/envoy-gateway-customization/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://github.com/envoyproxy/gateway&#34; title=&#34;Envoy Gateway&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy Gateway&lt;/a&gt;
, the open-source API Gateway based on Envoy Proxy, has just&lt;a href=&#34;https://gateway.envoyproxy.io/annoucements/v0.4.0/&#34; title=&#34; released version 0.4.0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; released version 0.4.0&lt;/a&gt;
. This release is centered around customization, with the goal of enabling more use cases for end-users. In this blog post, we will discuss the new customizations available in this release and their significance for users.&lt;/p&gt;
&lt;h2 id=&#34;customizing-envoy-proxy-infrastructure&#34;&gt;Customizing Envoy Proxy Infrastructure&lt;/h2&gt;
&lt;p&gt;One of the main customizations in this release is the ability to configure the exact type of &lt;a href=&#34;https://gateway.envoyproxy.io/v0.4.0/api/config_types/#envoyproxy&#34; title=&#34;EnvoyProxy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;EnvoyProxy&lt;/a&gt;
 (CRD) deployment. You can define the number of replicas, images, and resource limits that EnvoyProxy deploys. You can also add annotations to EnvoyProxy deployments and services. This makes different use cases possible, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linking Envoy Gateway to external load balancers like AWS, NLB, ELB, and GCP.&lt;/li&gt;
&lt;li&gt;Injecting a sidecar alongside EnvoyProxy is very useful for managing the North-South traffic in the Envoy Gateway at the ingress layer and for managing the East-West traffic and enabling mutual TLS (mTLS) in the service mesh layer with the Envoy sidecar. This custom feature eliminates the need for users to create their own certificates, as it is based on Istio certificate management.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Refer to the &lt;a href=&#34;https://gateway.envoyproxy.io/v0.4.0/user/customize-envoyproxy/&#34; title=&#34;Envoy Gateway documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy Gateway documentation&lt;/a&gt;
 for more customized features on Envoy Gateway.&lt;/p&gt;
&lt;h2 id=&#34;multi-tenant-deployment-modes&#34;&gt;Multi-Tenant Deployment Modes&lt;/h2&gt;
&lt;p&gt;Furthermore, Envoy Gateway has added support for other &lt;a href=&#34;https://gateway.envoyproxy.io/v0.4.0/user/deployment-mode/&#34; title=&#34;deployment modes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;deployment modes&lt;/a&gt;
 in addition to the default Kubernetes single-tenant mode, such as multi-tenancy, as shown in Figure 1 below.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/en/blog/envoy-gateway-customization/eg-multi-tenancy.svg&#34; data-img=&#34;/en/blog/envoy-gateway-customization/eg-multi-tenancy.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 1: Envoy Gateway multi-tenancy deployment mode.&#34;&gt;
    
  
  &lt;figcaption&gt;Figure 1: Envoy Gateway multi-tenancy deployment mode.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Deploy an Envoy Gateway Controller to each tenant’s namespace, which watches HTTPRoute and Service resources in Kubernetes, and creates and manages EnvoyProxy deployments in their respective namespaces.&lt;/p&gt;
&lt;h2 id=&#34;customizing-envoy-xds-bootstrap&#34;&gt;Customizing Envoy xDS Bootstrap&lt;/h2&gt;
&lt;p&gt;Another significant customization in this release is the ability to customize the Envoy xDS Bootstrap. With this feature, users can provide a bootstrap configuration to configure some static resources when starting up Envoy. A good case is configuring access logging, tracing and metrics to be sent to SkyWalking, which can work as an APM. Additionally, the release adds a lot of CLI tooling to help validate user configuration. Users can use the CLI as a dry run to change a specific field in Bootstrap, and it will fail if the config is not syntactically correct.&lt;/p&gt;
&lt;h2 id=&#34;extending-the-control-plane&#34;&gt;Extending the Control Plane&lt;/h2&gt;
&lt;p&gt;Envoy Gateway now provides the ability to allow vendors and extension developers to add gRPC hooks at different stages of the Envoy Gateway pipeline to further extend its functionality, allowing users to do things like enhance the xDS configuration being sent to Envoy, which was not possible before.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;In conclusion, Envoy Gateway 0.4.0 extends the API for customization and enables more use cases for end-users. The new customizations include the ability to customize Envoy deployment, Envoy xDS Bootstrap, and the control plane. With the release of this version, Envoy Gateway is becoming more user-friendly and is positioning itself as a great alternative to ingress-nginx.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/envoy-gateway-0-4-0-extending-the-api-for-customization/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;
&lt;/em&gt;.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
