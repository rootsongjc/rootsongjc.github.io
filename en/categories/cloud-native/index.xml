<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song - Cloud Native | Open Source | Community – cloud native</title>
    <link>https://jimmysong.io/en/categories/cloud-native/</link>
    <description>Recent content in cloud native on Jimmy Song - Cloud Native | Open Source | Community</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2020 Jimmy Song All Right Reserved; Powerd by Hugo with [educenter](https://github.com/themefisher/educenter-hugo) theme</copyright>
    <lastBuildDate>Sat, 11 Aug 2018 11:37:36 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/en/categories/cloud-native/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Cloud Native and me - the past, current and future</title>
      <link>https://jimmysong.io/en/blog/cloud-native-and-me-the-past-current-and-future/</link>
      <pubDate>Sat, 11 Aug 2018 11:37:36 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/cloud-native-and-me-the-past-current-and-future/</guid>
      <description>
        
        
        &lt;p&gt;Today I am honored to announce that I have become a &lt;a href=&#34;https://www.cncf.io/people/ambassadors/&#34;&gt;CNCF Ambassador&lt;/a&gt;. Here is my story with Cloud Native.&lt;/p&gt;
&lt;h2 id=&#34;origin&#34;&gt;Origin&lt;/h2&gt;
&lt;p&gt;The first time to attend the Cloud Native Computing Foundation is at the LC3 in Beijing 2017. I attended the meeting again this year, and in November of this year, CNCF will hold the &lt;a href=&#34;https://www.lfasiallc.com/events/kubecon-cloudnativecon-china-2018/&#34;&gt;KubeCon &amp;amp; CloudNativeCon&lt;/a&gt; for the first time in Shanghai, China. I&#39;ll be there too.&lt;/p&gt;
&lt;h2 id=&#34;cloud-native-books&#34;&gt;Cloud Native Books&lt;/h2&gt;
&lt;p&gt;My origins with the Cloud Native is originated from Kevin Hoffman&#39;s book &lt;a href=&#34;https://jimmysong.io/en/book/cloud-native-go&#34;&gt;Cloud Native Go&lt;/a&gt;. I translated this book at the end of 2016. Since then, in China, the translation of the word &lt;code&gt;Cloud Native&lt;/code&gt; has not been determined, we introduced it with &lt;code&gt;云原生&lt;/code&gt; to China.&lt;/p&gt;
&lt;p&gt;And then I begin to write the &lt;a href=&#34;https://github.com/rootsongjc/kubernetes-handbook&#34;&gt;kubernetes-handbook&lt;/a&gt; on GitHub. So far, it has  more than 2000 stars. This book has written more than 200,000 Chinese characters, the first commit happened on April 14, 2017.&lt;/p&gt;
&lt;p&gt;Since the the book Cloud Native Go completed, the publisher recommended another Cloud Native book to me -  &lt;a href=&#34;https://jimmysong.io/en/book/cloud-native-python/&#34;&gt;Cloud Native Python&lt;/a&gt; by Manish Sethi.&lt;/p&gt;
&lt;p&gt;And the book &lt;a href=&#34;https://jimmysong.io/en/book/cloud-native-java/&#34;&gt;Cloud Native Java&lt;/a&gt; by Josh Long and Kenny Bastani.&lt;/p&gt;
&lt;p&gt;In March 2018, with the hope that &lt;code&gt;Bring the world equal opportunities&lt;/code&gt; and &lt;code&gt;Building a Financial Cloud Native Infrastructure&lt;/code&gt;, I joined the &lt;a href=&#34;http://antfin.com&#34;&gt;Ant Group&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;servicemesher-community&#34;&gt;ServiceMesher Community&lt;/h2&gt;
&lt;p&gt;By the time of May 2018, I start to organize the &lt;a href=&#34;http://www.servicemesher.com&#34;&gt;ServiceMesher&lt;/a&gt; community.&lt;/p&gt;
&lt;p&gt;In the last few months, we work with other open source communities in China, such as &lt;a href=&#34;http://www.k8smeetup.com&#34;&gt;k8smeetup&lt;/a&gt;, &lt;a href=&#34;http://shardingjdbc.io/&#34;&gt;Sharding-Sphere&lt;/a&gt;, &lt;a href=&#34;http://skywalking.apache.org/&#34;&gt;Apache SkyWalking&lt;/a&gt;. Our community has grown to have 1,700 members and two round meetups in &lt;a href=&#34;http://www.servicemesher.com/blog/hangzhou-meetup-20180630/&#34;&gt;Hangzhou&lt;/a&gt; and &lt;a href=&#34;http://www.servicemesher.com/blog/beijing-meetup-20180729/&#34;&gt;Beijing&lt;/a&gt; till now.&lt;/p&gt;
&lt;p&gt;More than 300 people participated in the scene and more than 20,000 people watched it live by &lt;a href=&#34;http://www.itdks.com/eventlist/detail/2311&#34;&gt;IT大咖说&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id=&#34;future&#34;&gt;Future&lt;/h2&gt;
&lt;p&gt;Here are some hopes of mine:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Open source culture become popular in China&lt;/li&gt;
&lt;li&gt;More and more people would like to be involved in open source projects&lt;/li&gt;
&lt;li&gt;Host one open source project into the CNCF&lt;/li&gt;
&lt;li&gt;A book related to Cloud Native or Service Mesh&lt;/li&gt;
&lt;li&gt;Strengthen cultural exchanges between China and the global&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Finally, welcome to China for traveling or share your topic with us on Cloud Native, and in the mean while we will share our experience on large scale web apps to the world. Hope to hear your voice!&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>High Level Cloud Native From Kevin Hoffman</title>
      <link>https://jimmysong.io/en/blog/high-level-cloud-native-from-kevin-hoffman/</link>
      <pubDate>Fri, 15 Sep 2017 20:32:47 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/high-level-cloud-native-from-kevin-hoffman/</guid>
      <description>
        
        
        &lt;p&gt;Kevin Hoffman(From Capital One, twitter &lt;a href=&#34;https://twitter.com/KevinHoffman&#34;&gt;@KevinHoffman&lt;/a&gt;) was making a speech on &lt;em&gt;TalkingData T11 Smart Data Summit&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;He addressed that &lt;strong&gt;15 Factors of Cloud Native&lt;/strong&gt; which based on Heroku&#39;s original &lt;a href=&#34;https://12factor.net&#34;&gt;Twelve-Factor App&lt;/a&gt;, but he add more 3 another factors on it.&lt;/p&gt;
&lt;p&gt;Let&#39;s have a look at the 15 factors of Cloud Native.&lt;/p&gt;
&lt;h2 id=&#34;1-one-codebase-one-app&#34;&gt;1. One codebase, one App&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Single version-controlled codebase, many deploys&lt;/li&gt;
&lt;li&gt;Multiple apps should not share code
&lt;ul&gt;
&lt;li&gt;Microservices need separate release schedules&lt;/li&gt;
&lt;li&gt;Upgrade, deploy one without impacting others&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Tie build and deploy pipelines to single codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-api-first&#34;&gt;2. API first&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Service ecosystem requires a contract
&lt;ul&gt;
&lt;li&gt;Public API&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Multiple teams on different schedulers
&lt;ul&gt;
&lt;li&gt;Code to contract/API, not code dependencies&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use well-documented contract standards
&lt;ul&gt;
&lt;li&gt;Protobuf IDL, Swagger, Apiary, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;API First != REST first
&lt;ul&gt;
&lt;li&gt;RPC can be more appropriate in some situations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-dependency-management&#34;&gt;3. Dependency Management&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Explicitly declare dependencies&lt;/li&gt;
&lt;li&gt;Include all dependencies with app release&lt;/li&gt;
&lt;li&gt;Create immutable build artifact (e.g. docker image)&lt;/li&gt;
&lt;li&gt;Rely on smallest docker image
&lt;ul&gt;
&lt;li&gt;Base on scratch if possible&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;App cannot rely on host for system tools or libraries&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-design-build-release-run&#34;&gt;4. Design, Build, Release, Run&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Design part of iterative cycle
&lt;ul&gt;
&lt;li&gt;Agile doesn’t mean random or undesigned&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Mature CI/CD pipeline and teams
&lt;ul&gt;
&lt;li&gt;Design to production in days not months&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Build immutable artifacts&lt;/li&gt;
&lt;li&gt;Release automatically deploys to environment
&lt;ul&gt;
&lt;li&gt;Environments contains config, not release artifact&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5-configuration-credentials-code&#34;&gt;5. Configuration, Credentials, Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;3 Cs&amp;rdquo; volatile substances that explode when combinded&lt;/li&gt;
&lt;li&gt;Password in a config file is as bad as password in code&lt;/li&gt;
&lt;li&gt;App must accept &amp;ldquo;3 Cs&amp;rdquo; from &lt;strong&gt;environment&lt;/strong&gt; and only use harmless defaults&lt;/li&gt;
&lt;li&gt;Test - Could you expose code on Github and not reveal passwords, URLs, credentials?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;6-logs&#34;&gt;6. Logs&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Emit formatted logs to stdout&lt;/li&gt;
&lt;li&gt;Code should not know about destination or purpose of log emissions&lt;/li&gt;
&lt;li&gt;Use downstream log aggregator
&lt;ul&gt;
&lt;li&gt;collect, store, process, expose logs&lt;/li&gt;
&lt;li&gt;ELK, Splunk, Sumo, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use &lt;strong&gt;structured&lt;/strong&gt; logs to allow query and analysis
&lt;ul&gt;
&lt;li&gt;JSON, csv, KV, etc&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Logs are not metrics&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;7-disposability&#34;&gt;7. Disposability&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;App must start as quickly as possible&lt;/li&gt;
&lt;li&gt;App must stop quickly and gracefully&lt;/li&gt;
&lt;li&gt;Processes start and stop all the time in the cloud&lt;/li&gt;
&lt;li&gt;Every scale up/down disposes of processes&lt;/li&gt;
&lt;li&gt;Slow dispose == slow scale&lt;/li&gt;
&lt;li&gt;Slow dispose or startup can cause availability gaps&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;8-backing-services&#34;&gt;8. Backing Services&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Assume all resources supplied by backingservices&lt;/li&gt;
&lt;li&gt;Cannotassume mutable file system
&lt;ul&gt;
&lt;li&gt;“Disk as a Service” (e.g. S3, virtual mounts, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Every backing service is bound resource
&lt;ul&gt;
&lt;li&gt;URL, credentials, etc-&amp;gt; environment config&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Host does not satisfy NFRs
&lt;ul&gt;
&lt;li&gt;Backing services and cloud infrastructure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;9-environment-parity&#34;&gt;9. Environment Parity&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;“Works on my machine”
&lt;ul&gt;
&lt;li&gt;Cloud-native anti-pattern. Must &lt;strong&gt;work everywhere&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Every commit is candidate for deployment&lt;/li&gt;
&lt;li&gt;Automated acceptance tests
&lt;ul&gt;
&lt;li&gt;Provide no confidence if environments don’t match&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;10-administrative-processes&#34;&gt;10. Administrative Processes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Database migrations&lt;/li&gt;
&lt;li&gt;Run-once scripts or jobs&lt;/li&gt;
&lt;li&gt;Avoid using for batch operations, consider instead:
&lt;ul&gt;
&lt;li&gt;Event sourcing&lt;/li&gt;
&lt;li&gt;Schedulers&lt;/li&gt;
&lt;li&gt;Triggers from queues, etc&lt;/li&gt;
&lt;li&gt;Lambdas/functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;11-port-binding&#34;&gt;11. Port Binding&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;In cloud, infrastructure determines port&lt;/li&gt;
&lt;li&gt;App must accept port assigned by platform&lt;/li&gt;
&lt;li&gt;Containers have internal/external ports
&lt;ul&gt;
&lt;li&gt;App design must embrace this&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Never use reserved ports&lt;/li&gt;
&lt;li&gt;Beware of container “host mode” networking&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;12-stateless-processes&#34;&gt;12. Stateless Processes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;What is stateless?&lt;/li&gt;
&lt;li&gt;Long-term state handled by a backing service&lt;/li&gt;
&lt;li&gt;In-memory state lives onlyas long as request&lt;/li&gt;
&lt;li&gt;Requests from same client routed to different instances
&lt;ul&gt;
&lt;li&gt;“Sticky sessions” cloud native anti-pattern&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;13-concurency&#34;&gt;13. Concurency&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Scale horizontally using the process model&lt;/li&gt;
&lt;li&gt;Build disposable, stateless, share-nothing processes&lt;/li&gt;
&lt;li&gt;Avoid adding CPU/RAM to increase scale/throughput&lt;/li&gt;
&lt;li&gt;Where possible, let platform/libraries do threading
&lt;ul&gt;
&lt;li&gt;Many single-threaded services &amp;gt; 1 multi-threaded monolith&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;14-telemetry&#34;&gt;14. Telemetry&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Monitor apps in the cloud like satellite in orbit&lt;/li&gt;
&lt;li&gt;No tether, no live debugger&lt;/li&gt;
&lt;li&gt;Application Perf Monitoring (APM)&lt;/li&gt;
&lt;li&gt;Domain Telemetry&lt;/li&gt;
&lt;li&gt;Health and system logs&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;15-authentication--authorization&#34;&gt;15. Authentication &amp;amp; Authorization&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Security should never be an afterthought&lt;/li&gt;
&lt;li&gt;Auth should be explicit, documented decision
&lt;ul&gt;
&lt;li&gt;Even if anonymous access is allowed&lt;/li&gt;
&lt;li&gt;Don’t allow anonymous access&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bearer tokens/OAuth/OIDC best practices&lt;/li&gt;
&lt;li&gt;Audit all attempts to access&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;migrating-monoliths-to-the-cloud&#34;&gt;Migrating Monoliths to the Cloud&lt;/h2&gt;
&lt;p&gt;After this 15 factors, he also gave us some tips about how to &lt;strong&gt;migrate monoliths to the Cloud&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make a rule - stop adding to the monolith
&lt;ul&gt;
&lt;li&gt;All new code must be cloud native&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Prioritize features
&lt;ul&gt;
&lt;li&gt;Where will you get most benefit from cloud native?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Come up with a plan
&lt;ul&gt;
&lt;li&gt;Decompose monolith over time&lt;/li&gt;
&lt;li&gt;Fast, agile iterations toward ultimate goal&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Use multiple strategies and patterns&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;go---the-best-language-for-building-cloud-native-app&#34;&gt;Go - the Best Language for Building Cloud Native App&lt;/h2&gt;
&lt;p&gt;At last, he advise us the programming language Go is the best language to build Cloud Native applications for these reasons below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lightweight&lt;/li&gt;
&lt;li&gt;Easily learning curve&lt;/li&gt;
&lt;li&gt;Compiles to native binaries&lt;/li&gt;
&lt;li&gt;Very fast&lt;/li&gt;
&lt;li&gt;Large, thriving, engaged community
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://gopherize.me&#34;&gt;http://gopherize.me&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kevin also wrote a book &lt;strong&gt;Cloud Native Go&lt;/strong&gt; to show how to &lt;strong&gt;Building Web Applications and Microservices for the Cloud with Go and React&lt;/strong&gt;. This book has been translated to Chinese by four guys from TalkingData with ❤️. 《Cloud Native Go 构建基于Go和React的云原生Web应用与微服务》published by PHEI publisher house. See the website I built for this book &lt;a href=&#34;https://jimmysong.io/cloud-native-go/&#34;&gt;https://jimmysong.io/cloud-native-go/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Kevin was signing his name on the book&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/jimmysong/image/upload/images/kevin-hoffman-siging-on-the-book.jpg&#34; alt=&#34;kevin siging on the book&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is his first visit to China, as a main translator of this book I an honored to be with him to take this photo.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://res.cloudinary.com/jimmysong/image/upload/images/kevin-hoffman-with-me.jpg&#34; alt=&#34;kevin hoffman with me&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
