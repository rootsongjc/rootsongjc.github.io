<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song - Cloud Native | Open Source | Community – cloud native</title>
    <link>https://jimmysong.io/en/tags/cloud-native/</link>
    <description>Recent content in cloud native on Jimmy Song - Cloud Native | Open Source | Community</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2021 Jimmy Song All Right Reserved;&lt;/br&gt; Powerd by Hugo with [educenter](https://github.com/themefisher/educenter-hugo) theme</copyright>
    <lastBuildDate>Fri, 17 Dec 2021 16:43:27 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/en/tags/cloud-native/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>The debate in the community about Istio and service mesh</title>
      <link>https://jimmysong.io/en/blog/the-debate-in-the-community-about-istio-and-service-mesh/</link>
      <pubDate>Fri, 17 Dec 2021 16:43:27 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/the-debate-in-the-community-about-istio-and-service-mesh/</guid>
      <description>
        
        
        &lt;p&gt;You can use Istio to do &lt;a href=&#34;https://www.tetrate.io/blog/multicluster-management-with-kubernetes-and-istio/&#34;&gt;multi-cluster management&lt;/a&gt;, &lt;a href=&#34;https://www.tetrate.io/blog/istio-servicemesh-api-gateway/&#34;&gt;API Gateway&lt;/a&gt;, and manage applications on Kubernetes or &lt;a href=&#34;https://www.tetrate.io/blog/istio-18-a-virtual-machine-integration-odyssey/&#34;&gt;virtual machines&lt;/a&gt;. In my &lt;a href=&#34;https://www.tetrate.io/blog/why-is-service-mesh-a-necessary-part-of-cloud-native/&#34;&gt;last blog&lt;/a&gt;, I talked about how service mesh is an integral part of cloud native applications. However, building infrastructure can be a big deal. There is no shortage of debate in the community about the practicability of service mesh and Istio– here’s a list of common questions and concerns, and how to address them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is anyone using Istio in production?&lt;/li&gt;
&lt;li&gt;What is the impact on application performance due to the many resources consumed by injecting sidecar into the pod?&lt;/li&gt;
&lt;li&gt;Istio supports a limited number of protocols; is it scalable?&lt;/li&gt;
&lt;li&gt;Will Istio be manageable? – Or is it too complex, old services too costly to migrate, and the learning curve too steep?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will answer each of these questions below.&lt;/p&gt;
&lt;h3 id=&#34;istio-is-architecturally-stable-production-ready-and-ecologically-emerging&#34;&gt;Istio is architecturally stable, production-ready, and ecologically emerging&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://www.tetrate.io/blog/istio-wasm-extensions-and-ecosystem/&#34;&gt;Istio 1.12&lt;/a&gt; was just released in November – and has evolved significantly since the explosion of service mesh in 2018 (the year Istio co-founders established Tetrate). Istio has a large community of providers and &lt;a href=&#34;https://istio.io/latest/about/case-studies/&#34;&gt;users&lt;/a&gt;.[ ](&lt;a href=&#34;https://istio.io/latest/about/case-studies/)The&#34;&gt;https://istio.io/latest/about/case-studies/)The&lt;/a&gt; Istio SIG of Cloud Native Community has held eight&lt;a href=&#34;https://cloudnative.to/sig-istio/big-talk/overview.html&#34;&gt; Istio Big Talk&lt;/a&gt;, with Baidu, Tencent, NetEase, Xiaohongshu, and Xiaodian Technology sharing their Istio practices. According to &lt;a href=&#34;https://www.cncf.io/wp-content/uploads/2020/11/CNCF_Survey_Report_2020.pdf&#34;&gt;CNCF Survey Report 2020&lt;/a&gt;, about 50% of the companies surveyed are using a service mesh in production or planning to in the next year, and about half (47%) of organizations using a service mesh in production are using Istio.&lt;/p&gt;
&lt;p&gt;Many companies have developed extensions or plugins for Istio, such as Ant, NetEase, eBay, and Airbnb. Istio’s architecture has been stable since the 1.5 release, and the release cycle is fixed quarterly, with the current project’s main task being Day-2 Operations.&lt;/p&gt;
&lt;p&gt;The Istio community has also hosted various events, with the first IstioCon in March 2021, the Istio Meetup China in Beijing in July, and the Service Mesh Summit 2022 in Shanghai in January 2022.&lt;/p&gt;
&lt;p&gt;So we can say that the Istio architecture is stable and production-ready, and the ecosystem is budding.&lt;/p&gt;
&lt;h3 id=&#34;the-impact-of-service-mesh-on-application-performance&#34;&gt;The impact of service mesh on application performance&lt;/h3&gt;
&lt;p&gt;A service mesh uses iptables to do traffic hijacking by default to be transparent to applications. When the number of services is large, there are a lot of iptables rules that affect network performance. You can use techniques like&lt;a href=&#34;https://cloudnative.to/blog/how-ebpf-streamlines-the-service-mesh/&#34;&gt; eBPF&lt;/a&gt; to provide application performance, but the method requires a high version of the operating system kernel, which few enterprises can achieve.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;008i3skNly1gxgyfcfm5oj30sg0djmxt.jpg&#34; alt=&#34;Istio DNS&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the early days, Istio distributed the routing information of all services in the mesh to all proxy sidecars, which caused&lt;a href=&#34;https://istio.io/latest/docs/reference/config/networking/sidecar/&#34;&gt; sidecar&lt;/a&gt;s to take up a lot of resources.&lt;a href=&#34;https://github.com/aeraki-framework/aeraki&#34;&gt; Aeraki&lt;/a&gt; and&lt;a href=&#34;https://github.com/slime-io/slime&#34;&gt; Slime&lt;/a&gt; can achieve configuration lazy loading. We will introduce these two open-source projects in the Istio open-source ecosystem.&lt;/p&gt;
&lt;p&gt;Finally, there is a problem related to Sidecar proxy operation and maintenance: upgrading all Envoy proxies while ensuring constant traffic. A solution is using the&lt;a href=&#34;https://xie.infoq.cn/article/23ae6d3f0d0260b4797a708a0&#34;&gt; SidecarSet&lt;/a&gt; resource in the open-source project&lt;a href=&#34;https://github.com/openkruise/kruise&#34;&gt; OpenKruise.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The resource consumption and network latency associated with the introduction of Sidecar are also within reasonable limits, as you can see from the&lt;a href=&#34;https://istio.io/latest/zh/blog/2019/performance-best-practices/&#34;&gt; service mesh benchmark performance tests&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;extending-the-istio-service-mesh&#34;&gt;Extending the Istio service mesh&lt;/h3&gt;
&lt;p&gt;The next question is about extending the Istio service mesh. The current solution given by the Istio community is to use &lt;a href=&#34;https://www.tetrate.io/blog/istio-wasm-extensions-and-ecosystem/&#34;&gt;WebAssembly&lt;/a&gt;, an extension that is still relatively little used in production by now and has performance concerns. Most of the answers I’ve observed are CRDs that build a service mesh management plane based on Istio.&lt;/p&gt;
&lt;p&gt;Also, making Istio support heterogeneous environments for all workloads, such as virtual machines and containers, is in strong demand for end-users. It allows them to migrate applications from traditional loads to cloud native easily. Finally, hybrid cloud traffic management for multiple clusters and meshes is a more advanced requirement.&lt;/p&gt;
&lt;h3 id=&#34;steep-learning-curve&#34;&gt;Steep learning curve&lt;/h3&gt;
&lt;p&gt;Many people complain that Istio has too little learning material. Istio has been open source for four years, and there are a lot of learning resources now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/&#34;&gt;Istio Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://events.istio.io/istiocon-2021/&#34;&gt;IstioCon 2021&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tetratelabs/istio-weekly&#34;&gt;Istio Big Talk/Istio Weekly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cloudnative.to/sig-istio/&#34;&gt;Cloud Native Community Istio SIG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academy.tetrate.io/courses/istio-fundamentals&#34;&gt;Istio Fundamentals Course&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://academy.tetrate.io/courses/certified-istio-administrator&#34;&gt;Certified Istio Administrator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yes, Istio is complex, but it’s been getting more and more manageable with every release. In my next blog, I will introduce you to two open source projects that extend Istio and give you some insight into what’s going on in the Istio community.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Service Mesh - an integral part of cloud-native applications</title>
      <link>https://jimmysong.io/en/blog/service-mesh-an-integral-part-of-cloud-native-apps/</link>
      <pubDate>Sun, 12 Dec 2021 16:43:27 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/service-mesh-an-integral-part-of-cloud-native-apps/</guid>
      <description>
        
        
        &lt;p&gt;If you don’t know what Istio is, you can read my previous articles below:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tetrate.io/blog/what-is-istio-and-why-does-kubernetes-need-it/&#34;&gt;What Is Istio and Why Does Kubernetes Need it?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tetrate.io/blog/why-do-you-need-istio-when-you-already-have-kubernetes/&#34;&gt;Why do you need Istio when you already have Kubernetes?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This article will explore the relationship between service mesh and cloud native.&lt;/p&gt;
&lt;h3 id=&#34;service-mesh--the-product-of-the-container-orchestration-war&#34;&gt;Service mesh – the product of the container orchestration war&lt;/h3&gt;
&lt;p&gt;If you’ve been following the cloud-native space since its early days, you’ll remember the container orchestration wars of 2015 to 2017. Kubernetes won the container wars in 2017, the idea of microservices had taken hold, and the trend toward containerization was unstoppable. Kubernetes architecture matured and slowly became boring, and service mesh technologies, represented by Linkerd and Istio, entered the CNCF-defined cloud-native critical technologies on the horizon.&lt;/p&gt;
&lt;p&gt;Kubernetes was designed with the concept of cloud-native in mind. A critical idea in cloud-native is the architectural design of microservices. When a single application is split into microservices, how can microservices be managed to ensure the SLA of the service as the number of services increases? The service mesh was born to solve this problem at the architectural level, free programmers’ creativity, and avoid tedious service discovery, monitoring, distributed tracing, and other matters.&lt;/p&gt;
&lt;p&gt;The service mesh takes the standard functionality of microservices down to the infrastructure layer, allowing developers to focus more on business logic and thus speed up service delivery, which is consistent with the whole idea of cloud-native. You no longer need to integrate bulky SDKs in your application, develop and maintain SDKs for different languages, and just use the service mesh for Day 2 operations after the application is deployed.&lt;/p&gt;
&lt;p&gt;The service mesh is regarded as the next generation of microservices. In the diagram, we can see that many of the concerns of microservices overlap with the functionality of Kubernetes. Kubernetes focuses on the application lifecycle, managing resources and deployments with little control over services. The service mesh fills this gap. The service mesh can connect, control, observe and protect microservices.&lt;/p&gt;
&lt;h3 id=&#34;kubernetes-vs-xds-vs-istio&#34;&gt;&lt;strong&gt;Kubernetes vs. xDS vs. Istio&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;This diagram shows the layered architecture of Kubernetes and Istio.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;008i3skNly1gxgxss9mamj30n90d73zs.jpg&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;The diagram indicates that the kube-proxy settings are global and cannot be controlled at a granular level for each service. All Kubernetes can do is topology-aware routing, routing traffic closer to the Pod, and setting network policies in and out of the Pod.&lt;/p&gt;
&lt;p&gt;In contrast, the service mesh takes traffic control out of the service layer in Kubernetes through sidecar proxies, injects proxies into each Pod, and manipulates these distributed proxies through a control plane. It allows for more excellent resiliency.&lt;/p&gt;
&lt;p&gt;Kube-proxy implements traffic load balancing between multiple pod instances of a Kubernetes service. But how do you finely control the traffic between these services — such as dividing the traffic by percentage to different application versions (which are all part of the same service, but on other deployments), or doing canary releases and blue-green releases?&lt;/p&gt;
&lt;p&gt;The Kubernetes community gives a way to do canary releases using Deployment, assigning different pods to deployed services by modifying the pod’s label.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;008i3skNly1gxgxsswmoij30sg0kl76r.jpg&#34; alt=&#34;Envoy Architecture&#34;&gt;&lt;/p&gt;
&lt;p&gt;Currently, the most popular open-source implementation of service mesh in the world is Istio. From the &lt;a href=&#34;https://www.cncf.io/wp-content/uploads/2020/11/CNCF_Survey_Report_2020.pdf&#34;&gt;CNCF Survey Report 2020&lt;/a&gt;, we know that Istio is the most used service mesh in production today. Many companies have built their service mesh based on Istio, such as Ant, Airbnb, eBay, NetEase, Tencent, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;008i3skNly1gxgxstgg4qj30sg0gg0ts.jpg&#34; alt=&#34;CNCF Survey Report 2020&#34;&gt;&lt;/p&gt;
&lt;p&gt;Figure from &lt;a href=&#34;https://www.cncf.io/wp-content/uploads/2020/11/CNCF_Survey_Report_2020.pdf&#34;&gt;CNCF Survey Report 2020&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Istio is developed based on Envoy, which has been used by default as its distributed proxy since the first day it was open-sourced. Envoy pioneered the creation of the xDS protocol for distributed gateway configuration, greatly simplifying the configuration of large-scale distributed networks. Ant Group open source MOSN also supported xDS In 2019. Envoy was also one of the first projects to graduate from CNCF, tested by large-scale production applications.&lt;/p&gt;
&lt;h3 id=&#34;service-mesh--the-cloud-native-networking-infrastructure&#34;&gt;Service mesh – the cloud-native networking infrastructure&lt;/h3&gt;
&lt;p&gt;With the above comparison between Kubernetes and service mesh in mind, we can see the place of service mesh in the cloud-native application architecture. That is, building a cloud-native network infrastructure specifically provides:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Traffic management: controlling the flow of traffic and API calls between services, making calls more reliable, and enhancing network robustness in different environments.&lt;/li&gt;
&lt;li&gt;Observability: understanding the dependencies between services and the nature and flow of traffic between them provides the ability to identify problems quickly.&lt;/li&gt;
&lt;li&gt;Policy enforcement: controlling access policies between services by configuring the mesh rather than by changing the code.&lt;/li&gt;
&lt;li&gt;Service Identification and Security: providing service identifiability and security protection in the mesh.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
