
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song – Sidecar</title>
    <link>https://jimmysong.io/en/tags/sidecar/</link>
    <description>Recent content in Sidecar on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>Jimmy Song</managingEditor>
    <webMaster>Jimmy Song</webMaster>
    
      <follow_challenge>
        <feedId>61582075856402432</feedId>
        <userId>59800919738273792</userId>
      </follow_challenge>
    
    
    <lastBuildDate>Thu, 12 Dec 2024 12:17:21 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/en/tags/sidecar/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
                                                         
    
                                                   
                           
    <item>
      <title>Network Cost Comparison Between Istio Sidecar and Ambient Modes</title>
      <link>https://jimmysong.io/en/blog/istio-sidecar-vs-ambient-network-cost-performance/</link>
      <pubDate>Thu, 12 Dec 2024 12:17:21 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/istio-sidecar-vs-ambient-network-cost-performance/</guid>
      <description>
        
        
        &lt;p&gt;In the evolving landscape of service mesh architectures, understanding the network costs associated with different deployment modes is crucial for optimizing performance and resource efficiency. This blog post will compare the network costs of Istio’s sidecar mode and ambient mode, drawing insights from my recent article, &lt;a href=&#34;https://tetrate.io/blog/ambient-vs-sidecar/&#34; title=&#34;Which Data Plane Should I Use—Sidecar, Ambient, Cilium, or gRPC?&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Which Data Plane Should I Use—Sidecar, Ambient, Cilium, or gRPC?&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;sidecar-mode&#34;&gt;Sidecar Mode&lt;/h2&gt;
&lt;p&gt;Istio’s sidecar mode intercepts traffic between services by deploying a sidecar proxy alongside each pod. This model introduces additional network hops, which may increase latency and resource usage. However, the mode includes important optimizations like &lt;a href=&#34;https://istio.io/latest/docs/tasks/traffic-management/locality-load-balancing/&#34; title=&#34;locality-aware load balancing&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;locality-aware load balancing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Figure 1 illustrates the traffic path when Application 1 accesses Application 2 located in a different availability zone (AZ) under the sidecar model.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-vs-ambient-network-cost-performance/sidecar-mode.svg&#34; data-img=&#34;/en/blog/istio-sidecar-vs-ambient-network-cost-performance/sidecar-mode.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 1: The traffic path for Application 1 in Istio Sidecar mode to access Application 2 located in a different availability zone (AZ).&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Figure 1: The traffic path for Application 1 in Istio Sidecar mode to access Application 2 located in a different availability zone (AZ).&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h3 id=&#34;locality-awareness-in-sidecar-mode&#34;&gt;Locality Awareness in Sidecar Mode&lt;/h3&gt;
&lt;p&gt;To better understand locality management, you can use the command &lt;code&gt;istioctl proxy-config endpoint &amp;lt;pod-name[.namespace]&amp;gt; -o yaml&lt;/code&gt; to view an endpoint table containing locality information. This helps visualize how locality is managed in sidecar mode.Below is a sample output snippet showing endpoint information for the cluster &lt;code&gt;outbound|9080||reviews.default.svc.cluster.local&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- &lt;span class=&#34;nt&#34;&gt;addedViaApi&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;circuitBreakers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;thresholds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;maxConnections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4294967295&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxPendingRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4294967295&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4294967295&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxRetries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;4294967295&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;maxConnections&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxPendingRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxRequests&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1024&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;maxRetries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;priority&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HIGH&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;edsServiceName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;outbound|9080||reviews.default.svc.cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostStatuses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;socketAddress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;10.244.0.98&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;portValue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;healthStatus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;edsHealthStatus&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HEALTHY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;locality&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;us-central1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;zone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;us-central1-c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;stats&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cx_connect_fail&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cx_total&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rq_error&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rq_success&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rq_timeout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rq_total&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cx_active&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GAUGE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rq_active&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GAUGE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;weight&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Additional addresses omitted&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;address&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Additional addresses omitted&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;outbound|9080||reviews.default.svc.cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;observabilityName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;outbound|9080||reviews.default.svc.cluster.local;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This shows how the sidecar proxy in each pod manages fine-grained traffic control, including circuit breaker configurations like maxConnections, maxRequests, and maxRetries, along with traffic metrics and health status indicators. This level of detail aids in maintaining healthy, stable, and latency-efficient traffic at the pod level.&lt;/p&gt;
&lt;p&gt;In sidecar mode, each proxy prioritizes routing traffic to services within the same AZ or region, minimizing cross-AZ traffic and reducing latency and associated costs. This approach optimizes network paths, preventing cross-regional bottlenecks.&lt;/p&gt;
&lt;p&gt;Although sidecar mode can be compute-intensive, its locality-aware functionality is instrumental in maintaining efficient traffic routing, particularly in multi-region cloud deployments, where it helps minimize cross-region traffic costs.&lt;/p&gt;
&lt;h2 id=&#34;ambient-mode&#34;&gt;Ambient Mode&lt;/h2&gt;
&lt;p&gt;The following diagram shows the architecture of Istio’s ambient mode.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-vs-ambient-network-cost-performance/istio-ambient-layers.svg&#34; data-img=&#34;/en/blog/istio-sidecar-vs-ambient-network-cost-performance/istio-ambient-layers.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 2: Istio ambient mode architecture&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Figure 2: Istio ambient mode architecture&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;Istio ambient mode has two layers:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Ztunnel Layer (L3/L4 Traffic Management)&lt;/strong&gt;: In ambient mode, zTunnel manages traffic mainly at the network and transport layers, reducing overhead while ensuring basic connectivity and security requirements are met.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Waypoint Proxy Layer (L7 Traffic Management)&lt;/strong&gt;: This layer, which adds application-layer functionality like advanced routing, observability, and policy enforcement, requires optimal placement to avoid cross-AZ traffic. Waypoint proxies should be deployed within each AZ to ensure maximum performance.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;locality-awareness-in-ambient-mode&#34;&gt;Locality Awareness in Ambient Mode&lt;/h2&gt;
&lt;p&gt;In contrast to sidecar mode, ambient mode uses zTunnel and waypoint proxies for a different architectural approach. Like sidecar mode, zTunnel prioritizes routing traffic within the same AZ, limiting cross-AZ traffic and associated network costs.&lt;/p&gt;
&lt;p&gt;Figure 3 illustrates the traffic path for Application 1 accessing Application 2 in a different AZ in ambient mode.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-vs-ambient-network-cost-performance/ambient-mode.svg&#34; data-img=&#34;/en/blog/istio-sidecar-vs-ambient-network-cost-performance/ambient-mode.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 3: The traffic path for Application 1 in Istio ambient mode to access Application 2 located in a different availability zone (AZ).&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Figure 3: The traffic path for Application 1 in Istio ambient mode to access Application 2 located in a different availability zone (AZ).&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;Note: In the figure, the waypoint proxy is shown separately for demonstration purposes; in practice, it is not bound to a specific node and can be colocated with zTunnel.&lt;/p&gt;
&lt;p&gt;To gain further insights into locality in ambient mode, you can use &lt;code&gt;istioctl ztunnel-config workload -o yaml&lt;/code&gt;, which provides detailed views of zTunnel configurations and traffic distribution.&lt;/p&gt;
&lt;p&gt;Here’s an example snippet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- &lt;span class=&#34;nt&#34;&gt;applicationTunnel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canonicalName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;canonicalRevision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clusterId&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Kubernetes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hostname&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;locality&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;region&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;us-central1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;zone&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;us-central1-c&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage-v1-d5789fdfb-gmw5r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;gke-cilium-default-pool-63a77182-f699&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;HBONE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;serviceAccount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;bookinfo-productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;status&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Healthy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;trustDomain&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Kubernetes//Pod/default/productpage-v1-d5789fdfb-gmw5r&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workloadIps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;m&#34;&gt;10.28.2.14&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workloadName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage-v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workloadType&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This output demonstrates ztunnel’s locality-aware information, which centralizes traffic management for all pods on a node, including load balancing, health checks, and locality awareness.&lt;/p&gt;
&lt;h3 id=&#34;waypoint-proxies&#34;&gt;Waypoint Proxies&lt;/h3&gt;
&lt;p&gt;The waypoint proxy, however, does not automatically have AZ awareness. To optimize for cost and performance, waypoint proxies must be deployed across AZs to enable local traffic handling. Otherwise, there is a risk of additional cross-AZ traffic and costs. Additionally, once traffic reaches a waypoint proxy, original locality information may be obscured, complicating route optimization.&lt;/p&gt;
&lt;p&gt;For optimal cost and performance, waypoint proxies should be distributed within each AZ to process traffic locally. The proximity-aware communication design between ztunnel and waypoint proxies helps ensure traffic is routed to the nearest waypoint, further reducing cross-AZ costs and latency.&lt;/p&gt;
&lt;h2 id=&#34;visualizing-with-kiali-dashboard&#34;&gt;Visualizing with Kiali Dashboard&lt;/h2&gt;
&lt;p&gt;When comparing sidecar and ambient modes, visualizing locality and routing behavior with Kiali dashboard can help illustrate ambient mode’s complexity. Kiali provides a graphical view of traffic paths in different modes, aiding in understanding ambient mode’s operational intricacies.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-vs-ambient-network-cost-performance/kiali.webp&#34; data-img=&#34;/en/blog/istio-sidecar-vs-ambient-network-cost-performance/kiali.webp&#34; data-width=&#34;3644&#34; data-height=&#34;2090&#34; alt=&#34;image&#34; data-caption=&#34;Kiali UI&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Kiali UI&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In comparing the network costs of Istio’s sidecar and ambient modes, both architectures support locality-aware routing to minimize cross-AZ traffic. Sidecar mode offers more comprehensive locality management at each proxy, while ambient mode requires careful waypoint proxy deployment to avoid extra costs. Additionally, ambient mode’s sub-modes (with or without waypoint proxies) impact network cost and performance in distinct ways. For a deeper dive into the four primary service mesh data plane deployment modes, I encourage you to read the full article &lt;a href=&#34;https://tetrate.io/blog/ambient-vs-sidecar/&#34; title=&#34;here&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/istio-ambient-cost-comparison/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>Service Mesh Data Plane Deployment Modes Explanation</title>
      <link>https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/</link>
      <pubDate>Fri, 13 Sep 2024 00:00:00 +0000</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/</guid>
      <description>
        
        
        &lt;p&gt;This article will introduce you to the four plane deployment modes of the Istio service mesh, analyzing their strengths and weaknesses to offer suggestions based on their performance, reliability, and security.&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-service-mesh&#34;&gt;What is a Service Mesh?&lt;/h2&gt;
&lt;p&gt;A service mesh is an infrastructure layer that typically employs application proxies to facilitate various functionalities. Taking Istio as an example, it enables users to programmatically manage traffic aware of applications, ensure robust observability, and maintain solid security within the network. Istio ensures resilience in cloud-native and distributed systems, enabling modern enterprises to maintain their workloads across various platforms while ensuring connectivity and protection. Its capabilities include zero-trust security, policy management, access control for security and governance, as well as canary deployments, A/B testing, load balancing, and fault recovery for network functions. It also provides observability across all network traffic. Istio is unrestricted by any single cluster, network, or runtime and can incorporate services running on Kubernetes or virtual machines within a single mesh, whether across multi-cloud, hybrid, or on-premises environments. Its design is scalable and supported by an extensive ecosystem.&lt;/p&gt;
&lt;p&gt;The architecture of a service mesh is divided into the control plane and the data plane. In the case of Istio, &lt;code&gt;istiod&lt;/code&gt; acts as the control plane, while the data plane offers two deployment modes: sidecar or ambient.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/service-mesh.svg&#34; data-img=&#34;/en/blog/service-mesh-data-plane-deployment-modes/service-mesh.svg&#34; alt=&#34;image&#34; data-caption=&#34;Architecture of the Istio Service Mesh (Source: &amp;lt;a href=&amp;#34;https://istio.io/latest/about/service-mesh/&amp;#34; title=&amp;#34;istio.io&amp;#34; target=&amp;#34;_blank&amp;#34; rel=&amp;#34;noopener&amp;#34;&amp;gt;istio.io&amp;lt;/a&amp;gt;)&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Architecture of the Istio Service Mesh (Source: &lt;a href=&#34;https://istio.io/latest/about/service-mesh/&#34; title=&#34;istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;istio.io&lt;/a&gt;)&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;In fact, there are more than these two modes for deploying the service mesh data plane. Including Istio&amp;rsquo;s &lt;a href=&#34;https://istio.io/latest/blog/2021/proxyless-grpc/&#34; title=&#34;proxyless gRPC service mesh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;proxyless gRPC service mesh&lt;/a&gt; and the &lt;a href=&#34;https://cilium.io/use-cases/service-mesh/&#34; title=&#34;Cilium service mesh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium service mesh&lt;/a&gt;, there are a total of four deployment modes.&lt;/p&gt;
&lt;h2 id=&#34;data-plane-deployment-modes&#34;&gt;Data Plane Deployment Modes&lt;/h2&gt;
&lt;p&gt;The following table compares the service mesh data plane deployment modes across several dimensions.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Data plane modes&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Platform security&lt;/strong&gt; Threat assessment, risk&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Resource Efficiency&lt;/strong&gt; – infra/resource consumption, etc.&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Manageability&lt;/strong&gt; – upgrades, vulnerabilities, etc.&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;Performance&lt;/strong&gt; – Latency, etc.&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Sidecar mode:&lt;/strong&gt; L4 and L7 Proxy per Service Instance&lt;/td&gt;
          &lt;td&gt;High security, as each service instance has an independent proxy, reducing the attack surface. Risk management depends on control plane configuration.&lt;/td&gt;
          &lt;td&gt;Higher resource consumption, as each instance requires an independent proxy.&lt;/td&gt;
          &lt;td&gt;Centralized management and configuration required, upgrades are relatively complex, but can be simplified through the control plane.&lt;/td&gt;
          &lt;td&gt;May increase latency as requests need to be forwarded through the proxy.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Ambient mode:&lt;/strong&gt; Shared L4 – L7 per Service Model&lt;/td&gt;
          &lt;td&gt;Designed for security with ztunnel for local routing. However, shared proxies can introduce risks, and its overall security maturity is still evolving.&lt;/td&gt;
          &lt;td&gt;Higher efficiency as multiple services share the same proxy.&lt;/td&gt;
          &lt;td&gt;Relatively simple management, but may face vulnerabilities due to the shared proxy.&lt;/td&gt;
          &lt;td&gt;Good performance with local routing, but may incur cross-AZ costs with waypoint proxies.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Cilium mesh mode:&lt;/strong&gt; Shared L4 and L7 Model&lt;/td&gt;
          &lt;td&gt;Moderate security with a focus on eBPF and fine-grained access control. However, there are known issues with identity and trust models.&lt;/td&gt;
          &lt;td&gt;Efficiency due to kernel-level processing, reducing infrastructure expenses.&lt;/td&gt;
          &lt;td&gt;Management is more complex, needing to handle configurations for multiple services.&lt;/td&gt;
          &lt;td&gt;Variable performance; certain scenarios might introduce significant latency.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;gRPC mode:&lt;/strong&gt; L4 and L7 Part of the Application Model&lt;/td&gt;
          &lt;td&gt;While gRPC integrates proxy functions within the application, theoretically reducing the attack surface, the application&amp;rsquo;s complexity and variability can actually expand it. The security of the gRPC mode depends on specific use cases and needs careful evaluation of potential threats and attack surfaces.&lt;/td&gt;
          &lt;td&gt;Higher efficiency because the proxy is implemented inline in the same process as the app.&lt;/td&gt;
          &lt;td&gt;Complex management, regular updates and maintenance of application layer proxy required.&lt;/td&gt;
          &lt;td&gt;Superior performance with low latency, suitable for real-time applications.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;figcaption class=&#34;text-center&#34;&gt;
    
    Comparison of Four Service Mesh Deployment Modes
    
&lt;/figcaption&gt;

&lt;p&gt;You can see a more visual comparison of these four modes in terms of cost and security from the diagram below:&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/istio-data-plane-deployment-modes.svg&#34; data-img=&#34;/en/blog/service-mesh-data-plane-deployment-modes/istio-data-plane-deployment-modes.svg&#34; alt=&#34;image&#34; data-caption=&#34;Comparison of Service Mesh Deployment Modes&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Comparison of Service Mesh Deployment Modes&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;These four deployment modes are differentiated based on how proxies are associated with service instances.&lt;/p&gt;
&lt;p&gt;The following diagram illustrates potential locations for proxies in different deployment modes of the service mesh data plane.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/overview.svg&#34; data-img=&#34;/en/blog/service-mesh-data-plane-deployment-modes/overview.svg&#34; alt=&#34;image&#34; data-caption=&#34;Potential Locations of Proxies in the Data Plane&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Potential Locations of Proxies in the Data Plane&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sidecar Mode&lt;/strong&gt;: The proxy is in the same Pod as the application container.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ambient Mode&lt;/strong&gt;: The L4 proxy is on the same node as the application container, while the L7 proxy may not be on the same node.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cilium Mode&lt;/strong&gt;: The L4 and L7 proxies are combined and located on the same node as the application container.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC Mode&lt;/strong&gt;: The gRPC framework is integrated into the application and deployed within the same container.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sidecar-mode-l4-and-l7-proxy-per-service-instance&#34;&gt;Sidecar Mode: L4 and L7 Proxy per Service Instance&lt;/h2&gt;
&lt;p&gt;The diagram below shows the communication paths in sidecar mode where Application 1 accesses Application 2 on the same node and Application 3 across nodes.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/sidecar-mode.svg&#34; data-img=&#34;/en/blog/service-mesh-data-plane-deployment-modes/sidecar-mode.svg&#34; alt=&#34;image&#34; data-caption=&#34;Sidecar Mode: L4 and L7 Proxy per Service Instance&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Sidecar Mode: L4 and L7 Proxy per Service Instance&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;This is the most common deployment mode for service meshes and was the initial mode supported by &lt;a href=&#34;https://istio.io/&#34; title=&#34;Istio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio&lt;/a&gt;. Each service instance is accompanied by a proxy (such as &lt;a href=&#34;https://envoyproxy.io/&#34; title=&#34;Envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;), which handles all inbound and outbound network communications, including L4 and L7 layers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Advantages&lt;/strong&gt;: High security, as each service instance is isolated, reducing potential attack surfaces.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;: High resource consumption, as each service instance requires a separate proxy, increasing infrastructure costs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maturity&lt;/strong&gt;: The maturity of the Istio Sidecar mode has reached the production level. They have undergone extensive testing and are ready for use in actual environments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ambient-mode-shared-l4--l7-per-service-model&#34;&gt;Ambient Mode: Shared L4 – L7 per Service Model&lt;/h2&gt;
&lt;p&gt;The diagram below illustrates the communication paths in ambient mode where Application 1 accesses Application 2 on the same node and Application 3 across nodes.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/ambient-mode.svg&#34; data-img=&#34;/en/blog/service-mesh-data-plane-deployment-modes/ambient-mode.svg&#34; alt=&#34;image&#34; data-caption=&#34;Ambient Mode: Node-shared L4 Proxy, Service Account-shared L7 Proxy&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Ambient Mode: Node-shared L4 Proxy, Service Account-shared L7 Proxy&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;In this mode, a shared L4 proxy on each node serves all service instances on the same physical host, while each service account has a dedicated L7 proxy.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Advantages:&lt;/strong&gt; Lower costs, as the proxy is shared among multiple services.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disadvantages:&lt;/strong&gt; Although the ztunnel component is designed for security, shared proxies can introduce risks. The security maturity of this model is still evolving.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maturity&lt;/strong&gt;: The Istio ambient mode is currently in the beta stage; there are no large-scale production-level best practices yet, and it does not support multi-clusters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cilium-mesh-mode-shared-l4-and-l7-model&#34;&gt;Cilium Mesh Mode: Shared L4 and L7 Model&lt;/h2&gt;
&lt;p&gt;The diagram below displays the communication paths in Cilium mesh mode where Application 1 accesses Application 2 on the same node and Application 3 across nodes.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/cilium-mesh-mode.svg&#34; data-img=&#34;/en/blog/service-mesh-data-plane-deployment-modes/cilium-mesh-mode.svg&#34; alt=&#34;image&#34; data-caption=&#34;Cilium Mesh Mode: Shared L4 and L7 Proxies&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Cilium Mesh Mode: Shared L4 and L7 Proxies&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;This mode is a middle ground between fully independent and fully shared setups, with each node having a shared L7 proxy. However, there are known issues with identities and trust models. The Cilium service mesh, which uses eBPF, allows for network policies without a proxy through kernel programs.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Advantages&lt;/strong&gt;: Kernel-level efficiency can reduce infrastructure costs in specific scenarios.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;: Management is more complex, and certain scenarios may result in increased latency.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maturity&lt;/strong&gt;: Cilium mesh manages L4 traffic directly through eBPF and configures the Envoy proxy on each node to control L7 traffic via CRDs (such as CiliumEnvoyConfig). However, there are concerns about its security due to inconsistent identity models.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: &lt;em&gt;This model is not the data plane of Istio.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;grpc-mode-l4-and-l7-part-of-the-application-model&#34;&gt;gRPC Mode: L4 and L7 Part of the Application Model&lt;/h2&gt;
&lt;p&gt;In the gRPC mode, no external proxies are deployed; instead, proxy functions are directly integrated into the application using the RPC framework, leading to significant intrusion into the application. The service mesh control plane uses a set of discovery APIs known as xDS APIs to dynamically configure the application. The gRPC client libraries within the application provide extensive support for the xDS APIs. With this capability, the service mesh control plane can program L4 and L7 proxy functions directly within this library inside the service container.&lt;/p&gt;
&lt;p&gt;The diagram below illustrates how, in Istio’s gRPC mode, the control plane communicates with the application.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/service-mesh-data-plane-deployment-modes/grpc-mode.svg&#34; data-img=&#34;/en/blog/service-mesh-data-plane-deployment-modes/grpc-mode.svg&#34; alt=&#34;image&#34; data-caption=&#34;gRPC Mode: L4 and L7 Proxies Integrated into the Application&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;gRPC Mode: L4 and L7 Proxies Integrated into the Application&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;In this mode, when a gRPC service communicates with the control plane, a traditional Sidecar proxy is not needed; instead, a specific agent is used for initialization and communication with the control plane. This design reduces resource consumption and deployment complexity while still enabling functions such as service discovery and traffic management.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Advantages&lt;/strong&gt;: High performance, as the proxy is tightly integrated with the application, reducing network hops and additional overhead.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Disadvantages&lt;/strong&gt;: High complexity, as complex network processing functions need to be implemented within the application, which may increase development costs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security Considerations&lt;/strong&gt;: The security of this model is debated. While integrating proxy functions within the application theoretically reduces the external attack surface, the application&amp;rsquo;s diversity and complexity could expand the overall attack surface. Therefore, when considering the security of the gRPC mode, it is crucial to carefully analyze the security threat model and attack risks in specific use cases.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Maturity&lt;/strong&gt;: The gRPC mode in Istio is still in the experimental stage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;which-mode-should-i-use&#34;&gt;Which Mode Should I Use?&lt;/h2&gt;
&lt;p&gt;As previously introduced, several factors influence the choice of a service mesh data plane deployment mode:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maturity&lt;/li&gt;
&lt;li&gt;Enterprise security needs&lt;/li&gt;
&lt;li&gt;Resource constraints&lt;/li&gt;
&lt;li&gt;Performance requirements&lt;/li&gt;
&lt;li&gt;Network overhead&lt;/li&gt;
&lt;li&gt;Tolerance for management complexity&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;maturity&#34;&gt;Maturity&lt;/h3&gt;
&lt;p&gt;When considering the deployment modes of the service mesh data plane, maturity is a key factor. The maturity level of each mode affects its reliability and support in production environments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sidecar Mode&lt;/strong&gt;: This is the most mature service mesh deployment mode, widely adopted in production environments and well-supported.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ambient Mode&lt;/strong&gt;: While this mode offers some cost and performance advantages, it is still in the early stages and may lack mature best practices and broad ecosystem support.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cilium Mesh Mode&lt;/strong&gt;: As a relatively new option, it offers unique technological advantages, especially in scenarios using eBPF. However, concerns about its security model and identity management suggest it may not be as mature or reliable as other modes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC Mode&lt;/strong&gt;: Despite excellent performance, the complexity and intrusiveness of this mode mean it may require more custom development and is still in the experimental stage.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;enterprise-security-needs&#34;&gt;Enterprise Security Needs&lt;/h3&gt;
&lt;p&gt;If your business has high security requirements, such as in the financial or healthcare sectors, then the &lt;strong&gt;Sidecar Mode&lt;/strong&gt; might be the best choice. This mode provides strong security by ensuring each service instance has its own independent proxy, thus maximizing service isolation. For those exploring newer models like &lt;strong&gt;Ambient Mode&lt;/strong&gt;, it&amp;rsquo;s essential to understand that while ztunnel aims for secure local routing, the model&amp;rsquo;s overall security strategy is still evolving.&lt;/p&gt;
&lt;h3 id=&#34;resource-constraints&#34;&gt;Resource Constraints&lt;/h3&gt;
&lt;p&gt;In resource-constrained environments, deploying a separate proxy for each service instance may not be practical. In such cases, consider the &lt;strong&gt;gRPC Mode&lt;/strong&gt; or &lt;strong&gt;Ambient Mode&lt;/strong&gt;. &lt;strong&gt;gRPC Mode&lt;/strong&gt; is particularly suitable for organizations that already use gRPC extensively and are willing to handle complex networking functions internally within the application. The &lt;strong&gt;Ambient Mode&lt;/strong&gt;, on the other hand, uses a shared proxy to reduce resource consumption.&lt;/p&gt;
&lt;h3 id=&#34;performance-requirements&#34;&gt;Performance Requirements&lt;/h3&gt;
&lt;p&gt;For applications requiring high performance and low latency, the &lt;strong&gt;gRPC Mode&lt;/strong&gt; provides optimal performance because it eliminates the additional network hops introduced by traditional proxies. However, it&amp;rsquo;s important to note that the gRPC Mode is still experimental and may not support all features of Istio. Consider your service mesh functionality needs accordingly.&lt;/p&gt;
&lt;h3 id=&#34;network-overhead&#34;&gt;Network Overhead&lt;/h3&gt;
&lt;p&gt;Each data plane mode has distinct characteristics affecting network overhead. &lt;strong&gt;Sidecar mode&lt;/strong&gt;, with locality-aware routing, reduces cross-zone traffic but adds network hops, increasing latency and compute use. &lt;strong&gt;Ambient mode&lt;/strong&gt; uses ztunnels for local routing but may incur cross-AZ costs with waypoint proxies. &lt;strong&gt;Cilium mode&lt;/strong&gt; places proxies on the same node as applications, potentially reducing inter-node traffic but could introduce more latency. &lt;strong&gt;gRPC mode&lt;/strong&gt; integrates RPC framework into the application, minimizing network hops and overhead, ideal for high-performance, low-latency needs.&lt;/p&gt;
&lt;h3 id=&#34;tolerance-for-management-complexity&#34;&gt;Tolerance for Management Complexity&lt;/h3&gt;
&lt;p&gt;Management complexity is also a significant consideration when choosing a service mesh data plane mode. &lt;strong&gt;Sidecar Mode&lt;/strong&gt; and &lt;strong&gt;gRPC Mode&lt;/strong&gt; may require more complex configurations and maintenance, while the &lt;strong&gt;Ambient Mode&lt;/strong&gt; might offer a more streamlined management experience in some deployment environments. &lt;strong&gt;Cilium Mode&lt;/strong&gt; could require complex management due to its reliance on eBPF and multiple configuration points.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Choosing the right service mesh data plane deployment mode depends on specific factors including maturity, security, resource constraints, performance, and management complexity. Here’s a quick guide:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Sidecar Mode&lt;/strong&gt;: Best for high security needs, offering the most isolation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;gRPC Mode&lt;/strong&gt;: Suitable for environments with high-performance demands where gRPC is already in use.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ambient Mode&lt;/strong&gt;: Good for cost-effectiveness and lower isolation needs, but the security model is evolving.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cilium Mesh Mode&lt;/strong&gt;: Could be good for infrastructures utilizing eBPF technology, but consider security and management complexity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The best choice will align with your application requirements, security policies, and technical familiarity. It’s essential to understand each mode’s strengths and limitations to make an informed decision that balances benefits, risks, and costs.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://csrc.nist.gov/pubs/sp/800/233/ipd&#34; title=&#34;Service Mesh Proxy Models for Cloud-Native Applications&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Service Mesh Proxy Models for Cloud-Native Applications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/ambient-vs-sidecar/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>KubeCon China 2024 Recap: Leading the Frontiers of Cloud Native Technology</title>
      <link>https://jimmysong.io/en/blog/kubecon-china-2024-recap/</link>
      <pubDate>Thu, 12 Sep 2024 10:23:48 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/kubecon-china-2024-recap/</guid>
      <description>
        
        
        &lt;p&gt;This year&amp;rsquo;s &lt;a href=&#34;https://events.linuxfoundation.org/kubecon-cloudnativecon-open-source-summit-ai-dev-china/&#34; title=&#34;KubeCon China&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KubeCon China&lt;/a&gt; marked its first-ever occurrence in Hong Kong, spanning three days. As a participant and a panel moderator, I will share in this article the highlights of the conference and the in-depth discussions on service meshes and gateway technologies.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    &lt;img src=&#34;https://jimmysong.io/img/blog/kubecon-china-2024-recap/kubecon-china-2024-hall.webp&#34; data-img=&#34;https://jimmysong.io/img/blog/kubecon-china-2024-recap/kubecon-china-2024-hall.webp&#34; alt=&#34;image&#34; data-caption=&#34;KubeCon China Scene&#34;&gt;
  
  
  &lt;figcaption&gt;KubeCon China Scene&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;key-themes&#34;&gt;Key Themes&lt;/h2&gt;
&lt;p&gt;This edition of KubeCon introduced a theme on AI and developers, here are some of the focal points:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Practical Applications of Cloud Native Technologies in Industries&lt;/strong&gt;: Especially in the electric vehicle and cybersecurity sectors, such as the joint discussion by Huawei and NIO on how cloud native technologies can accelerate innovation in electric vehicles.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Power of the Kubernetes Community&lt;/strong&gt;: Detailed discussions on the influence of China&amp;rsquo;s Kubernetes community and its role in advancing regional cloud native activities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Integration of Open Source Technology and Artificial Intelligence&lt;/strong&gt;: Discussions on the advanced position of China and Hong Kong in the fields of open source and AI technologies and how these are driving regional technological innovation and development.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Latest Developments in Service Meshes and API Gateways&lt;/strong&gt;: Including updates on service mesh technologies and how they work in conjunction with Kubernetes schedulers to enhance system throughput.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;New Strategies for Supply Chain Security&lt;/strong&gt;: Focusing on the latest developments in securing supply chains, particularly practical guidelines on SLSA compliance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Multicluster Management and Edge Computing&lt;/strong&gt;: Discussions on strategies for effective management and innovation across different architectures and systems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Optimization of AI Large Model Inference Performance&lt;/strong&gt;: Discussion on performance acceleration in serverless architectures for AI large model inference and related technological advancements.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;istio-and-modern-api-gateways-exploring-the-future-of-service-meshes&#34;&gt;Istio and Modern API Gateways: Exploring the Future of Service Meshes&lt;/h2&gt;
&lt;p&gt;In a &lt;a href=&#34;https://kccncossaidevchn2024.sched.com/event/1eYY6/istio-and-modern-api-gateways-navigating-the-future-of-service-meshes-istiorejiong-apijie-daepqiu-jie-zha-jimmy-song-jianpeng-he-tetrate-jiaqi-zhang-alibaba-cloud-jintao-zhang-kong-inc-xunzhuo-liu-tencent&#34; title=&#34;roundtable discussion&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;roundtable discussion&lt;/a&gt; that I participated in with industry leaders from Tetrate, Alibaba Cloud, and Kong Inc., we delved deeply into the latest developments and integrations of Istio and API gateways.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    &lt;img src=&#34;https://jimmysong.io/img/blog/kubecon-china-2024-recap/kubecon-china-2024-panel.webp&#34; data-img=&#34;https://jimmysong.io/img/blog/kubecon-china-2024-recap/kubecon-china-2024-panel.webp&#34; alt=&#34;image&#34; data-caption=&#34;KubeCon China 2024 Istio and Modern API Gateways Panel&#34;&gt;
  
  
  &lt;figcaption&gt;KubeCon China 2024 Istio and Modern API Gateways Panel&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Innovations in Istio&lt;/strong&gt;: We discussed the latest version update of Istio (Istio 1.123) and key features such as optimizations in the Ambient mode, a new architectural choice that reduces resource consumption while enhancing performance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Practical Comparison Between Ambient and Sidecar Modes&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;When to Choose Sidecar&lt;/strong&gt;: When high isolation and detailed traffic management are required.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When to Choose Ambient&lt;/strong&gt;: When pursuing ultimate performance and resource efficiency.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Challenges in the Development of Ambient Mode&lt;/strong&gt;: Despite its advantages, Ambient mode still faces challenges in complex traffic management and multi-tenant environments.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Service Mesh Optimization Strategies&lt;/strong&gt;: Discussing methods to enhance the performance and efficiency of cloud applications through service mesh improvements.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Integration of Service Meshes and API Gateways&lt;/strong&gt;: Demonstrating how these two technologies work together to support more complex deployment and operational modes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;future-perspectives-on-istio&#34;&gt;Future Perspectives on Istio&lt;/h2&gt;
&lt;p&gt;In the &lt;a href=&#34;https://kccncossaidevchn2024.sched.com/event/1eYcG/what-is-the-future-of-service-mesh-sidecar-or-sidecarless-jie-zha-dyagsyi-wu-pi-yi-wu-zhonghu-xu-huawei&#34; title=&#34;presentation by Zhonghu Xu and Jianpeng He&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;presentation by Zhonghu Xu and Jianpeng He&lt;/a&gt;, we gained insights into the possible future directions of Istio:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dual Mode Drive&lt;/strong&gt;: Istio is likely to support both the Ambient mode and the traditional Sidecar mode simultaneously. Ambient mode suits users seeking performance and cost optimization, while the Sidecar mode will continue to support users requiring comprehensive functionalities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Support for Gateway API&lt;/strong&gt;: Istio&amp;rsquo;s support for the Gateway API provides users with more flexible routing and policy configuration options.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Application of Waypoints Strategies&lt;/strong&gt;: Waypoints need not be limited to Istio or Envoy. Using the Gateway API and GAMMA, any standard-compliant implementation can serve as a Waypoint, offering greater flexibility and scalability for service meshes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sandwich-waypoint&#34;&gt;Sandwich Waypoint&lt;/h3&gt;
&lt;p&gt;They emphasized the Sandwich Waypoint, which supports:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Traffic Redirection&lt;/strong&gt;: By setting the &lt;code&gt;istio.io/use-waypoint: {namespace}/{gateway-name}&lt;/code&gt; annotation, traffic to a target service, pod, or within a namespace can be redirected to the same Waypoint.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Waypoint Deployment&lt;/strong&gt;: Users can deploy a Waypoint by creating a Gateway object. Unlike the original implementation of Waypoint, the new deployment method will include associated services and service accounts, not just the Waypoint instance.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Routing and Policy Configuration&lt;/strong&gt;: Using the Gateway API for routing and policy configuration provides more customization options for users and providers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This represents a mode in Istio&amp;rsquo;s Ambient mode for capturing layer 7 traffic, as illustrated below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/kubecon-china-2024-recap/istio-ambient-traffic-capture.svg&#34; data-img=&#34;/en/blog/kubecon-china-2024-recap/istio-ambient-traffic-capture.svg&#34; alt=&#34;image&#34; data-caption=&#34;Sandwich Waypoint Traffic Capture&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Sandwich Waypoint Traffic Capture&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;The steps for capturing layer 7 traffic with Istio Sandwich Waypoint are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Terminate the HBONE connection via zTunnel, arriving at the Waypoint, with zTunnel responsible for decoding the HBONE protocol.&lt;/li&gt;
&lt;li&gt;Waypoint extracts destination addresses, source addresses, etc., to handle traffic and determine forwarding locations.&lt;/li&gt;
&lt;li&gt;Waypoint expands or parses the transport layer encapsulation (TLV) data, with proxies supporting TLV processing to provide additional context.&lt;/li&gt;
&lt;li&gt;Waypoint communicates with the peer zTunnel, coordinating with the server-side zTunnel to ensure correct traffic transfer.&lt;/li&gt;
&lt;li&gt;Encapsulate HBONE, sent by the server-side zTunnel to the final server destination, achieving fine-grained traffic management and routing in an Istio environment while maintaining compatibility with existing network protocols.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;cutting-edge-extensions-in-envoy-gateway&#34;&gt;Cutting-Edge Extensions in Envoy Gateway&lt;/h2&gt;
&lt;p&gt;In a &lt;a href=&#34;https://kccncossaidevchn2024.sched.com/event/1eYcX/gateway-api-and-beyond-introducing-envoy-gateways-gateway-api-extensions-jie-api-daeptao-envoyjie-zha-jie-api-huabing-zhao-tetrate&#34; title=&#34;presentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;presentation&lt;/a&gt; at KubeCon, Huabing Zhao discussed how Envoy Gateway enhances its capabilities and flexibility by extending the Kubernetes Gateway API, covering a wide range of matching and routing capabilities, new resource and policy models, and details of security policies.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Gateway API Compatibility&lt;/strong&gt;: Envoy Gateway is fully compatible with the Gateway API and offers a wide range of matching and routing options. These include HTTP host and path matching, HTTP header-based operations, weighted load balancing, and support for gRPC, UDP, and TCP routing.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Policies for Advanced Traffic Management:&lt;/strong&gt; The introduction of ClientTrafficPolicy and BackendTrafficPolicy provides users with more granular control over traffic management for both upstream and downstream connections, including features such as rate limiting, retries, load balancing, circuit breakers, and more.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enhancement of Security and Authentication&lt;/strong&gt;: The introduced SecurityPolicy supports CORS, HTTP basic authentication, OIDC, JWT authentication, and can integrate with various identity providers. It also provides detailed access control, allowing authorization based on the requester&amp;rsquo;s original IP, JWT claims, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Expanding Functionality with Custom Extensions:&lt;/strong&gt; Envoy Gateway offers support for custom extensions through WASM (WebAssembly) and external process extensions. This allows users to enhance the gateway’s functionality by integrating their own customized extensions, tailored to specific use cases and operational needs.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Future Exploration&lt;/strong&gt;: Future versions are expected to support non-Kubernetes environments deployment, optimize memory usage in the control plane, and expand authorization capabilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Through this conference, we gained insights into Istio&amp;rsquo;s Ambient mode and the developments in Envoy Gateway. The discussions on these technologies not only forecast future trends but also provided practical insights to facilitate the implementation and innovation of technologies.&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>Securing Istio: Addressing Critical Security Gaps and Best Practices</title>
      <link>https://jimmysong.io/en/blog/securing-istio-addressing-critical-security-gaps-and-best-practices/</link>
      <pubDate>Sat, 10 Aug 2024 14:09:37 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/securing-istio-addressing-critical-security-gaps-and-best-practices/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Recently, the Wiz research team released a &lt;a href=&#34;https://www.wiz.io/blog/sapwned-sap-ai-vulnerabilities-ai-security&#34; title=&#34;blog post&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;blog post&lt;/a&gt; that uncovered tenant isolation vulnerabilities in AI services, generating widespread attention. This study detailed security flaws across several AI service providers, particularly the SAP AI Core platform. Researchers were able to execute arbitrary code through legitimate AI training processes, subsequently moving laterally to take over services and gain access to customers’ private files and cloud credentials. These findings highlight the challenges that cloud services and management platforms face in ensuring isolation and sandbox environments.&lt;/p&gt;
&lt;p&gt;In this context, Istio, as a crucial service mesh solution, faces similar security issues, especially in key functionalities like sidecar injection and traffic management. This blog aims to discuss how to protect the security of the Istio service mesh and provide a comprehensive set of mitigation measures. We will also discuss how multi-layer security strategies can effectively enhance Istio&amp;rsquo;s security to address challenges mentioned in the Wiz report.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Istio primarily manages east-west traffic within Kubernetes, offering detailed traffic management features such as request routing, load balancing, and fault recovery policies. While Istio offers essential security features such as traffic encryption, authentication, and authorization, it should not be viewed as a standalone firewall solution. To maintain robust security for services within the Istio mesh, it is crucial to complement Istio&amp;rsquo;s security capabilities with additional measures from the underlying network and infrastructure, such as Container Network Interface (CNI) plugins and secure container implementations.&lt;/p&gt;
&lt;p&gt;Whether in Sidecar or Ambient mode, traffic is hijacked from application pods to data plane proxies for processing and forwarding. If application traffic is not successfully intercepted or is impersonated by a rogue application masquerading as Istio, security vulnerabilities can arise.&lt;/p&gt;
&lt;p&gt;The diagram below illustrates where security vulnerabilities due to bypassing or impersonating Istio system users might occur.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/securing-istio-addressing-critical-security-gaps-and-best-practices/bypass-sidecar-traffic-hijack.svg&#34; data-img=&#34;/en/blog/securing-istio-addressing-critical-security-gaps-and-best-practices/bypass-sidecar-traffic-hijack.svg&#34; alt=&#34;image&#34; data-caption=&#34;“Security vulnerabilities” in bypassing Istio’s traffic hijacking&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;“Security vulnerabilities” in bypassing Istio’s traffic hijacking&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;Next, we will explore specific situations where &amp;ldquo;security vulnerabilities&amp;rdquo; arise and the strategies to address them.&lt;/p&gt;
&lt;h2 id=&#34;bypassing-istio-sidecar-injection&#34;&gt;Bypassing Istio Sidecar Injection&lt;/h2&gt;
&lt;h3 id=&#34;at-the-namespace-level&#34;&gt;At the Namespace Level&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams misuse namespace labels to disable Istio Sidecar injection at the namespace level.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams abstract app deployment and restrict access to the raw Kubernetes namespace resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Use policy engines (like OPA Gatekeeper) to ensure compliance with namespace labels, and regularly review namespace configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;at-the-pod-level&#34;&gt;At the Pod Level&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams misuse Pod labels to disable Istio Sidecar injection at the Pod level.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Force all Pods to specify a UID that is not 1337.&lt;/li&gt;
&lt;li&gt;Inspect all container images to check for UID 1337 and reject those images. This inspection can be performed using an admission webhook or by a central team managing the image registry.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Employ Admission Webhooks to enforce Sidecar injection, prohibit exclusion labels, and regularly scan and audit all pods to ensure every required pod has a Sidecar injected.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bypassing-traffic-redirection-to-istio-sidecar&#34;&gt;Bypassing Traffic Redirection to Istio Sidecar&lt;/h2&gt;
&lt;h3 id=&#34;misuse-of-traffic-redirection-annotations&#34;&gt;Misuse of Traffic Redirection Annotations&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams misuse Pod annotations to exclude certain inbound or outbound ports or IPs, thereby bypassing traffic redirection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams abstract app deployment and restrict access to the raw Kubernetes Pod resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Use policy engines to detect and alert on non-compliant annotation use, regularly review Pod annotations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;misuse-of-pod-uid&#34;&gt;Misuse of Pod UID&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams misuse UID 1337 (the ID of the sidecar proxy) to bypass Istio&amp;rsquo;s Iptables redirection rules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams abstract app deployment and restrict access to the raw Kubernetes Pod resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Prohibit or restrict the use of UID 1337, regularly audit Pod UID configurations to ensure no bypassing occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;misuse-of-pod-capabilities-net_admin-net_raw&#34;&gt;Misuse of Pod Capabilities (NET_ADMIN, NET_RAW)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams misuse NET_ADMIN and NET_RAW capabilities to remove Istio Iptables rules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams enable Istio CNI (to avoid granting elevated privileges to application teams) and restrict access to the raw Kubernetes Pod resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Regularly review and monitor Pod permission configurations to ensure no over-privileged actions are taken.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bypassing-inbound-traffic-constraints&#34;&gt;Bypassing Inbound Traffic Constraints&lt;/h2&gt;
&lt;h3 id=&#34;misuse-of-peerauthentication&#34;&gt;Misuse of PeerAuthentication&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams create a PeerAuthentication resource for each namespace/workload, enabling the PERMISSIVE authentication mode.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams restrict access to the raw Istio PeerAuthentication resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Regularly review PeerAuthentication configurations to ensure all inbound traffic is encrypted as required.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;bypassing-outbound-traffic-constraints&#34;&gt;Bypassing Outbound Traffic Constraints&lt;/h2&gt;
&lt;h3 id=&#34;misuse-of-serviceentry&#34;&gt;Misuse of ServiceEntry&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams create a ServiceEntry to directly access external services without going through an Egress gateway.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams restrict access to the raw Istio ServiceEntry resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Regularly review ServiceEntry configurations to ensure no bypassing occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;misuse-of-externalname-services&#34;&gt;Misuse of ExternalName Services&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams create a Kubernetes Service of type ExternalName to directly access external services without going through an Egress gateway.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams restrict access to the raw Kubernetes Service resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Regularly review the types of Kubernetes Service configurations to ensure no bypassing occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;uncontrollably-changing-istio-sidecar-configuration&#34;&gt;Uncontrollably Changing Istio Sidecar Configuration&lt;/h2&gt;
&lt;h3 id=&#34;misuse-of-sidecar-resources&#34;&gt;Misuse of Sidecar Resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams create an Istio Sidecar resource for each workload and set the &lt;code&gt;outboundTrafficPolicy&lt;/code&gt; field to &lt;code&gt;ALLOW_ANY&lt;/code&gt; (overriding the possible global value &lt;code&gt;REGISTRY_ONLY&lt;/code&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams restrict access to the raw Istio Sidecar resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Regularly review Sidecar resource configurations to ensure no global settings are overridden.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;misuse-of-envoyfilter&#34;&gt;Misuse of EnvoyFilter&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Scenario&lt;/strong&gt;: Application teams create an EnvoyFilter that conflicts with existing Istio objects, potentially causing DoS attacks or violating security policies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Mitigation Strategy&lt;/strong&gt;: Platform teams restrict access to the raw Istio EnvoyFilter resources.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Monitoring&lt;/strong&gt;: Regularly review EnvoyFilter configurations to ensure no improper use occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;service-mesh-as-part-of-a-layered-defense&#34;&gt;Service Mesh as Part of a Layered Defense&lt;/h2&gt;
&lt;p&gt;The service mesh is described as a supplemental layer to existing security models, enhancing microservice security by adding finer-grained security policies on top of traditional security controls. However, the article emphasizes that service meshes cannot independently ensure comprehensive security for microservices but should be part of an overall security strategy.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/securing-istio-addressing-critical-security-gaps-and-best-practices/security-layers.svg&#34; data-img=&#34;/en/blog/securing-istio-addressing-critical-security-gaps-and-best-practices/security-layers.svg&#34; alt=&#34;image&#34; data-caption=&#34;Microservices security layered architecture&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Microservices security layered architecture&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;Service meshes primarily manage and control network traffic by deploying a lightweight proxy (sidecar) next to each service instance. This allows for precise traffic control and policy enforcement at the network level, such as traffic encryption, authentication, and authorization. Although service meshes offer features like traffic control, service discovery, and circuit breakers, these are essentially management of network traffic and are not sufficient to address all security issues. For instance, they cannot replace traditional security measures like application layer firewalls, intrusion detection systems, and data security.&lt;/p&gt;
&lt;p&gt;Furthermore, service meshes rely on correct configuration and management, and improper configuration can lead to security vulnerabilities. Therefore, while service meshes are an indispensable part of modern microservices architectures, they should be combined with traditional security measures to form a comprehensive, multi-layered security strategy framework. Refer to &lt;a href=&#34;https://tetrate.io/blog/how-service-mesh-layers-microservices-security-with-traditional-security-to-move-fast-safely/&#34; title=&#34;How Service Mesh Layers Microservices Security with Traditional Security to Move Fast Safely&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How Service Mesh Layers Microservices Security with Traditional Security to Move Fast Safely&lt;/a&gt; for further insights on strengthening service mesh security.&lt;/p&gt;
&lt;h2 id=&#34;long-term-solutions-and-community-collaboration&#34;&gt;Long-term Solutions and Community Collaboration&lt;/h2&gt;
&lt;p&gt;The Istio community conducts a security audit almost every year, see the results from &lt;a href=&#34;https://istio.io/latest/blog/2021/ncc-security-assessment/&#34; title=&#34;2021&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2021&lt;/a&gt; and &lt;a href=&#34;https://istio.io/latest/blog/2023/ada-logics-security-assessment/&#34; title=&#34;2022&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2022&lt;/a&gt;. From these results, we can see that Istio&amp;rsquo;s security posture has greatly improved. Ensure that your Istio service mesh adheres to &lt;a href=&#34;https://istio.io/latest/docs/ops/best-practices/security/&#34; title=&#34;security best practices&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;security best practices&lt;/a&gt;. Additionally, keep an eye on the &lt;a href=&#34;https://istio.io/latest/news/security/&#34; title=&#34;Istio CVE Bulletins&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio CVE Bulletins&lt;/a&gt; or use tools like &lt;a href=&#34;https://tetrate.io/tetrate-istio-subscription/&#34; title=&#34;Tetrate Istio Subscription&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tetrate Istio Subscription&lt;/a&gt; that can scan for various CVEs in the Istio service mesh, deploying Istio versions that are FIPS compliant and FIPS certified.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Service meshes provide an additional layer of security for microservices architectures by managing control flows outside of the applications. This allows for enhanced communication security between services without impacting application performance. When deploying service meshes, it is recommended to use Istio’s Egress Gateway to manage outbound traffic, in conjunction with Kubernetes&amp;rsquo; NetworkPolicy, to ensure all outbound traffic must pass through the gateway, thus preventing potential data leaks and other security threats.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tetrate.io/blog/istio-how-to-enforce-egress-traffic-using-istios-authorization-policies/&#34; title=&#34;How to enforce egress traffic using Istio’s authorization policies - tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;How to enforce egress traffic using Istio’s authorization policies - tetrate.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/ops/best-practices/security/&#34; title=&#34;Istio Security Best Practice - istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio Security Best Practice - istio.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tetrate.io/blog/optimize-traffic-management-and-security-with-these-service-mesh-best-practices/&#34; title=&#34;Optimize Traffic Management and Security with These Service Mesh Best Practices - tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Optimize Traffic Management and Security with These Service Mesh Best Practices - tetrate.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/blog/2023/ada-logics-security-assessment/&#34; title=&#34;Istio publishes results of 2022 security audit - istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio publishes results of 2022 security audit - istio.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/blog/2021/ncc-security-assessment/&#34; title=&#34;Announcing the results of Istio’s first security assessment - istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Announcing the results of Istio’s first security assessment - istio.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
                           
    <item>
      <title>Deep Dive into Istio 1.22: New Features and Practical Application Advice</title>
      <link>https://jimmysong.io/en/blog/what-is-new-in-istio-1-22/</link>
      <pubDate>Fri, 21 Jun 2024 16:23:50 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/what-is-new-in-istio-1-22/</guid>
      <description>
        
        
        &lt;p&gt;The recent &lt;a href=&#34;https://istio.io/latest/news/releases/1.22.x/announcing-1.22/&#34; title=&#34;release of Istio 1.22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;release of Istio 1.22&lt;/a&gt; includes a plethora of significant updates. This article shares the new features and application recommendations brought by this release.&lt;/p&gt;
&lt;h2 id=&#34;ambient-mode-enters-beta-phase&#34;&gt;Ambient Mode Enters Beta Phase&lt;/h2&gt;
&lt;p&gt;Although Ambient mode has now entered the Beta phase, this does not mean we can completely do away with Sidecars. While the Istio official claims that Ambient mode simplifies operations and significantly reduces memory and CPU usage, it still has limitations and potential complexity issues. For example, while Sidecars are eliminated, the introduction of new ztunnel and waypoint components may pose new challenges. For more detailed information about Ambient mode entering Beta, refer to the &lt;a href=&#34;https://istio.io/latest/blog/2024/ambient-reaches-beta/&#34; title=&#34;Istio official blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio official blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Challenges Introduced by Ambient Mode&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Management of L7 traffic in Ambient mode is not yet mature&lt;/li&gt;
&lt;li&gt;mTLS is forced to be enabled at the namespace level, meaning you cannot disable mTLS in Ambient mode&lt;/li&gt;
&lt;li&gt;Zero-downtime upgrades in Ambient mode have not been resolved&lt;/li&gt;
&lt;li&gt;Lack of best practices for coexistence and migration from Sidecar mode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a comparison of Sidecar mode and Ambient mode, see &lt;a href=&#34;https://jimmysong.io/blog/istio-ambient-mode-limitations/&#34; title=&#34;Analysis of Limitations in Istio Ambient Mode&#34;&gt;Analysis of Limitations in Istio Ambient Mode&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    If you are just starting with Istio, especially if you only need to automatically enable mTLS for services, you can consider using Ambient mode at this stage. However, for L7 functionalities, it is recommended to wait until Ambient mode is fully mature before considering it for production use.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;istio-api-upgrades&#34;&gt;Istio API Upgrades&lt;/h2&gt;
&lt;p&gt;In the Istio 1.22 release, key APIs related to traffic management, security, and telemetry have officially been upgraded to the &lt;code&gt;v1&lt;/code&gt; version. You only need to change the API version of your existing configuration to &lt;code&gt;v1&lt;/code&gt;, with no other changes needed. These APIs are already mature, and you can safely use the &lt;code&gt;v1&lt;/code&gt; version. For environments requiring high stability, Istio has added &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/validating-admission-policy/&#34; title=&#34;validating admission policies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;validating admission policies&lt;/a&gt; to ensure that only &lt;code&gt;v1&lt;/code&gt; APIs and fields can be used in the Istio API.&lt;/p&gt;
&lt;p&gt;For example, the following AuthorizationPolicy example.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;security.istio.io/v1beta1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;AuthorizationPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;finance-to-supply-chain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;finance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;finance-app&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ALLOW&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespaces&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;finance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/api/supply1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/api/supply2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;request.headers[:authority]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;supply-chain-service.supply-chain.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Other extension-type APIs such as &lt;code&gt;EnvoyFilter&lt;/code&gt;, &lt;code&gt;WasmPlugin&lt;/code&gt;, &lt;code&gt;ProxyConfig&lt;/code&gt; are still in alpha or beta stages. For more information on API upgrades, please refer to the &lt;a href=&#34;https://istio.io/latest/blog/2024/v1-apis/&#34; title=&#34;v1 API blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;v1 API blog&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    For commonly used functionalities, you can confidently use the &lt;code&gt;v1&lt;/code&gt; API. For extension-type APIs that are not yet stable, enabling validating admission policies is recommended to ensure system stability.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;gateway-api-upgrade&#34;&gt;Gateway API Upgrade&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jimmysong.io/blog/why-gateway-api-is-the-future-of-ingress-and-mesh/&#34; title=&#34;Gateway API&#34;&gt;Gateway API&lt;/a&gt; has been updated to version 1.1.0 and is now widely available. This update extends Istio&amp;rsquo;s traffic management capabilities, but it is important to be cautious of compatibility issues between Istio&amp;rsquo;s native APIs and the Gateway API when migrating to the new API to avoid relying on features that are not fully mature yet. For more details, check out the &lt;a href=&#34;https://istio.io/latest/blog/2024/gateway-mesh-ga/&#34; title=&#34;Gateway API v1.1 blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gateway API v1.1 blog&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    For existing deployments that are already stable using Istio API, continue using them, especially in scenarios requiring advanced features. For new deployments, consider using the stable version of the Gateway API to take advantage of its modern traffic management capabilities. Due to existing compatibility issues, do not rashly migrate to the Gateway API, as it may not be worth the risk.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;delta-xds-enabled-by-default&#34;&gt;Delta xDS Enabled by Default&lt;/h2&gt;
&lt;p&gt;Istio 1.22 version now has delta xDS enabled by default, which is a mechanism to optimize configuration distribution. Compared to the traditional State of the World (SotW) mode, delta xDS only sends changed configurations to the Envoy proxies, thereby significantly reducing the amount of data transmitted over the network and the resource consumption of the control plane. This change is particularly suitable for large-scale deployment environments with frequent configuration updates, improving the efficiency and performance of configuration updates. Additionally, delta xDS also helps manage configuration updates more efficiently in complex network environments or dynamically changing configurations.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    The delta xDS has been developed several versions ago but was not enabled by default. Now that this feature is stable, you can use it with confidence.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;For more on xDS, refer to the &lt;a href=&#34;https://jimmysong.io/blog/istio-delta-xds-for-envoy/&#34; title=&#34;Introduction to Envoy xDS and Configuration Distribution Process in Istio&#34;&gt;Introduction to Envoy xDS and Configuration Distribution Process in Istio&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;path-template-support-with-wildcards-for-authorizationpolicy&#34;&gt;Path Template Support with Wildcards for AuthorizationPolicy&lt;/h3&gt;
&lt;p&gt;In Istio 1.22, &lt;code&gt;AuthorizationPolicy&lt;/code&gt; has added support for &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/authorization-policy/#Operation&#34; title=&#34;path templates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;path templates&lt;/a&gt;, greatly enhancing the flexibility and precision of path matching. Prior to this, &lt;code&gt;AuthorizationPolicy&lt;/code&gt; did not support wildcards in path configurations. This feature allows for defining paths in HTTP requests using URI templates based on Envoy, including simple wildcards (&lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt;) or named variables, enabling precise matching of single or multiple path components. For example, the path template &lt;code&gt;/foo/{*}&lt;/code&gt; can match &lt;code&gt;/foo/bar&lt;/code&gt; but not &lt;code&gt;/foo/bar/baz&lt;/code&gt;, while &lt;code&gt;/foo/{**}/&lt;/code&gt; can match any path starting with &lt;code&gt;/foo/&lt;/code&gt;. This flexible path template design is particularly suitable for dynamic and complex routing rules, further strengthening Istio&amp;rsquo;s security policy toolbox.&lt;/p&gt;
&lt;p&gt;The diagram below illustrates the wildcard rules for path matching in AuthorizationPolicy.&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/what-is-new-in-istio-1-22/dfe9a5d5e2bc91e91e7e24017f56a3db.svg&#34; data-img=&#34;/en/blog/what-is-new-in-istio-1-22/dfe9a5d5e2bc91e91e7e24017f56a3db.svg&#34; alt=&#34;image&#34; data-caption=&#34;AuthorizationPolicy Path Matching Wildcard Rules&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;AuthorizationPolicy Path Matching Wildcard Rules&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;For more on the specific applications and rules of path templates, you can refer to &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/path/match/uri_template/v3/uri_template_match.proto&#34; title=&#34;Envoy&amp;rsquo;s official documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&amp;rsquo;s official documentation&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Tip
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    &lt;code&gt;AuthorizationPolicy&lt;/code&gt; finally supports templates in path matching, so you no longer need to manually add paths one by one in your configurations.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The Istio 1.22 release introduces several important updates and improvements. Although some features are widely publicized, they require detailed assessment and appropriate testing in practical use. Hopefully, this blog post helps you understand and apply these new features more deeply to achieve the best results in practice.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/blog/2024/05/09/gateway-api-v1-1/&#34; title=&#34;Gateway API v1.1: Service mesh, GRPCRoute, and a whole lot more - kubernetes.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gateway API v1.1: Service mesh, GRPCRoute, and a whole lot more - kubernetes.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/istio-service-mesh-new-features-v1_22/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>Istio CNI Unveiled: Streamlining Service Mesh Connectivity</title>
      <link>https://jimmysong.io/en/blog/istio-cni-deep-dive/</link>
      <pubDate>Sun, 19 May 2024 18:54:49 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/istio-cni-deep-dive/</guid>
      <description>
        
        
        &lt;p&gt;This article delves into the design principles, implementation, and how Ambient Mode enhances security and permission management in Istio CNI plugins. The content includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security risks of Init containers and their solutions.&lt;/li&gt;
&lt;li&gt;Working principles and advantages of Istio CNI.&lt;/li&gt;
&lt;li&gt;Implementation mechanism of Ambient Mode and its integration with CNI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;overview-of-istio-network-requirements-and-solutions&#34;&gt;Overview of Istio Network Requirements and Solutions&lt;/h2&gt;
&lt;p&gt;Istio service mesh intercepts and manages application traffic through the Sidecar mode. This mode injects a Sidecar Proxy and init containers into application pods and uses iptables rules to manage network traffic. For detailed deployment and operation processes, please refer to &lt;a href=&#34;https://jimmysong.io/en/blog/sidecar-injection-iptables-and-traffic-routing/&#34; title=&#34;Understanding Sidecar Injection, Transparent Traffic Hijacking, and Traffic Routing in Istio&#34;&gt;Understanding Sidecar Injection, Transparent Traffic Hijacking, and Traffic Routing in Istio&lt;/a&gt;. Although this method is effective on most Kubernetes platforms, the high dependency on privileges raises security concerns in multi-tenant environments.&lt;/p&gt;
&lt;h3 id=&#34;limitations-of-istio-init&#34;&gt;Limitations of Istio-init&lt;/h3&gt;
&lt;p&gt;During its initial network configuration, Istio adopted the &lt;code&gt;istio-init&lt;/code&gt; container to initialize traffic interception rules, requiring containers to have advanced permissions to modify network configurations like IPTables rules. While this method effectively manages traffic, it significantly increases permission requirements and security risks. According to the &lt;a href=&#34;https://istio.io/latest/docs/setup/additional-setup/cni/&#34; title=&#34;Istio documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio documentation&lt;/a&gt;, the &lt;code&gt;istio-init&lt;/code&gt; container is injected into pods within the Istio mesh by default to hijack network traffic to Istio&amp;rsquo;s Sidecar proxy. This process requires granting the Service Account deploying the pod the &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container&#34; title=&#34;NET_ADMIN container permission&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NET_ADMIN&lt;/code&gt; container permission&lt;/a&gt;, which may contradict the security policies of some organizations.&lt;/p&gt;
&lt;h3 id=&#34;istio-cni-plugin&#34;&gt;Istio CNI Plugin&lt;/h3&gt;
&lt;p&gt;In response to this challenge, the Istio community introduced the &lt;a href=&#34;https://github.com/istio/istio/tree/master/cni&#34; title=&#34;Istio CNI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio CNI&lt;/a&gt; plugin, which avoids the need for init containers, allowing direct manipulation at the Kubernetes network layer, thereby reducing permission requirements and simplifying the deployment process, but with CNI compatibility issues.&lt;/p&gt;
&lt;h3 id=&#34;introduction-of-ambient-mode&#34;&gt;Introduction of Ambient Mode&lt;/h3&gt;
&lt;p&gt;Istio&amp;rsquo;s Ambient Mode is an innovative sidecar-less solution that enhances network flexibility and security by &lt;a href=&#34;https://jimmysong.io/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/&#34; title=&#34;using Geneve tunnels&#34;&gt;using Geneve tunnels&lt;/a&gt; or Istio CNI.&lt;/p&gt;
&lt;p&gt;Only recently has the Istio community introduced a &lt;a href=&#34;https://istio.io/latest/blog/2024/inpod-traffic-redirection-ambient/&#34; title=&#34;universal solution compatible with any CNI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;universal solution compatible with any CNI&lt;/a&gt;. This mode addresses compatibility issues with any CNI, enabling Istio to more effectively manage traffic between services without affecting existing network policies.&lt;/p&gt;
&lt;h2 id=&#34;security-considerations-for-net_admin-permissions&#34;&gt;Security Considerations for NET_ADMIN Permissions&lt;/h2&gt;
&lt;p&gt;In containerized environments like Kubernetes and Docker, &lt;code&gt;NET_ADMIN&lt;/code&gt; permissions allow processes within containers to perform extensive network-related operations, including modifying iptables rules, changing network interface configurations, managing IP routing tables, and controlling kernel parameters related to networking. However, the use of these permissions raises security concerns, especially regarding overprivileged access and potential attack surfaces.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Best practices include&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Limiting scope of use&lt;/strong&gt;: Grant &lt;code&gt;NET_ADMIN&lt;/code&gt; permissions only when necessary and restrict them through Kubernetes network policies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continuous monitoring and auditing&lt;/strong&gt;: Enforce strict logging and monitoring for containers using &lt;code&gt;NET_ADMIN&lt;/code&gt; permissions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;working-principles-of-istio-cni-plugin&#34;&gt;Working Principles of Istio CNI Plugin&lt;/h2&gt;
&lt;p&gt;The Istio CNI plugin is a binary file installed as an agent in the file system of each node. The following flowchart illustrates the working principles of the Istio CNI node agent:&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-cni-deep-dive/f9aacefbdd8fb77216546b53eda78079.svg&#34; data-img=&#34;/en/blog/istio-cni-deep-dive/f9aacefbdd8fb77216546b53eda78079.svg&#34; alt=&#34;image&#34; data-caption=&#34;Mermaid Diagram&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Mermaid Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Istio CNI Node Agent&lt;/strong&gt; acts as an agent installed on each node.&lt;/li&gt;
&lt;li&gt;It installs the Istio CNI plugin and updates the node’s CNI configuration.&lt;/li&gt;
&lt;li&gt;The agent monitors the CNI plugin and config paths for changes.&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;Sidecar Mode&lt;/strong&gt;, it handles sidecar networking setups using iptables for pods.&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;Ambient Mode&lt;/strong&gt;, it synchronizes pod events to an ambient watch server, which then configures iptables within pods.&lt;/li&gt;
&lt;li&gt;Nodes require elevated privileges like &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt;, &lt;code&gt;CAP_NET_ADMIN&lt;/code&gt;, and &lt;code&gt;CAP_NET_RAW&lt;/code&gt; to function in either mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resolving-conflicts-between-istio-ambient-mode-and-kubernetes-cni&#34;&gt;Resolving Conflicts Between Istio Ambient Mode and Kubernetes CNI&lt;/h2&gt;
&lt;p&gt;Istio&amp;rsquo;s Ambient Mode is designed to adapt to all CNIs, transparently handling traffic redirection within pods using ztunnel without affecting existing CNI configurations. In this mode, Ambient Mode manages traffic through ztunnel to flow through the Istio service mesh, while standard CNIs focus on providing standardized network access for pods.&lt;/p&gt;
&lt;p&gt;The primary responsibilities of CNI are to address network connectivity between Kubernetes Pods, such as assigning IP addresses and forwarding packets. In contrast, Ambient Mode needs to import traffic into ztunnel, which may be incompatible with CNI&amp;rsquo;s network configuration. The main issues include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mainstream CNI network configurations may conflict with Istio&amp;rsquo;s CNI extensions, causing interruptions in traffic processing.&lt;/li&gt;
&lt;li&gt;Using Istio CNI may affect the execution of these policies if the deployed network policies depend on CNI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To address these issues, traffic redirection is managed by running ztunnel in the same user space as the pod, avoiding conflicts with the kernel space modified by CNI. Thus, pods can connect directly to ztunnel, bypassing the influence of CNI.&lt;/p&gt;
&lt;p&gt;The following sequence diagram describes the process under Ambient mode:&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-cni-deep-dive/aa0472b4061c1a2ca71146c3243d2318.svg&#34; data-img=&#34;/en/blog/istio-cni-deep-dive/aa0472b4061c1a2ca71146c3243d2318.svg&#34; alt=&#34;image&#34; data-caption=&#34;Mermaid Diagram&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Mermaid Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ambient CNI Agent&lt;/strong&gt; initiates interactions by listening for UDS events signaling pod creations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ambient Watch Server&lt;/strong&gt; modifies iptables within pods to redirect traffic to ztunnel as needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ztunnel&lt;/strong&gt; establishes connections and handles network traffic redirection within the Kubernetes cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resolving-conflicts-between-istio-ambient-mode-and-kubernetes-cni-1&#34;&gt;Resolving Conflicts Between Istio Ambient Mode and Kubernetes CNI&lt;/h2&gt;
&lt;p&gt;To mitigate these conflicts, Istio&amp;rsquo;s Ambient Mode avoids dependencies on the kernel space modified by CNI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Run ztunnel in user space&lt;/strong&gt;: This strategy allows ztunnel to run in the same user space as the pod, avoiding direct conflicts with CNI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ensure CNI compatibility&lt;/strong&gt;: Istio CNI configurations must be carried out without affecting existing CNI plugin configurations, ensuring normal communication between pods and traffic management.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These measures help Istio&amp;rsquo;s Ambient Mode effectively manage traffic between services without disrupting existing CNI plugins.&lt;/p&gt;
&lt;h2 id=&#34;optimized-traffic-management-with-istio-ambient-mode&#34;&gt;Optimized Traffic Management with Istio Ambient Mode&lt;/h2&gt;
&lt;p&gt;Istio&amp;rsquo;s Ambient Mode employs an advanced traffic forwarding mechanism through &lt;strong&gt;node-local Ztunnel&lt;/strong&gt;, allowing for the establishment of listening sockets within a Pod&amp;rsquo;s network namespace. This setup facilitates effective redirection of encrypted (mTLS) and plaintext traffic originating from the service mesh. Not only does this approach enhance the flexibility of traffic management, but it also prevents potential conflicts with existing CNI plugins. Below is a detailed implementation flow of this mode:&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-cni-deep-dive/82841d7a95a98947c4ec6c7113c2ffb0.svg&#34; data-img=&#34;/en/blog/istio-cni-deep-dive/82841d7a95a98947c4ec6c7113c2ffb0.svg&#34; alt=&#34;image&#34; data-caption=&#34;Mermaid Diagram&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Mermaid Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;The specific steps involved are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Detection of Tags&lt;/strong&gt;: The Istio CNI node agent detects Pods tagged with &lt;code&gt;istio.io/dataplane-mode=ambient&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Triggering the CNI Plugin&lt;/strong&gt;: Based on Pod events (either a new start or an existing Pod joining the mesh), the CNI plugin is triggered, leading the Istio CNI node agent to configure traffic redirection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configuring Redirection Rules&lt;/strong&gt;: Network redirection rules are set up within the Pod’s network namespace to intercept and redirect traffic to the node-local ztunnel proxy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Establishment of Listening Sockets&lt;/strong&gt;: The node-local ztunnel creates listening sockets within the Pod&amp;rsquo;s network namespace to enable traffic redirection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Traffic Handling&lt;/strong&gt;: The node-local ztunnel handles encrypted (mTLS) and plaintext traffic within the mesh, ensuring secure and efficient data transfer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Through this approach, Istio Ambient Mode provides a more effective and secure solution for managing inter-service traffic in Kubernetes environments.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This article thoroughly analyzes the design principles, implementation, and advantages of the Istio CNI plugin, particularly how Istio CNI addresses the permission and security issues present in traditional &lt;code&gt;istio-init&lt;/code&gt; methods. Through these innovations, Istio has made significant progress in network security and operational simplicity, providing a more flexible and efficient method for implementing Istio in Kubernetes environments.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/istio-cni-unveiled-streamlining-service-mesh-connectivity/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>Analysis of the Limitations of Istio Ambient Mode</title>
      <link>https://jimmysong.io/en/blog/istio-ambient-mode-limitations/</link>
      <pubDate>Thu, 16 May 2024 11:28:34 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/istio-ambient-mode-limitations/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://istio.io/latest/news/releases/1.22.x/announcing-1.22/&#34; title=&#34;Istio 1.22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 1.22&lt;/a&gt; marks the official beta release of Ambient mode, accompanied by a blog titled &lt;a href=&#34;https://istio.io/latest/blog/2024/ambient-reaches-beta/&#34; title=&#34;Say goodbye to your sidecars: Istio&amp;rsquo;s ambient mode reaches Beta in v1.22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Say goodbye to your sidecars: Istio&amp;rsquo;s ambient mode reaches Beta in v1.22&lt;/a&gt;, claiming that Layer 4 and Layer 7 features are now production-ready. This milestone was actually announced by the community at KubeCon EU a month earlier. Such exciting promotion seems to suggest that we can completely abandon the Sidecar mode, but is this really the case?&lt;/p&gt;
&lt;h3 id=&#34;why-not-hurry-to-say-goodbye-to-sidecar-mode&#34;&gt;Why Not Hurry to Say Goodbye to Sidecar Mode?&lt;/h3&gt;
&lt;p&gt;While I am open to new technologies, it may be premature to completely abandon the Sidecar mode. Each mode has its specific application scenarios, advantages, and disadvantages. Below, I will share in detail some of the limitations of the Ambient mode compared to the Sidecar mode, to help everyone better understand the differences between the two.&lt;/p&gt;
&lt;h3 id=&#34;key-differences-between-ambient-mode-and-sidecar-mode&#34;&gt;Key Differences Between Ambient Mode and Sidecar Mode&lt;/h3&gt;
&lt;h4 id=&#34;traffic-management&#34;&gt;Traffic Management&lt;/h4&gt;
&lt;p&gt;The L7 traffic management support in Ambient mode is not yet mature and production-ready. In contrast, Sidecar mode is more stable and reliable in this regard.&lt;/p&gt;
&lt;h4 id=&#34;security&#34;&gt;Security&lt;/h4&gt;
&lt;p&gt;In Ambient mode, mTLS is enforced at the namespace level, whereas Sidecar mode gives users more flexibility to choose whether to enable mTLS. This flexibility is particularly important for certain application scenarios.&lt;/p&gt;
&lt;h4 id=&#34;observability&#34;&gt;Observability&lt;/h4&gt;
&lt;p&gt;For L7 layer telemetry data, it remains questionable whether Ambient mode can provide precise monitoring and tracing for each pod as effectively as Sidecar mode. Sidecar mode has been widely validated in terms of observability and is more mature.&lt;/p&gt;
&lt;h4 id=&#34;operations&#34;&gt;Operations&lt;/h4&gt;
&lt;p&gt;In terms of deployment, Ambient mode recommends using Helm and only supports the Kubernetes platform, while Sidecar mode also supports VMs and hybrid cloud environments. Additionally, Ambient mode has not yet received official support from major cloud vendors. During upgrades, Ambient mode has a larger blast radius and currently does not support canary releases, recommending blue-green deployments instead. There is still a lack of best practices for migrating from Sidecar mode to Ambient mode or coexisting with both.&lt;/p&gt;
&lt;h4 id=&#34;extensibility&#34;&gt;Extensibility&lt;/h4&gt;
&lt;p&gt;Currently, support for Wasm plugins in Ambient mode is still unclear, whereas Sidecar mode already has relatively complete support in this area.&lt;/p&gt;
&lt;h4 id=&#34;other-functional-features&#34;&gt;Other Functional Features&lt;/h4&gt;
&lt;p&gt;While Dual Stack mode is still experimental in Sidecar mode, it has at least some implementation, whereas it remains unclear whether Ambient mode supports this feature.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Although Istio 1.22 brings the exciting Ambient mode, we need to carefully consider these limitations and differences before completely saying goodbye to Sidecar mode. Each mode has its unique advantages and applicable scenarios, and users should make informed choices based on their own needs. I will continue to test and track Ambient mode, so stay tuned to this blog for more in-depth analysis.&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>Istio Data Plane Pod Startup Process Explained</title>
      <link>https://jimmysong.io/en/blog/istio-pod-process-lifecycle/</link>
      <pubDate>Thu, 12 May 2022 19:18:40 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/istio-pod-process-lifecycle/</guid>
      <description>
        
        
        &lt;p&gt;This article will explain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The sidecar auto-injection process in Istio&lt;/li&gt;
&lt;li&gt;The init container startup process in Istio&lt;/li&gt;
&lt;li&gt;The startup process of a Pod with Sidecar auto-injection enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following figure shows the components of a Pod in the Istio data plane after it has been started.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/en/blog/istio-pod-process-lifecycle/istio-pod-lifecycle_hu5110708398791105112.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/en/blog/istio-pod-process-lifecycle/istio-pod-lifecycle.jpg&#34; data-img=&#34;/en/blog/istio-pod-process-lifecycle/istio-pod-lifecycle.jpg&#34; data-width=&#34;1200&#34; data-height=&#34;813&#34; alt=&#34;image&#34; data-caption=&#34;Istio data plane pod&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istio data plane pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;sidecar-injection-in-istio&#34;&gt;Sidecar injection in Istio&lt;/h2&gt;
&lt;p&gt;The following two sidecar injection methods are available in Istio.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manual injection using &lt;code&gt;istioctl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Kubernetes-based &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/&#34; title=&#34;mutating webhook admission controller&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mutating webhook admission controller&lt;/a&gt; automatic sidecar injection method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whether injected manually or automatically, SIDECAR&amp;rsquo;s injection process follows the following steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kubernetes needs to know the Istio cluster to which the sidecar to be injected is connected and its configuration.&lt;/li&gt;
&lt;li&gt;Kubernetes needs to know the configuration of the sidecar container itself to be injected, such as the image address, boot parameters, etc.&lt;/li&gt;
&lt;li&gt;Kubernetes injects the above configuration into the side of the application container by the sidecar injection template and the configuration parameters of the above configuration-filled sidecar.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The sidecar can be injected manually using the following command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;istioctl kube-inject -f &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;YAML_FILE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; kuebectl apply -f -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command is injected using Istio&amp;rsquo;s built-in sidecar configuration, see the &lt;a href=&#34;https://istio.io&#34; title=&#34;Istio official website&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio official website&lt;/a&gt; for details on how to use Istio below.&lt;/p&gt;
&lt;p&gt;When the injection is complete you will see that Istio has injected initContainer and sidecar proxy-related configurations into the original pod template.&lt;/p&gt;
&lt;h3 id=&#34;init-container&#34;&gt;Init container&lt;/h3&gt;
&lt;p&gt;The Init container is a dedicated container that runs before the application container is launched and is used to contain some utilities or installation scripts that do not exist in the application image.&lt;/p&gt;
&lt;p&gt;Multiple Init containers can be specified in a Pod, and if more than one is specified, the Init containers will run sequentially. The next Init container can only be run if the previous Init container must run successfully. Kubernetes only initializes the Pod and runs the application container when all the Init containers have been run.&lt;/p&gt;
&lt;p&gt;The Init container uses Linux Namespace, so it has a different view of the file system than the application container. As a result, they can have access to Secret in a way that application containers cannot.&lt;/p&gt;
&lt;p&gt;During Pod startup, the Init container starts sequentially after the network and data volumes are initialized. Each container must be successfully exited before the next container can be started. If exiting due to an error will result in a container startup failure, it will retry according to the policy specified in the Pod&amp;rsquo;s restartPolicy. However, if the Pod&amp;rsquo;s restartPolicy is set to Always, the restartPolicy is used when the Init container failed.&lt;/p&gt;
&lt;p&gt;The Pod will not become Ready until all Init containers are successful. The ports of the Init containers will not be aggregated in the Service. The Pod that is being initialized is in the Pending state but should set the Initializing state to true. The Init container will automatically terminate once it is run.&lt;/p&gt;
&lt;h2 id=&#34;sidecar-injection-example-analysis&#34;&gt;Sidecar injection example analysis&lt;/h2&gt;
&lt;p&gt;For a detailed YAML configuration for the bookinfo applications, see &lt;code&gt;bookinfo.yaml&lt;/code&gt; for the official Istio YAML of productpage in the bookinfo sample.&lt;/p&gt;
&lt;p&gt;The following will be explained in the following terms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Injection of Sidecar containers&lt;/li&gt;
&lt;li&gt;Creation of iptables rules&lt;/li&gt;
&lt;li&gt;The detailed process of routing&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage-v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;replicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;bookinfo-productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/examples-bookinfo-productpage-v1:1.15.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;IfNotPresent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumeMounts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mountPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;emptyDir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s see the &lt;code&gt;productpage&lt;/code&gt; container’s &lt;a href=&#34;https://github.com/istio/istio/blob/master/samples/bookinfo/src/productpage/Dockerfile&#34; title=&#34;Dockerfile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dockerfile&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; python:3.7.4-slim&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; requirements.txt ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; pip install --no-cache-dir -r requirements.txt&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; test-requirements.txt ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; pip install --no-cache-dir -r test-requirements.txt&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; productpage.py /opt/microservices/&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; tests/unit/* /opt/microservices/&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; templates /opt/microservices/templates&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; static /opt/microservices/static&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; requirements.txt /opt/microservices/&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ARG&lt;/span&gt; flood_factor&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt; FLOOD_FACTOR &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;flood_factor&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPOSE&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 9080&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; /opt/microservices&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; python -m unittest discover&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;productpage.py&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;9080&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We see that &lt;code&gt;ENTRYPOINT&lt;/code&gt; is not configured in Dockerfile, so &lt;code&gt;CMD&lt;/code&gt;’s configuration &lt;code&gt;python productpage.py 9080&lt;/code&gt; will be the default &lt;code&gt;ENTRYPOINT&lt;/code&gt;, keep that in mind and look at the configuration after the sidecar injection.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We intercept only a portion of the YAML configuration that is part of the Deployment configuration associated with productpage.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/examples-bookinfo-productpage-v1:1.15.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# application image&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;sidecar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;$(POD_NAMESPACE).svc.cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;configPath&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;/etc/istio/proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;binaryPath&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;/usr/local/bin/envoy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;serviceCluster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;productpage.$(POD_NAMESPACE)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;drainDuration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;45s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;parentShutdownDuration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;1m0s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;discoveryAddress&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;istiod.istio-system.svc:15012&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;zipkinAddress&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;zipkin.istio-system:9411&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;proxyLogLevel=warning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;proxyComponentLogLevel=misc:error&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;connectTimeout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;10s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;proxyAdminPort&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15000&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;concurrency&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;controlPlaneAuthPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;NONE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;dnsRefreshRate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;300s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;statusPort&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15020&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;trust-domain=cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;controlPlaneBootstrap=false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/proxyv2:1.5.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# sidecar proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15090&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http-envoy-prom&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;initContainers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;istio-iptables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15001&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15006&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;1337&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;REDIRECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;m&#34;&gt;15090&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15020&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/proxyv2:1.5.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# init container&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-init&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Istio&amp;rsquo;s configuration for application Pod injection mainly includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Init container &lt;code&gt;istio-init&lt;/code&gt;: for setting iptables port forwarding in the pod&lt;/li&gt;
&lt;li&gt;Sidecar container &lt;code&gt;istio-proxy&lt;/code&gt;: running a sidecar proxy, such as Envoy or MOSN&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The two containers will be parsed separately.&lt;/p&gt;
&lt;h2 id=&#34;init-container-analysis&#34;&gt;Init container analysis&lt;/h2&gt;
&lt;p&gt;The Init container that Istio injects into the pod is named &lt;code&gt;istio-init&lt;/code&gt;, and we see in the YAML file above after Istio&amp;rsquo;s injection is complete that the init command for this container is.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;istio-iptables -p &lt;span class=&#34;m&#34;&gt;15001&lt;/span&gt; -z &lt;span class=&#34;m&#34;&gt;15006&lt;/span&gt; -u &lt;span class=&#34;m&#34;&gt;1337&lt;/span&gt; -m REDIRECT -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; -x &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -b &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; -d 15090,15020
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s check the container&amp;rsquo;s Dockerfile again to see how &lt;code&gt;ENTRYPOINT&lt;/code&gt; determines what commands are executed at startup.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# ommit&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# The pilot-agent will bootstrap Envoy.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENTRYPOINT&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/local/bin/pilot-agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We see that the entrypoint of the &lt;code&gt;istio-init&lt;/code&gt; container is the &lt;code&gt;/usr/local/bin/istio-iptables&lt;/code&gt; command line, and the location of the code for this command-line tool is in the &lt;code&gt;tools/istio-iptables&lt;/code&gt; directory of the Istio source code repository.&lt;/p&gt;
&lt;h3 id=&#34;init-container-initiation&#34;&gt;Init container initiation&lt;/h3&gt;
&lt;p&gt;The Init container&amp;rsquo;s entrypoint is the &lt;code&gt;istio-iptables&lt;/code&gt; command line, which is used as follows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Usage:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  istio-iptables &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;flags&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Flags:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -n, --dry-run                                     Do not call any external dependencies like iptables
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -p, --envoy-port string                           Specify the envoy port to which redirect all TCP traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;nv&#34;&gt;$ENVOY_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 15001&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help                                        &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; istio-iptables
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -z, --inbound-capture-port string                 Port to which all inbound TCP traffic to the pod/VM should be redirected to &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;nv&#34;&gt;$INBOUND_CAPTURE_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 15006&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --iptables-probe-port string                  &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; listen port &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; failure detection &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;s2&#34;&gt;&amp;#34;15002&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -m, --istio-inbound-interception-mode string      The mode used to redirect inbound connections to Envoy, either &lt;span class=&#34;s2&#34;&gt;&amp;#34;REDIRECT&amp;#34;&lt;/span&gt; or &lt;span class=&#34;s2&#34;&gt;&amp;#34;TPROXY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -b, --istio-inbound-ports string                  Comma separated list of inbound ports &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; which traffic is to be redirected to Envoy &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;optional&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;. The wildcard character &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; can be used to configure redirection &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; all ports. An empty list will disable
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -t, --istio-inbound-tproxy-mark string
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -r, --istio-inbound-tproxy-route-table string
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -d, --istio-local-exclude-ports string            Comma separated list of inbound ports to be excluded from redirection to Envoy &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;optional&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;. Only applies  when all inbound traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;i.e. &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is being redirected &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default to &lt;span class=&#34;nv&#34;&gt;$ISTIO_LOCAL_EXCLUDE_PORTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -o, --istio-local-outbound-ports-exclude string   Comma separated list of outbound ports to be excluded from redirection to Envoy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -i, --istio-service-cidr string                   Comma separated list of IP ranges in CIDR form to redirect to envoy &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;optional&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;. The wildcard character &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; can be used to redirect all outbound traffic. An empty list will disable all outbound
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -x, --istio-service-exclude-cidr string           Comma separated list of IP ranges in CIDR form to be excluded from redirection. Only applies when all  outbound traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;i.e. &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is being redirected &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default to &lt;span class=&#34;nv&#34;&gt;$ISTIO_SERVICE_EXCLUDE_CIDR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -k, --kube-virt-interfaces string                 Comma separated list of virtual interfaces whose inbound traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;from VM&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; will be treated as outbound
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --probe-timeout duration                      failure detection timeout &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default 5s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -g, --proxy-gid string                            Specify the GID of the user &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; which the redirection is not applied. &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;same default value as -u param&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -u, --proxy-uid string                            Specify the UID of the user &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; which the redirection is not applied. Typically, this is the UID of the proxy container
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -f, --restore-format                              Print iptables rules in iptables-restore interpretable format &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --run-validation                              Validate iptables
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --skip-rule-apply                             Skip iptables apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above incoming parameters are reassembled into iptables rules. For more information on how to use this command, visit &lt;code&gt;tools/istio-iptables/pkg/cmd/root.go&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The significance of the container&amp;rsquo;s existence is that it allows the sidecar agent to intercept all inbound and outbound traffic to the pod, redirect all inbound traffic to port 15006 (sidecar) except port 15090 (used by Prometheus) and port 15092 (Ingress Gateway), and then intercept outbound traffic from the application container which is processed by sidecar (listening through port 15001) and then outbound. See the &lt;a href=&#34;https://istio.io/docs/ops/deployment/requirements/&#34; title=&#34;official Istio documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official Istio documentation&lt;/a&gt; for port usage in Istio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Command analysis&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is the purpose of this start-up command.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forward all traffic from the application container to port 15006 of the sidecar.&lt;/li&gt;
&lt;li&gt;Run with the &lt;code&gt;istio-proxy&lt;/code&gt; user identity, with a UID of 1337, the userspace where the sidecar is located, which is the default user used by the &lt;code&gt;istio-proxy&lt;/code&gt; container, see the runAsUser field of the YAML configuration.&lt;/li&gt;
&lt;li&gt;Use the default REDIRECT mode to redirect traffic.&lt;/li&gt;
&lt;li&gt;Redirect all outbound traffic to the sidecar proxy (via port 15001).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because the Init container is automatically terminated after initialization, since we cannot log into the container to view the iptables information, the Init container initialization results are retained in the application container and sidecar container.&lt;/p&gt;
&lt;h2 id=&#34;pod-startup-sequence&#34;&gt;Pod Startup Sequence&lt;/h2&gt;
&lt;p&gt;The startup process of a Pod with Sidecar auto-injection enabled is as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Init container starts first, injecting iptables rules into the Pod for transparent traffic interception.&lt;/li&gt;
&lt;li&gt;Subsequently, Kubernetes starts the containers in the order in which they are declared in the Pod Spec, but this is non-blocking and there is no guarantee that the first container will be started before the next one is started. &lt;code&gt;istio-proxy&lt;/code&gt; container starts, &lt;code&gt;pilot-agent&lt;/code&gt; will be the PID 1 process, which is the first process in the Linux user space and is responsible for pulling up other processes and handling zombie processes. The &lt;code&gt;pilot-agent&lt;/code&gt; generates the Envoy bootstrap configuration and fork the envoy process; the application container is started almost simultaneously with the &lt;code&gt;istio-proxy&lt;/code&gt; container, and the readiness probe comes in handy to prevent the container inside the Pod from receiving outside traffic before it is ready to start. Kubernetes will perform a readiness check on port 15021 of the &lt;code&gt;istio-proxy&lt;/code&gt; container, and the &lt;code&gt;kubelet&lt;/code&gt; will not route traffic to the Pod until the &lt;code&gt;isito-proxy&lt;/code&gt; has finished booting.&lt;/li&gt;
&lt;li&gt;After the Pod is started, the &lt;code&gt;pilot-agent&lt;/code&gt; becomes a daemon that monitors the rest of the system and provides Envoy with Bootstrap configuration, certificates, health checks, configuration hot reloading, identity support, and process lifecycle management, among other things.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;pod-container-startup-order-problem&#34;&gt;Pod container startup order problem&lt;/h2&gt;
&lt;p&gt;In the process of Pod startup there is a container startup order problem. Suppose the following situation, the application container starts first and requests other services, when the &lt;code&gt;istio-proxy&lt;/code&gt; container has not finished starting, then the request will fail, and if your application is not robust enough, it may even cause the application container to crash and the Pod to restart. The solution for this situation is to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modify the application to add timeout retries.&lt;/li&gt;
&lt;li&gt;Increase the start delay of the process in the application container, for example by increasing the sleep time.&lt;/li&gt;
&lt;li&gt;Add a &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/&#34; title=&#34;postStart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;postStart&lt;/a&gt; configuration to the application container to detect if the application process has finished starting, and Kubernetes will only mark the Pod&amp;rsquo;s state as &lt;code&gt;Running&lt;/code&gt; if the detection is successful.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This article walks you through the process of starting Pods in the Istio data plane, and the issues that arise because of the order in which Pod contenters are started.&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>Istio Component Ports and Functions in Details</title>
      <link>https://jimmysong.io/en/blog/istio-components-and-ports/</link>
      <pubDate>Sun, 08 May 2022 10:18:40 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/istio-components-and-ports/</guid>
      <description>
        
        
        &lt;p&gt;In my last two blogs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/en/blog/sidecar-injection-iptables-and-traffic-routing/&#34; title=&#34;Sidecar injection, transparent traffic hijacking , and routing process in Istio explained in detail&#34;&gt;Sidecar injection, transparent traffic hijacking , and routing process in Istio explained in detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/&#34; title=&#34;Traffic types and iptables rules in Istio sidecar explained&#34;&gt;Traffic types and iptables rules in Istio sidecar explained&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I gave you a detailed overview of the traffic in the Istio data plane, but the data plane does not exist in isolation. This article will show you the ports and their usages for each component of both the control plane and data plane in Istio, which will help you understand the relationship between these flows and troubleshoot them.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Firstly, I will show you a global schematic. The following figure shows the components of a sidecar in the Istio data plane, and the objects that interact with it.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/istio-ports-components.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/istio-ports-components.webp&#34; data-width=&#34;5230&#34; data-height=&#34;2506&#34; alt=&#34;image&#34; data-caption=&#34;Istio components&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istio components&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;We can use the &lt;code&gt;nsenter&lt;/code&gt; command to enter the namespace of the &lt;code&gt;productpage&lt;/code&gt; Pod of the Bookinfo example and see the information about the ports it is listening on internally.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/sidecar-ports.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/sidecar-ports.webp&#34; data-width=&#34;1566&#34; data-height=&#34;740&#34; alt=&#34;image&#34; data-caption=&#34;Istio sidecar ports&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istio sidecar ports&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;From the figure, we can see that besides the port 9080 that the &lt;code&gt;productpage&lt;/code&gt; application listens to, the Sidecar container also listens to a large number of other ports, such as 15000, 15001, 15004, 15006, 15021, 15090, etc. You can learn about the ports used in Istio in the Istio documentation.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s go back into the &lt;code&gt;productpage&lt;/code&gt; Pod and use the &lt;code&gt;lsof -i&lt;/code&gt; command to see the ports it has open, as shown in the following figure.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/product-pod-ports.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/product-pod-ports.webp&#34; data-width=&#34;2714&#34; data-height=&#34;902&#34; alt=&#34;image&#34; data-caption=&#34;Productpage Pod ports&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Productpage Pod ports&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;We can see that there is a TCP connection established between the &lt;code&gt;pilot-agent&lt;/code&gt; and &lt;code&gt;istiod&lt;/code&gt;, the port in the listening described above, and the TCP connection established inside the Pod, which corresponds to the figure at the beginning of the article.&lt;/p&gt;
&lt;p&gt;The root process of the Sidecar container (&lt;code&gt;istio-proxy&lt;/code&gt;) is &lt;code&gt;pilot-agent&lt;/code&gt;, and the startup command is shown below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/sidecar-procecces.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/sidecar-procecces.webp&#34; data-width=&#34;2768&#34; data-height=&#34;540&#34; alt=&#34;image&#34; data-caption=&#34;Internal procecces in Sidecar&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Internal procecces in Sidecar&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;As we can see from the figure, the PID of its &lt;code&gt;pilot-agent&lt;/code&gt; process is 1, and it forked the Envoy process.&lt;/p&gt;
&lt;p&gt;Check the ports it opens in Istiod, as shown in the figure below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/sidecar-lsof.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/sidecar-lsof.webp&#34; data-width=&#34;2544&#34; data-height=&#34;760&#34; alt=&#34;image&#34; data-caption=&#34;Istiod ports&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istiod ports&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;We can see the ports that are listened to, the inter-process and remote communication connections.&lt;/p&gt;
&lt;h2 id=&#34;ports-usage-overview&#34;&gt;Ports usage overview&lt;/h2&gt;
&lt;p&gt;These ports can play a pivotal role when you are troubleshooting. They are described below according to the component and function in which the port is located.&lt;/p&gt;
&lt;h3 id=&#34;ports-in-istiod&#34;&gt;Ports in Istiod&lt;/h3&gt;
&lt;p&gt;The ports in Istiod are relatively few and single-function.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;9876: ControlZ user interface, exposing information about Istiod&amp;rsquo;s processes&lt;/li&gt;
&lt;li&gt;8080: Istiod debugging port, through which the configuration and status information of the grid can be queried&lt;/li&gt;
&lt;li&gt;15010: Exposes the xDS API and issues plain text certificates&lt;/li&gt;
&lt;li&gt;15012: Same functionality as port 15010, but uses TLS communication&lt;/li&gt;
&lt;li&gt;15014: Exposes control plane metrics to Prometheus&lt;/li&gt;
&lt;li&gt;15017: Sidecar injection and configuration validation port&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ports-in-sidecar&#34;&gt;Ports in sidecar&lt;/h2&gt;
&lt;p&gt;From the above, we see that there are numerous ports in the sidecar.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;15000: Envoy admin interface, which you can use to query and modify the configuration of Envoy Proxy. Please refer to&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/operations/admin&#34; title=&#34; Envoy documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Envoy documentation&lt;/a&gt; for details.&lt;/li&gt;
&lt;li&gt;15001: Used to handle outbound traffic.&lt;/li&gt;
&lt;li&gt;15004: Debug port (explained further below).&lt;/li&gt;
&lt;li&gt;15006: Used to handle inbound traffic.&lt;/li&gt;
&lt;li&gt;15020: Summarizes statistics, perform health checks on Envoy and DNS agents, and debugs &lt;code&gt;pilot-agent&lt;/code&gt; processes, as explained in detail below.&lt;/li&gt;
&lt;li&gt;15021: Used for sidecar health checks to determine if the injected Pod is ready to receive traffic. We set up the readiness probe on the &lt;code&gt;/healthz/ready&lt;/code&gt; path on this port, and Istio hands off the sidecar readiness checks to kubelet.&lt;/li&gt;
&lt;li&gt;15053: Local DNS proxy for scenarios where the cluster&amp;rsquo;s internal domain names are not resolved by Kubernetes DNS.&lt;/li&gt;
&lt;li&gt;15090: Envoy Prometheus query port, through which the &lt;code&gt;pilot-agent&lt;/code&gt; will scratch metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above ports can be divided into the following categories.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Responsible for inter-process communication, such as 15001, 15006, 15053&lt;/li&gt;
&lt;li&gt;Health check and information statistics, e.g. 150021, 15090&lt;/li&gt;
&lt;li&gt;Debugging: 15000, 15004&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s look at the key ports in detail.&lt;/p&gt;
&lt;h2 id=&#34;15000&#34;&gt;15000&lt;/h2&gt;
&lt;p&gt;15000 is Envoy&amp;rsquo;s Admin interface, which allows us to modify Envoy and get a view and query metrics and configurations.&lt;/p&gt;
&lt;p&gt;The Admin interface consists of a REST API with multiple endpoints and a simple user interface. You can enable the Envoy Admin interface view in the &lt;code&gt;productpage&lt;/code&gt; Pod using the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl -n default port-forward deploy/productpage-v1 &lt;span class=&#34;m&#34;&gt;15000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Visit &lt;code&gt;http://localhost:15000&lt;/code&gt; in your browser and you will see the Envoy Admin interface as shown below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/envoy-admin.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/envoy-admin.webp&#34; data-width=&#34;660&#34; data-height=&#34;1158&#34; alt=&#34;image&#34; data-caption=&#34;Envoy Admin interface&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Envoy Admin interface&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;15004&#34;&gt;15004&lt;/h2&gt;
&lt;p&gt;With the &lt;code&gt;pilot-agent&lt;/code&gt; proxy &lt;code&gt;istiod&lt;/code&gt; debug endpoint on port 8080, you can access localhost&amp;rsquo;s port 15004 in the data plane Pod to query the grid information, which has the same effect as port 8080 below.&lt;/p&gt;
&lt;h2 id=&#34;8080&#34;&gt;8080&lt;/h2&gt;
&lt;p&gt;You can also forward &lt;code&gt;istiod&lt;/code&gt; port 8080 locally by running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl -n istio-system port-forward deploy/istiod &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Visit &lt;code&gt;http://localhost:8080/debug&lt;/code&gt; in your browser and you will see the debug endpoint as shown in the figure below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/pilot-debug-console.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/pilot-debug-console.webp&#34; data-width=&#34;1080&#34; data-height=&#34;1243&#34; alt=&#34;image&#34; data-caption=&#34;Pilot Debug Console&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Pilot Debug Console&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;Of course, this is only one way to get the mesh information and debug the mesh, you can also use &lt;code&gt;istioctl&lt;/code&gt; command or Kiali to debug it, which will be more efficient and intuitive.&lt;/p&gt;
&lt;h2 id=&#34;15020&#34;&gt;15020&lt;/h2&gt;
&lt;p&gt;Port 15020 has three main usages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Aggregating metrics: You can query port 15090 for Envoy&amp;rsquo;s metrics, or you can configure it to query the application&amp;rsquo;s metrics, aggregating Envoy, application, and its own metrics for Prometheus to collect. The corresponding debug endpoint is &lt;code&gt;/stats/prometheus&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Performing health checks on Envoy and DNS agent: the corresponding debug endpoints are &lt;code&gt;/healthz/ready&lt;/code&gt; and &lt;code&gt;/app-health&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Debugging &lt;code&gt;pilot-agent&lt;/code&gt; processes: the corresponding debug endpoints are &lt;code&gt;/quitquitquit&lt;/code&gt;, &lt;code&gt;debug/ndsz&lt;/code&gt; and &lt;code&gt;/debug/pprof&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following figure shows the debugging information you see when you open &lt;code&gt;http://localhost:15020/debug/pprof&lt;/code&gt; in your browser.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/pprof.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/pprof.webp&#34; data-width=&#34;1761&#34; data-height=&#34;1080&#34; alt=&#34;image&#34; data-caption=&#34;pprof endpoint&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;pprof endpoint&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;The information in the figure shows the stack information of the &lt;code&gt;pilot-agent&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;By understanding the component ports in Istio, you should have a better understanding of the relationship between the components in Istio and their internal traffic. Being familiar with the functions of these ports will help in troubleshooting the mesh.&lt;/p&gt;

      </description>
    </item>
                           
    <item>
      <title>Traffic Types and Iptables Rules in Istio Sidecar Explained</title>
      <link>https://jimmysong.io/en/blog/istio-sidecar-traffic-types/</link>
      <pubDate>Sat, 07 May 2022 11:18:40 +0800</pubDate>
      <author>Jimmy Song</author>
      <guid>https://jimmysong.io/en/blog/istio-sidecar-traffic-types/</guid>
      <description>
        
        
        &lt;p&gt;As we know that Istio uses iptables for traffic hijacking, where the iptables rule chains has one called &lt;code&gt;ISTIO_OUTPUT&lt;/code&gt;, which contains the following rules.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;Rule&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;target&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;out&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;source&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;destination&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;RETURN&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;lo&lt;/td&gt;
          &lt;td&gt;127.0.0.6&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;ISTIO_IN_REDIRECT&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;lo&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;!localhost owner UID match 1337&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;RETURN&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;lo&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;anywhere !owner UID match 1337&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;RETURN&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;anywhere owner UID match 1337&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;ISTIO_IN_REDIRECT&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;lo&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;!localhost owner GID match 1337&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;RETURN&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;lo&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;anywhere !owner GID match 1337&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;RETURN&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;anywhere owner GID match 1337&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;RETURN&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;localhost&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;9&lt;/td&gt;
          &lt;td&gt;ISTIO_REDIRECT&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;any&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
          &lt;td&gt;anywhere&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The sidecar applies these rules to deal with different types of traffic. This article will show you the six types of traffic and their iptables rules in Istio sidecar.&lt;/p&gt;
&lt;h2 id=&#34;iptables-traffic-routing-in-sidecar&#34;&gt;iptables Traffic Routing in Sidecar&lt;/h2&gt;
&lt;p&gt;The following list summarizes the six types of traffic in Sidecar.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remote service accessing local service: Remote Pod -&amp;gt; Local Pod&lt;/li&gt;
&lt;li&gt;Local service accessing remote service: Local Pod -&amp;gt; Remote Pod&lt;/li&gt;
&lt;li&gt;Prometheus crawling metrics of local service: Prometheus -&amp;gt; Local Pod&lt;/li&gt;
&lt;li&gt;Traffic between Local Pod service: Local Pod -&amp;gt; Local Pod&lt;/li&gt;
&lt;li&gt;Inter-process TCP traffic within Envoy&lt;/li&gt;
&lt;li&gt;Sidecar to Istiod traffic&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following will explain the iptables routing rules within Sidecar for each scenario, which specifies which rule in ISTIO_OUTPUT is used for routing.&lt;/p&gt;
&lt;h2 id=&#34;type-1-remote-pod---local-pod&#34;&gt;Type 1: Remote Pod -&amp;gt; Local Pod&lt;/h2&gt;
&lt;p&gt;The following are the iptables rules for remote services, applications or clients accessing the local pod IP of the data plane.&lt;/p&gt;
&lt;p&gt;Remote Pod -&amp;gt; &lt;code&gt;RREROUTING&lt;/code&gt; -&amp;gt; &lt;code&gt;ISTIO_INBOUND&lt;/code&gt; -&amp;gt; &lt;code&gt;ISTIO_IN_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15006 (Inbound) -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 1&lt;/strong&gt; -&amp;gt; &lt;code&gt; POSTROUTING&lt;/code&gt; -&amp;gt; Local Pod&lt;/p&gt;
&lt;p&gt;We see that the traffic only passes through the Envoy 15006 Inbound port once. The following diagram shows this scenario of the iptables rules.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/remote-pod-local-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/remote-pod-local-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Remote Pod to Local Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Remote Pod to Local Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-2-local-pod---remote-pod&#34;&gt;Type 2: Local Pod -&amp;gt; Remote Pod&lt;/h2&gt;
&lt;p&gt;The following are the iptables rules that the local pod IP goes through to access the remote service.&lt;/p&gt;
&lt;p&gt;Local Pod-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 9&lt;/strong&gt; -&amp;gt; &lt;code&gt;ISTIO_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15001 (Outbound) -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 4&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt; -&amp;gt; Remote Pod&lt;/p&gt;
&lt;p&gt;We see that the traffic only goes through the Envoy 15001 Outbound port.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/local-pod-remote-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/local-pod-remote-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Local Pod to Remote Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Local Pod to Remote Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;The traffic in both scenarios above passes through Envoy only once because only one scenario occurs in that Pod, sending or receiving requests.&lt;/p&gt;
&lt;h2 id=&#34;type-3-prometheus---local-pod&#34;&gt;Type 3: Prometheus -&amp;gt; Local Pod&lt;/h2&gt;
&lt;p&gt;Prometheus traffic that grabs data plane metrics does not have to go through the Envoy proxy.&lt;/p&gt;
&lt;p&gt;These traffic pass through the following iptables rules.&lt;/p&gt;
&lt;p&gt;Prometheus-&amp;gt; &lt;code&gt;RREROUTING&lt;/code&gt; -&amp;gt; &lt;code&gt;ISTIO_INBOUND&lt;/code&gt; (traffic destined for ports 15020, 15090 will go to &lt;code&gt;INPUT&lt;/code&gt;) -&amp;gt; &lt;code&gt;INPUT&lt;/code&gt;  -&amp;gt; Local Pod&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/prometheus-local-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/prometheus-local-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Prometheus to Local Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Prometheus to Local Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-4-local-pod---local-pod&#34;&gt;Type 4: Local Pod -&amp;gt; Local Pod&lt;/h2&gt;
&lt;p&gt;A Pod may simultaneously have two or more services. If the Local Pod accesses a service on the current Pod, the traffic will go through Envoy 15001 and Envoy 15006 ports to reach the service port of the Local Pod.&lt;/p&gt;
&lt;p&gt;The iptables rules for this traffic are as follows.&lt;/p&gt;
&lt;p&gt;Local Pod-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 9&lt;/strong&gt; -&amp;gt; &lt;code&gt;ISTIO_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15001（Outbound）-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 2&lt;/strong&gt; -&amp;gt; &lt;code&gt;ISTIO_IN_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15006（Inbound）-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 1&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt; -&amp;gt; Local Pod&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/local-pod-local-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/local-pod-local-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Local Pod to Local Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Local Pod to Local Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-5-inter-process-tcp-traffic-within-envoy&#34;&gt;Type 5: Inter-process TCP traffic within Envoy&lt;/h2&gt;
&lt;p&gt;Envoy internal processes with UID and GID 1337 will communicate with each other using lo NICs and localhost domains.&lt;/p&gt;
&lt;p&gt;The iptables rules that these flows pass through are as follows.&lt;/p&gt;
&lt;p&gt;Envoy process (Localhost) -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 8&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt; -&amp;gt; Envoy process (Localhost)&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/envoy-internal-tcp-traffic.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/envoy-internal-tcp-traffic.svg&#34; alt=&#34;image&#34; data-caption=&#34;Envoy inter-process TCP traffic&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Envoy inter-process TCP traffic&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-6-sidecar-to-istiod-traffic&#34;&gt;Type 6: Sidecar to Istiod traffic&lt;/h2&gt;
&lt;p&gt;Sidecar needs access to Istiod to synchronize its configuration so that Envoy will have traffic sent to Istiod.&lt;/p&gt;
&lt;p&gt;The iptables rules that this traffic passes through are as follows.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pilot-agent&lt;/code&gt; process -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;Istio_OUTPUT&lt;/code&gt; RULE 9&lt;/strong&gt; -&amp;gt; Envoy 15001 (Outbound Handler) -&amp;gt; OUTPUT -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 4&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt;  -&amp;gt; Istiod&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/sidecar-istiod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/sidecar-istiod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Sidecar to Istiod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Sidecar to Istiod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;All the sidecar proxies that Istio injects into the Pod or installed in the virtual machine form the data plane of the service mesh, which is also the main workload location of Istio. In my next blog, I will take you through the ports of each component in Envoy and their functions, so that we can have a more comprehensive understanding of the traffic in Istio.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
