<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song â€“ Sidecar</title>
    <link>https://jimmysong.io/en/tags/sidecar/</link>
    <description>Recent content in Sidecar on Jimmy Song</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Jun 2024 16:23:50 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/en/tags/sidecar/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Deep Dive into Istio 1.22: New Features and Practical Application Advice</title>
      <link>https://jimmysong.io/en/blog/what-is-new-in-istio-1-22/</link>
      <pubDate>Fri, 21 Jun 2024 16:23:50 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/what-is-new-in-istio-1-22/</guid>
      <description>
        
        
        &lt;p&gt;The recent &lt;a href=&#34;https://istio.io/latest/news/releases/1.22.x/announcing-1.22/&#34; title=&#34;release of Istio 1.22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;release of Istio 1.22&lt;/a&gt; includes a plethora of significant updates. This article shares the new features and application recommendations brought by this release.&lt;/p&gt;
&lt;h2 id=&#34;ambient-mode-enters-beta-phase&#34;&gt;Ambient Mode Enters Beta Phase&lt;/h2&gt;
&lt;p&gt;Although Ambient mode has now entered the Beta phase, this does not mean we can completely do away with Sidecars. While the Istio official claims that Ambient mode simplifies operations and significantly reduces memory and CPU usage, it still has limitations and potential complexity issues. For example, while Sidecars are eliminated, the introduction of new ztunnel and waypoint components may pose new challenges. For more detailed information about Ambient mode entering Beta, refer to the &lt;a href=&#34;https://istio.io/latest/blog/2024/ambient-reaches-beta/&#34; title=&#34;Istio official blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio official blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Challenges Introduced by Ambient Mode&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Management of L7 traffic in Ambient mode is not yet mature&lt;/li&gt;
&lt;li&gt;mTLS is forced to be enabled at the namespace level, meaning you cannot disable mTLS in Ambient mode&lt;/li&gt;
&lt;li&gt;Zero-downtime upgrades in Ambient mode have not been resolved&lt;/li&gt;
&lt;li&gt;Lack of best practices for coexistence and migration from Sidecar mode&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For a comparison of Sidecar mode and Ambient mode, see &lt;a href=&#34;https://jimmysong.io/blog/istio-ambient-mode-limitations/&#34; title=&#34;Analysis of Limitations in Istio Ambient Mode&#34;&gt;Analysis of Limitations in Istio Ambient Mode&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    If you are just starting with Istio, especially if you only need to automatically enable mTLS for services, you can consider using Ambient mode at this stage. However, for L7 functionalities, it is recommended to wait until Ambient mode is fully mature before considering it for production use.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;istio-api-upgrades&#34;&gt;Istio API Upgrades&lt;/h2&gt;
&lt;p&gt;In the Istio 1.22 release, key APIs related to traffic management, security, and telemetry have officially been upgraded to the &lt;code&gt;v1&lt;/code&gt; version. You only need to change the API version of your existing configuration to &lt;code&gt;v1&lt;/code&gt;, with no other changes needed. These APIs are already mature, and you can safely use the &lt;code&gt;v1&lt;/code&gt; version. For environments requiring high stability, Istio has added &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/validating-admission-policy/&#34; title=&#34;validating admission policies&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;validating admission policies&lt;/a&gt; to ensure that only &lt;code&gt;v1&lt;/code&gt; APIs and fields can be used in the Istio API.&lt;/p&gt;
&lt;p&gt;For example, the following AuthorizationPolicy example.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;security.istio.io/v1beta1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;AuthorizationPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;finance-to-supply-chain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;finance&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;finance-app&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ALLOW&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespaces&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;finance&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;to&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;operation&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;methods&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;paths&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/api/supply1&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/api/supply2&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;when&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;request.headers[:authority]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;values&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;supply-chain-service.supply-chain.svc.cluster.local&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Other extension-type APIs such as &lt;code&gt;EnvoyFilter&lt;/code&gt;, &lt;code&gt;WasmPlugin&lt;/code&gt;, &lt;code&gt;ProxyConfig&lt;/code&gt; are still in alpha or beta stages. For more information on API upgrades, please refer to the &lt;a href=&#34;https://istio.io/latest/blog/2024/v1-apis/&#34; title=&#34;v1 API blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;v1 API blog&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    For commonly used functionalities, you can confidently use the &lt;code&gt;v1&lt;/code&gt; API. For extension-type APIs that are not yet stable, enabling validating admission policies is recommended to ensure system stability.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;gateway-api-upgrade&#34;&gt;Gateway API Upgrade&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jimmysong.io/blog/why-gateway-api-is-the-future-of-ingress-and-mesh/&#34; title=&#34;Gateway API&#34;&gt;Gateway API&lt;/a&gt; has been updated to version 1.1.0 and is now widely available. This update extends Istio&amp;rsquo;s traffic management capabilities, but it is important to be cautious of compatibility issues between Istio&amp;rsquo;s native APIs and the Gateway API when migrating to the new API to avoid relying on features that are not fully mature yet. For more details, check out the &lt;a href=&#34;https://istio.io/latest/blog/2024/gateway-mesh-ga/&#34; title=&#34;Gateway API v1.1 blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gateway API v1.1 blog&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    For existing deployments that are already stable using Istio API, continue using them, especially in scenarios requiring advanced features. For new deployments, consider using the stable version of the Gateway API to take advantage of its modern traffic management capabilities. Due to existing compatibility issues, do not rashly migrate to the Gateway API, as it may not be worth the risk.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;delta-xds-enabled-by-default&#34;&gt;Delta xDS Enabled by Default&lt;/h2&gt;
&lt;p&gt;Istio 1.22 version now has delta xDS enabled by default, which is a mechanism to optimize configuration distribution. Compared to the traditional State of the World (SotW) mode, delta xDS only sends changed configurations to the Envoy proxies, thereby significantly reducing the amount of data transmitted over the network and the resource consumption of the control plane. This change is particularly suitable for large-scale deployment environments with frequent configuration updates, improving the efficiency and performance of configuration updates. Additionally, delta xDS also helps manage configuration updates more efficiently in complex network environments or dynamically changing configurations.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Recommendation
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    The delta xDS has been developed several versions ago but was not enabled by default. Now that this feature is stable, you can use it with confidence.
  &lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;For more on xDS, refer to the &lt;a href=&#34;https://jimmysong.io/blog/istio-delta-xds-for-envoy/&#34; title=&#34;Introduction to Envoy xDS and Configuration Distribution Process in Istio&#34;&gt;Introduction to Envoy xDS and Configuration Distribution Process in Istio&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;path-template-support-with-wildcards-for-authorizationpolicy&#34;&gt;Path Template Support with Wildcards for AuthorizationPolicy&lt;/h3&gt;
&lt;p&gt;In Istio 1.22, &lt;code&gt;AuthorizationPolicy&lt;/code&gt; has added support for &lt;a href=&#34;https://istio.io/latest/docs/reference/config/security/authorization-policy/#Operation&#34; title=&#34;path templates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;path templates&lt;/a&gt;, greatly enhancing the flexibility and precision of path matching. Prior to this, &lt;code&gt;AuthorizationPolicy&lt;/code&gt; did not support wildcards in path configurations. This feature allows for defining paths in HTTP requests using URI templates based on Envoy, including simple wildcards (&lt;code&gt;*&lt;/code&gt; and &lt;code&gt;**&lt;/code&gt;) or named variables, enabling precise matching of single or multiple path components. For example, the path template &lt;code&gt;/foo/{*}&lt;/code&gt; can match &lt;code&gt;/foo/bar&lt;/code&gt; but not &lt;code&gt;/foo/bar/baz&lt;/code&gt;, while &lt;code&gt;/foo/{**}/&lt;/code&gt; can match any path starting with &lt;code&gt;/foo/&lt;/code&gt;. This flexible path template design is particularly suitable for dynamic and complex routing rules, further strengthening Istio&amp;rsquo;s security policy toolbox.&lt;/p&gt;
&lt;p&gt;The diagram below illustrates the wildcard rules for path matching in AuthorizationPolicy.&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/what-is-new-in-istio-1-22/dfe9a5d5e2bc91e91e7e24017f56a3db.svg&#34; data-img=&#34;/en/blog/what-is-new-in-istio-1-22/dfe9a5d5e2bc91e91e7e24017f56a3db.svg&#34; alt=&#34;image&#34; data-caption=&#34;AuthorizationPolicy Path Matching Wildcard Rules&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;AuthorizationPolicy Path Matching Wildcard Rules&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;For more on the specific applications and rules of path templates, you can refer to &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/path/match/uri_template/v3/uri_template_match.proto&#34; title=&#34;Envoy&amp;amp;rsquo;s official documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&amp;rsquo;s official documentation&lt;/a&gt;.&lt;/p&gt;



&lt;div class=&#34;alert alert-note-container&#34;&gt;
  
  &lt;div class=&#34;alert-note-title px-2 py-2&#34;&gt;
    Tip
  &lt;/div&gt;
  
  &lt;div class=&#34;alert-note px-2&#34;&gt;
    &lt;code&gt;AuthorizationPolicy&lt;/code&gt; finally supports templates in path matching, so you no longer need to manually add paths one by one in your configurations.
  &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The Istio 1.22 release introduces several important updates and improvements. Although some features are widely publicized, they require detailed assessment and appropriate testing in practical use. Hopefully, this blog post helps you understand and apply these new features more deeply to achieve the best results in practice.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/blog/2024/05/09/gateway-api-v1-1/&#34; title=&#34;Gateway API v1.1: Service mesh, GRPCRoute, and a whole lot more - kubernetes.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gateway API v1.1: Service mesh, GRPCRoute, and a whole lot more - kubernetes.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/istio-service-mesh-new-features-v1_22/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Istio CNI Unveiled: Streamlining Service Mesh Connectivity</title>
      <link>https://jimmysong.io/en/blog/istio-cni-deep-dive/</link>
      <pubDate>Sun, 19 May 2024 18:54:49 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/istio-cni-deep-dive/</guid>
      <description>
        
        
        &lt;p&gt;This article delves into the design principles, implementation, and how Ambient Mode enhances security and permission management in Istio CNI plugins. The content includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security risks of Init containers and their solutions.&lt;/li&gt;
&lt;li&gt;Working principles and advantages of Istio CNI.&lt;/li&gt;
&lt;li&gt;Implementation mechanism of Ambient Mode and its integration with CNI.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;overview-of-istio-network-requirements-and-solutions&#34;&gt;Overview of Istio Network Requirements and Solutions&lt;/h2&gt;
&lt;p&gt;Istio service mesh intercepts and manages application traffic through the Sidecar mode. This mode injects a Sidecar Proxy and init containers into application pods and uses iptables rules to manage network traffic. For detailed deployment and operation processes, please refer to &lt;a href=&#34;https://jimmysong.io/en/blog/sidecar-injection-iptables-and-traffic-routing/&#34; title=&#34;Understanding Sidecar Injection, Transparent Traffic Hijacking, and Traffic Routing in Istio&#34;&gt;Understanding Sidecar Injection, Transparent Traffic Hijacking, and Traffic Routing in Istio&lt;/a&gt;. Although this method is effective on most Kubernetes platforms, the high dependency on privileges raises security concerns in multi-tenant environments.&lt;/p&gt;
&lt;h3 id=&#34;limitations-of-istio-init&#34;&gt;Limitations of Istio-init&lt;/h3&gt;
&lt;p&gt;During its initial network configuration, Istio adopted the &lt;code&gt;istio-init&lt;/code&gt; container to initialize traffic interception rules, requiring containers to have advanced permissions to modify network configurations like IPTables rules. While this method effectively manages traffic, it significantly increases permission requirements and security risks. According to the &lt;a href=&#34;https://istio.io/latest/docs/setup/additional-setup/cni/&#34; title=&#34;Istio documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio documentation&lt;/a&gt;, the &lt;code&gt;istio-init&lt;/code&gt; container is injected into pods within the Istio mesh by default to hijack network traffic to Istio&amp;rsquo;s Sidecar proxy. This process requires granting the Service Account deploying the pod the &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container&#34; title=&#34;&amp;lt;code&amp;gt;NET_ADMIN&amp;lt;/code&amp;gt; container permission&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;NET_ADMIN&lt;/code&gt; container permission&lt;/a&gt;, which may contradict the security policies of some organizations.&lt;/p&gt;
&lt;h3 id=&#34;istio-cni-plugin&#34;&gt;Istio CNI Plugin&lt;/h3&gt;
&lt;p&gt;In response to this challenge, the Istio community introduced the &lt;a href=&#34;https://github.com/istio/istio/tree/master/cni&#34; title=&#34;Istio CNI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio CNI&lt;/a&gt; plugin, which avoids the need for init containers, allowing direct manipulation at the Kubernetes network layer, thereby reducing permission requirements and simplifying the deployment process, but with CNI compatibility issues.&lt;/p&gt;
&lt;h3 id=&#34;introduction-of-ambient-mode&#34;&gt;Introduction of Ambient Mode&lt;/h3&gt;
&lt;p&gt;Istio&amp;rsquo;s Ambient Mode is an innovative sidecar-less solution that enhances network flexibility and security by &lt;a href=&#34;https://jimmysong.io/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/&#34; title=&#34;using Geneve tunnels&#34;&gt;using Geneve tunnels&lt;/a&gt; or Istio CNI.&lt;/p&gt;
&lt;p&gt;Only recently has the Istio community introduced a &lt;a href=&#34;https://istio.io/latest/blog/2024/inpod-traffic-redirection-ambient/&#34; title=&#34;universal solution compatible with any CNI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;universal solution compatible with any CNI&lt;/a&gt;. This mode addresses compatibility issues with any CNI, enabling Istio to more effectively manage traffic between services without affecting existing network policies.&lt;/p&gt;
&lt;h2 id=&#34;security-considerations-for-net_admin-permissions&#34;&gt;Security Considerations for NET_ADMIN Permissions&lt;/h2&gt;
&lt;p&gt;In containerized environments like Kubernetes and Docker, &lt;code&gt;NET_ADMIN&lt;/code&gt; permissions allow processes within containers to perform extensive network-related operations, including modifying iptables rules, changing network interface configurations, managing IP routing tables, and controlling kernel parameters related to networking. However, the use of these permissions raises security concerns, especially regarding overprivileged access and potential attack surfaces.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Best practices include&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Limiting scope of use&lt;/strong&gt;: Grant &lt;code&gt;NET_ADMIN&lt;/code&gt; permissions only when necessary and restrict them through Kubernetes network policies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Continuous monitoring and auditing&lt;/strong&gt;: Enforce strict logging and monitoring for containers using &lt;code&gt;NET_ADMIN&lt;/code&gt; permissions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;working-principles-of-istio-cni-plugin&#34;&gt;Working Principles of Istio CNI Plugin&lt;/h2&gt;
&lt;p&gt;The Istio CNI plugin is a binary file installed as an agent in the file system of each node. The following flowchart illustrates the working principles of the Istio CNI node agent:&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-cni-deep-dive/f9aacefbdd8fb77216546b53eda78079.svg&#34; data-img=&#34;/en/blog/istio-cni-deep-dive/f9aacefbdd8fb77216546b53eda78079.svg&#34; alt=&#34;image&#34; data-caption=&#34;Mermaid Diagram&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Mermaid Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Istio CNI Node Agent&lt;/strong&gt; acts as an agent installed on each node.&lt;/li&gt;
&lt;li&gt;It installs the Istio CNI plugin and updates the nodeâ€™s CNI configuration.&lt;/li&gt;
&lt;li&gt;The agent monitors the CNI plugin and config paths for changes.&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;Sidecar Mode&lt;/strong&gt;, it handles sidecar networking setups using iptables for pods.&lt;/li&gt;
&lt;li&gt;In &lt;strong&gt;Ambient Mode&lt;/strong&gt;, it synchronizes pod events to an ambient watch server, which then configures iptables within pods.&lt;/li&gt;
&lt;li&gt;Nodes require elevated privileges like &lt;code&gt;CAP_SYS_ADMIN&lt;/code&gt;, &lt;code&gt;CAP_NET_ADMIN&lt;/code&gt;, and &lt;code&gt;CAP_NET_RAW&lt;/code&gt; to function in either mode.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resolving-conflicts-between-istio-ambient-mode-and-kubernetes-cni&#34;&gt;Resolving Conflicts Between Istio Ambient Mode and Kubernetes CNI&lt;/h2&gt;
&lt;p&gt;Istio&amp;rsquo;s Ambient Mode is designed to adapt to all CNIs, transparently handling traffic redirection within pods using ztunnel without affecting existing CNI configurations. In this mode, Ambient Mode manages traffic through ztunnel to flow through the Istio service mesh, while standard CNIs focus on providing standardized network access for pods.&lt;/p&gt;
&lt;p&gt;The primary responsibilities of CNI are to address network connectivity between Kubernetes Pods, such as assigning IP addresses and forwarding packets. In contrast, Ambient Mode needs to import traffic into ztunnel, which may be incompatible with CNI&amp;rsquo;s network configuration. The main issues include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mainstream CNI network configurations may conflict with Istio&amp;rsquo;s CNI extensions, causing interruptions in traffic processing.&lt;/li&gt;
&lt;li&gt;Using Istio CNI may affect the execution of these policies if the deployed network policies depend on CNI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To address these issues, traffic redirection is managed by running ztunnel in the same user space as the pod, avoiding conflicts with the kernel space modified by CNI. Thus, pods can connect directly to ztunnel, bypassing the influence of CNI.&lt;/p&gt;
&lt;p&gt;The following sequence diagram describes the process under Ambient mode:&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-cni-deep-dive/aa0472b4061c1a2ca71146c3243d2318.svg&#34; data-img=&#34;/en/blog/istio-cni-deep-dive/aa0472b4061c1a2ca71146c3243d2318.svg&#34; alt=&#34;image&#34; data-caption=&#34;Mermaid Diagram&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Mermaid Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ambient CNI Agent&lt;/strong&gt; initiates interactions by listening for UDS events signaling pod creations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ambient Watch Server&lt;/strong&gt; modifies iptables within pods to redirect traffic to ztunnel as needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;ztunnel&lt;/strong&gt; establishes connections and handles network traffic redirection within the Kubernetes cluster.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;resolving-conflicts-between-istio-ambient-mode-and-kubernetes-cni-1&#34;&gt;Resolving Conflicts Between Istio Ambient Mode and Kubernetes CNI&lt;/h2&gt;
&lt;p&gt;To mitigate these conflicts, Istio&amp;rsquo;s Ambient Mode avoids dependencies on the kernel space modified by CNI:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Run ztunnel in user space&lt;/strong&gt;: This strategy allows ztunnel to run in the same user space as the pod, avoiding direct conflicts with CNI.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ensure CNI compatibility&lt;/strong&gt;: Istio CNI configurations must be carried out without affecting existing CNI plugin configurations, ensuring normal communication between pods and traffic management.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These measures help Istio&amp;rsquo;s Ambient Mode effectively manage traffic between services without disrupting existing CNI plugins.&lt;/p&gt;
&lt;h2 id=&#34;optimized-traffic-management-with-istio-ambient-mode&#34;&gt;Optimized Traffic Management with Istio Ambient Mode&lt;/h2&gt;
&lt;p&gt;Istio&amp;rsquo;s Ambient Mode employs an advanced traffic forwarding mechanism through &lt;strong&gt;node-local Ztunnel&lt;/strong&gt;, allowing for the establishment of listening sockets within a Pod&amp;rsquo;s network namespace. This setup facilitates effective redirection of encrypted (mTLS) and plaintext traffic originating from the service mesh. Not only does this approach enhance the flexibility of traffic management, but it also prevents potential conflicts with existing CNI plugins. Below is a detailed implementation flow of this mode:&lt;/p&gt;

&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-cni-deep-dive/82841d7a95a98947c4ec6c7113c2ffb0.svg&#34; data-img=&#34;/en/blog/istio-cni-deep-dive/82841d7a95a98947c4ec6c7113c2ffb0.svg&#34; alt=&#34;image&#34; data-caption=&#34;Mermaid Diagram&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Mermaid Diagram&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;The specific steps involved are as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Detection of Tags&lt;/strong&gt;: The Istio CNI node agent detects Pods tagged with &lt;code&gt;istio.io/dataplane-mode=ambient&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Triggering the CNI Plugin&lt;/strong&gt;: Based on Pod events (either a new start or an existing Pod joining the mesh), the CNI plugin is triggered, leading the Istio CNI node agent to configure traffic redirection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Configuring Redirection Rules&lt;/strong&gt;: Network redirection rules are set up within the Podâ€™s network namespace to intercept and redirect traffic to the node-local ztunnel proxy.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Establishment of Listening Sockets&lt;/strong&gt;: The node-local ztunnel creates listening sockets within the Pod&amp;rsquo;s network namespace to enable traffic redirection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Traffic Handling&lt;/strong&gt;: The node-local ztunnel handles encrypted (mTLS) and plaintext traffic within the mesh, ensuring secure and efficient data transfer.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Through this approach, Istio Ambient Mode provides a more effective and secure solution for managing inter-service traffic in Kubernetes environments.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This article thoroughly analyzes the design principles, implementation, and advantages of the Istio CNI plugin, particularly how Istio CNI addresses the permission and security issues present in traditional &lt;code&gt;istio-init&lt;/code&gt; methods. Through these innovations, Istio has made significant progress in network security and operational simplicity, providing a more flexible and efficient method for implementing Istio in Kubernetes environments.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/istio-cni-unveiled-streamlining-service-mesh-connectivity/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt; .&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Analysis of the Limitations of Istio Ambient Mode</title>
      <link>https://jimmysong.io/en/blog/istio-ambient-mode-limitations/</link>
      <pubDate>Thu, 16 May 2024 11:28:34 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/istio-ambient-mode-limitations/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://istio.io/latest/news/releases/1.22.x/announcing-1.22/&#34; title=&#34;Istio 1.22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio 1.22&lt;/a&gt; marks the official beta release of Ambient mode, accompanied by a blog titled &lt;a href=&#34;https://istio.io/latest/blog/2024/ambient-reaches-beta/&#34; title=&#34;Say goodbye to your sidecars: Istio&amp;amp;rsquo;s ambient mode reaches Beta in v1.22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Say goodbye to your sidecars: Istio&amp;rsquo;s ambient mode reaches Beta in v1.22&lt;/a&gt;, claiming that Layer 4 and Layer 7 features are now production-ready. This milestone was actually announced by the community at KubeCon EU a month earlier. Such exciting promotion seems to suggest that we can completely abandon the Sidecar mode, but is this really the case?&lt;/p&gt;
&lt;h3 id=&#34;why-not-hurry-to-say-goodbye-to-sidecar-mode&#34;&gt;Why Not Hurry to Say Goodbye to Sidecar Mode?&lt;/h3&gt;
&lt;p&gt;While I am open to new technologies, it may be premature to completely abandon the Sidecar mode. Each mode has its specific application scenarios, advantages, and disadvantages. Below, I will share in detail some of the limitations of the Ambient mode compared to the Sidecar mode, to help everyone better understand the differences between the two.&lt;/p&gt;
&lt;h3 id=&#34;key-differences-between-ambient-mode-and-sidecar-mode&#34;&gt;Key Differences Between Ambient Mode and Sidecar Mode&lt;/h3&gt;
&lt;h4 id=&#34;traffic-management&#34;&gt;Traffic Management&lt;/h4&gt;
&lt;p&gt;The L7 traffic management support in Ambient mode is not yet mature and production-ready. In contrast, Sidecar mode is more stable and reliable in this regard.&lt;/p&gt;
&lt;h4 id=&#34;security&#34;&gt;Security&lt;/h4&gt;
&lt;p&gt;In Ambient mode, mTLS is enforced at the namespace level, whereas Sidecar mode gives users more flexibility to choose whether to enable mTLS. This flexibility is particularly important for certain application scenarios.&lt;/p&gt;
&lt;h4 id=&#34;observability&#34;&gt;Observability&lt;/h4&gt;
&lt;p&gt;For L7 layer telemetry data, it remains questionable whether Ambient mode can provide precise monitoring and tracing for each pod as effectively as Sidecar mode. Sidecar mode has been widely validated in terms of observability and is more mature.&lt;/p&gt;
&lt;h4 id=&#34;operations&#34;&gt;Operations&lt;/h4&gt;
&lt;p&gt;In terms of deployment, Ambient mode recommends using Helm and only supports the Kubernetes platform, while Sidecar mode also supports VMs and hybrid cloud environments. Additionally, Ambient mode has not yet received official support from major cloud vendors. During upgrades, Ambient mode has a larger blast radius and currently does not support canary releases, recommending blue-green deployments instead. There is still a lack of best practices for migrating from Sidecar mode to Ambient mode or coexisting with both.&lt;/p&gt;
&lt;h4 id=&#34;extensibility&#34;&gt;Extensibility&lt;/h4&gt;
&lt;p&gt;Currently, support for Wasm plugins in Ambient mode is still unclear, whereas Sidecar mode already has relatively complete support in this area.&lt;/p&gt;
&lt;h4 id=&#34;other-functional-features&#34;&gt;Other Functional Features&lt;/h4&gt;
&lt;p&gt;While Dual Stack mode is still experimental in Sidecar mode, it has at least some implementation, whereas it remains unclear whether Ambient mode supports this feature.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Although Istio 1.22 brings the exciting Ambient mode, we need to carefully consider these limitations and differences before completely saying goodbye to Sidecar mode. Each mode has its unique advantages and applicable scenarios, and users should make informed choices based on their own needs. I will continue to test and track Ambient mode, so stay tuned to this blog for more in-depth analysis.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Istio Data Plane Pod Startup Process Explained</title>
      <link>https://jimmysong.io/en/blog/istio-pod-process-lifecycle/</link>
      <pubDate>Thu, 12 May 2022 19:18:40 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/istio-pod-process-lifecycle/</guid>
      <description>
        
        
        &lt;p&gt;This article will explain:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The sidecar auto-injection process in Istio&lt;/li&gt;
&lt;li&gt;The init container startup process in Istio&lt;/li&gt;
&lt;li&gt;The startup process of a Pod with Sidecar auto-injection enabled&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following figure shows the components of a Pod in the Istio data plane after it has been started.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          
          &lt;picture&gt;
           &lt;source srcset=&#34;https://jimmysong.io/en/blog/istio-pod-process-lifecycle/istio-pod-lifecycle_hu3408ee6e17045341efe452297cc25150_52504_1200x813_resize_q75_h2_lanczos.webp&#34; type=&#34;image/webp&#34;&gt;
           &lt;img src=&#34;https://jimmysong.io/en/blog/istio-pod-process-lifecycle/istio-pod-lifecycle.jpg&#34; data-img=&#34;/en/blog/istio-pod-process-lifecycle/istio-pod-lifecycle.jpg&#34; data-width=&#34;1200&#34; data-height=&#34;813&#34; alt=&#34;image&#34; data-caption=&#34;Istio data plane pod&#34;&gt;
          &lt;/picture&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istio data plane pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;sidecar-injection-in-istio&#34;&gt;Sidecar injection in Istio&lt;/h2&gt;
&lt;p&gt;The following two sidecar injection methods are available in Istio.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Manual injection using &lt;code&gt;istioctl&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Kubernetes-based &lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/&#34; title=&#34;mutating webhook admission controller&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mutating webhook admission controller&lt;/a&gt; automatic sidecar injection method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Whether injected manually or automatically, SIDECAR&amp;rsquo;s injection process follows the following steps.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Kubernetes needs to know the Istio cluster to which the sidecar to be injected is connected and its configuration.&lt;/li&gt;
&lt;li&gt;Kubernetes needs to know the configuration of the sidecar container itself to be injected, such as the image address, boot parameters, etc.&lt;/li&gt;
&lt;li&gt;Kubernetes injects the above configuration into the side of the application container by the sidecar injection template and the configuration parameters of the above configuration-filled sidecar.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The sidecar can be injected manually using the following command.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;istioctl kube-inject -f &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;YAML_FILE&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; kuebectl apply -f -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command is injected using Istio&amp;rsquo;s built-in sidecar configuration, see the &lt;a href=&#34;https://istio.io&#34; title=&#34;Istio official website&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio official website&lt;/a&gt; for details on how to use Istio below.&lt;/p&gt;
&lt;p&gt;When the injection is complete you will see that Istio has injected initContainer and sidecar proxy-related configurations into the original pod template.&lt;/p&gt;
&lt;h3 id=&#34;init-container&#34;&gt;Init container&lt;/h3&gt;
&lt;p&gt;The Init container is a dedicated container that runs before the application container is launched and is used to contain some utilities or installation scripts that do not exist in the application image.&lt;/p&gt;
&lt;p&gt;Multiple Init containers can be specified in a Pod, and if more than one is specified, the Init containers will run sequentially. The next Init container can only be run if the previous Init container must run successfully. Kubernetes only initializes the Pod and runs the application container when all the Init containers have been run.&lt;/p&gt;
&lt;p&gt;The Init container uses Linux Namespace, so it has a different view of the file system than the application container. As a result, they can have access to Secret in a way that application containers cannot.&lt;/p&gt;
&lt;p&gt;During Pod startup, the Init container starts sequentially after the network and data volumes are initialized. Each container must be successfully exited before the next container can be started. If exiting due to an error will result in a container startup failure, it will retry according to the policy specified in the Pod&amp;rsquo;s restartPolicy. However, if the Pod&amp;rsquo;s restartPolicy is set to Always, the restartPolicy is used when the Init container failed.&lt;/p&gt;
&lt;p&gt;The Pod will not become Ready until all Init containers are successful. The ports of the Init containers will not be aggregated in the Service. The Pod that is being initialized is in the Pending state but should set the Initializing state to true. The Init container will automatically terminate once it is run.&lt;/p&gt;
&lt;h2 id=&#34;sidecar-injection-example-analysis&#34;&gt;Sidecar injection example analysis&lt;/h2&gt;
&lt;p&gt;For a detailed YAML configuration for the bookinfo applications, see &lt;code&gt;bookinfo.yaml&lt;/code&gt; for the official Istio YAML of productpage in the bookinfo sample.&lt;/p&gt;
&lt;p&gt;The following will be explained in the following terms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Injection of Sidecar containers&lt;/li&gt;
&lt;li&gt;Creation of iptables rules&lt;/li&gt;
&lt;li&gt;The detailed process of routing&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;apps/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deployment&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage-v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;replicas&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;template&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;bookinfo-productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/examples-bookinfo-productpage-v1:1.15.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;imagePullPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;IfNotPresent&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumeMounts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;mountPath&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;/tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;volumes&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;emptyDir&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s see the &lt;code&gt;productpage&lt;/code&gt; containerâ€™s &lt;a href=&#34;https://github.com/istio/istio/blob/master/samples/bookinfo/src/productpage/Dockerfile&#34; title=&#34;Dockerfile&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dockerfile&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;FROM&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; python:3.7.4-slim&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; requirements.txt ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; pip install --no-cache-dir -r requirements.txt&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; test-requirements.txt ./&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; pip install --no-cache-dir -r test-requirements.txt&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; productpage.py /opt/microservices/&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; tests/unit/* /opt/microservices/&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; templates /opt/microservices/templates&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; static /opt/microservices/static&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;COPY&lt;/span&gt; requirements.txt /opt/microservices/&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ARG&lt;/span&gt; flood_factor&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENV&lt;/span&gt; FLOOD_FACTOR &lt;span class=&#34;si&#34;&gt;${&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;flood_factor&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;:-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;EXPOSE&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 9080&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;WORKDIR&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; /opt/microservices&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;RUN&lt;/span&gt; python -m unittest discover&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;USER&lt;/span&gt;&lt;span class=&#34;s&#34;&gt; 1&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;CMD&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;python&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;productpage.py&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;9080&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We see that &lt;code&gt;ENTRYPOINT&lt;/code&gt; is not configured in Dockerfile, so &lt;code&gt;CMD&lt;/code&gt;â€™s configuration &lt;code&gt;python productpage.py 9080&lt;/code&gt; will be the default &lt;code&gt;ENTRYPOINT&lt;/code&gt;, keep that in mind and look at the configuration after the sidecar injection.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ istioctl kube-inject -f samples/bookinfo/platform/kube/bookinfo.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We intercept only a portion of the YAML configuration that is part of the Deployment configuration associated with productpage.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/examples-bookinfo-productpage-v1:1.15.0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# application image&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;productpage&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;9080&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;sidecar&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;$(POD_NAMESPACE).svc.cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;configPath&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;/etc/istio/proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;binaryPath&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;/usr/local/bin/envoy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;serviceCluster&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;productpage.$(POD_NAMESPACE)&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;drainDuration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;45s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;parentShutdownDuration&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;1m0s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;discoveryAddress&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;istiod.istio-system.svc:15012&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;zipkinAddress&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;zipkin.istio-system:9411&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;proxyLogLevel=warning&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;proxyComponentLogLevel=misc:error&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;connectTimeout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;10s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;proxyAdminPort&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15000&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;concurrency&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;controlPlaneAuthPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;NONE&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;dnsRefreshRate&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;300s&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;statusPort&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15020&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;trust-domain=cluster.local&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- --&lt;span class=&#34;l&#34;&gt;controlPlaneBootstrap=false&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/proxyv2:1.5.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# sidecar proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-proxy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;containerPort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15090&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;http-envoy-prom&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;initContainers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;istio-iptables&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15001&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;15006&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;1337&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;REDIRECT&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- -&lt;span class=&#34;l&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;m&#34;&gt;15090&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;15020&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;image&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;docker.io/istio/proxyv2:1.5.1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# init container&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-init&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Istio&amp;rsquo;s configuration for application Pod injection mainly includes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Init container &lt;code&gt;istio-init&lt;/code&gt;: for setting iptables port forwarding in the pod&lt;/li&gt;
&lt;li&gt;Sidecar container &lt;code&gt;istio-proxy&lt;/code&gt;: running a sidecar proxy, such as Envoy or MOSN&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The two containers will be parsed separately.&lt;/p&gt;
&lt;h2 id=&#34;init-container-analysis&#34;&gt;Init container analysis&lt;/h2&gt;
&lt;p&gt;The Init container that Istio injects into the pod is named &lt;code&gt;istio-init&lt;/code&gt;, and we see in the YAML file above after Istio&amp;rsquo;s injection is complete that the init command for this container is.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;istio-iptables -p &lt;span class=&#34;m&#34;&gt;15001&lt;/span&gt; -z &lt;span class=&#34;m&#34;&gt;15006&lt;/span&gt; -u &lt;span class=&#34;m&#34;&gt;1337&lt;/span&gt; -m REDIRECT -i &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; -x &lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt; -b &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt; -d 15090,15020
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Let&amp;rsquo;s check the container&amp;rsquo;s Dockerfile again to see how &lt;code&gt;ENTRYPOINT&lt;/code&gt; determines what commands are executed at startup.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c&#34;&gt;# ommit&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# The pilot-agent will bootstrap Envoy.&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;ENTRYPOINT&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/usr/local/bin/pilot-agent&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;We see that the entrypoint of the &lt;code&gt;istio-init&lt;/code&gt; container is the &lt;code&gt;/usr/local/bin/istio-iptables&lt;/code&gt; command line, and the location of the code for this command-line tool is in the &lt;code&gt;tools/istio-iptables&lt;/code&gt; directory of the Istio source code repository.&lt;/p&gt;
&lt;h3 id=&#34;init-container-initiation&#34;&gt;Init container initiation&lt;/h3&gt;
&lt;p&gt;The Init container&amp;rsquo;s entrypoint is the &lt;code&gt;istio-iptables&lt;/code&gt; command line, which is used as follows.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Usage:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  istio-iptables &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;flags&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Flags:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -n, --dry-run                                     Do not call any external dependencies like iptables
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -p, --envoy-port string                           Specify the envoy port to which redirect all TCP traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;nv&#34;&gt;$ENVOY_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 15001&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -h, --help                                        &lt;span class=&#34;nb&#34;&gt;help&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; istio-iptables
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -z, --inbound-capture-port string                 Port to which all inbound TCP traffic to the pod/VM should be redirected to &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;nv&#34;&gt;$INBOUND_CAPTURE_PORT&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 15006&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --iptables-probe-port string                  &lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt; listen port &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; failure detection &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;s2&#34;&gt;&amp;#34;15002&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -m, --istio-inbound-interception-mode string      The mode used to redirect inbound connections to Envoy, either &lt;span class=&#34;s2&#34;&gt;&amp;#34;REDIRECT&amp;#34;&lt;/span&gt; or &lt;span class=&#34;s2&#34;&gt;&amp;#34;TPROXY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -b, --istio-inbound-ports string                  Comma separated list of inbound ports &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; which traffic is to be redirected to Envoy &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;optional&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;. The wildcard character &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; can be used to configure redirection &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; all ports. An empty list will disable
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -t, --istio-inbound-tproxy-mark string
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -r, --istio-inbound-tproxy-route-table string
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -d, --istio-local-exclude-ports string            Comma separated list of inbound ports to be excluded from redirection to Envoy &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;optional&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;. Only applies  when all inbound traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;i.e. &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is being redirected &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default to &lt;span class=&#34;nv&#34;&gt;$ISTIO_LOCAL_EXCLUDE_PORTS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -o, --istio-local-outbound-ports-exclude string   Comma separated list of outbound ports to be excluded from redirection to Envoy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -i, --istio-service-cidr string                   Comma separated list of IP ranges in CIDR form to redirect to envoy &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;optional&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;. The wildcard character &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt; can be used to redirect all outbound traffic. An empty list will disable all outbound
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -x, --istio-service-exclude-cidr string           Comma separated list of IP ranges in CIDR form to be excluded from redirection. Only applies when all  outbound traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;i.e. &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; is being redirected &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default to &lt;span class=&#34;nv&#34;&gt;$ISTIO_SERVICE_EXCLUDE_CIDR&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -k, --kube-virt-interfaces string                 Comma separated list of virtual interfaces whose inbound traffic &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;from VM&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; will be treated as outbound
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --probe-timeout duration                      failure detection timeout &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default 5s&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -g, --proxy-gid string                            Specify the GID of the user &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; which the redirection is not applied. &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;same default value as -u param&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -u, --proxy-uid string                            Specify the UID of the user &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; which the redirection is not applied. Typically, this is the UID of the proxy container
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  -f, --restore-format                              Print iptables rules in iptables-restore interpretable format &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;default &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --run-validation                              Validate iptables
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      --skip-rule-apply                             Skip iptables apply
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above incoming parameters are reassembled into iptables rules. For more information on how to use this command, visit &lt;code&gt;tools/istio-iptables/pkg/cmd/root.go&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The significance of the container&amp;rsquo;s existence is that it allows the sidecar agent to intercept all inbound and outbound traffic to the pod, redirect all inbound traffic to port 15006 (sidecar) except port 15090 (used by Prometheus) and port 15092 (Ingress Gateway), and then intercept outbound traffic from the application container which is processed by sidecar (listening through port 15001) and then outbound. See the &lt;a href=&#34;https://istio.io/docs/ops/deployment/requirements/&#34; title=&#34;official Istio documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;official Istio documentation&lt;/a&gt; for port usage in Istio.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Command analysis&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here is the purpose of this start-up command.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Forward all traffic from the application container to port 15006 of the sidecar.&lt;/li&gt;
&lt;li&gt;Run with the &lt;code&gt;istio-proxy&lt;/code&gt; user identity, with a UID of 1337, the userspace where the sidecar is located, which is the default user used by the &lt;code&gt;istio-proxy&lt;/code&gt; container, see the runAsUser field of the YAML configuration.&lt;/li&gt;
&lt;li&gt;Use the default REDIRECT mode to redirect traffic.&lt;/li&gt;
&lt;li&gt;Redirect all outbound traffic to the sidecar proxy (via port 15001).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Because the Init container is automatically terminated after initialization, since we cannot log into the container to view the iptables information, the Init container initialization results are retained in the application container and sidecar container.&lt;/p&gt;
&lt;h2 id=&#34;pod-startup-sequence&#34;&gt;Pod Startup Sequence&lt;/h2&gt;
&lt;p&gt;The startup process of a Pod with Sidecar auto-injection enabled is as follows.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The Init container starts first, injecting iptables rules into the Pod for transparent traffic interception.&lt;/li&gt;
&lt;li&gt;Subsequently, Kubernetes starts the containers in the order in which they are declared in the Pod Spec, but this is non-blocking and there is no guarantee that the first container will be started before the next one is started. &lt;code&gt;istio-proxy&lt;/code&gt; container starts, &lt;code&gt;pilot-agent&lt;/code&gt; will be the PID 1 process, which is the first process in the Linux user space and is responsible for pulling up other processes and handling zombie processes. The &lt;code&gt;pilot-agent&lt;/code&gt; generates the Envoy bootstrap configuration and fork the envoy process; the application container is started almost simultaneously with the &lt;code&gt;istio-proxy&lt;/code&gt; container, and the readiness probe comes in handy to prevent the container inside the Pod from receiving outside traffic before it is ready to start. Kubernetes will perform a readiness check on port 15021 of the &lt;code&gt;istio-proxy&lt;/code&gt; container, and the &lt;code&gt;kubelet&lt;/code&gt; will not route traffic to the Pod until the &lt;code&gt;isito-proxy&lt;/code&gt; has finished booting.&lt;/li&gt;
&lt;li&gt;After the Pod is started, the &lt;code&gt;pilot-agent&lt;/code&gt; becomes a daemon that monitors the rest of the system and provides Envoy with Bootstrap configuration, certificates, health checks, configuration hot reloading, identity support, and process lifecycle management, among other things.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;pod-container-startup-order-problem&#34;&gt;Pod container startup order problem&lt;/h2&gt;
&lt;p&gt;In the process of Pod startup there is a container startup order problem. Suppose the following situation, the application container starts first and requests other services, when the &lt;code&gt;istio-proxy&lt;/code&gt; container has not finished starting, then the request will fail, and if your application is not robust enough, it may even cause the application container to crash and the Pod to restart. The solution for this situation is to&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modify the application to add timeout retries.&lt;/li&gt;
&lt;li&gt;Increase the start delay of the process in the application container, for example by increasing the sleep time.&lt;/li&gt;
&lt;li&gt;Add a &lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/&#34; title=&#34;postStart&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;postStart&lt;/a&gt; configuration to the application container to detect if the application process has finished starting, and Kubernetes will only mark the Pod&amp;rsquo;s state as &lt;code&gt;Running&lt;/code&gt; if the detection is successful.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This article walks you through the process of starting Pods in the Istio data plane, and the issues that arise because of the order in which Pod contenters are started.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Istio Component Ports and Functions in Details</title>
      <link>https://jimmysong.io/en/blog/istio-components-and-ports/</link>
      <pubDate>Sun, 08 May 2022 10:18:40 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/istio-components-and-ports/</guid>
      <description>
        
        
        &lt;p&gt;In my last two blogs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/en/blog/sidecar-injection-iptables-and-traffic-routing/&#34; title=&#34;Sidecar injection, transparent traffic hijacking , and routing process in Istio explained in detail&#34;&gt;Sidecar injection, transparent traffic hijacking , and routing process in Istio explained in detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/&#34; title=&#34;Traffic types and iptables rules in Istio sidecar explained&#34;&gt;Traffic types and iptables rules in Istio sidecar explained&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I gave you a detailed overview of the traffic in the Istio data plane, but the data plane does not exist in isolation. This article will show you the ports and their usages for each component of both the control plane and data plane in Istio, which will help you understand the relationship between these flows and troubleshoot them.&lt;/p&gt;
&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Firstly, I will show you a global schematic. The following figure shows the components of a sidecar in the Istio data plane, and the objects that interact with it.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/istio-ports-components.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/istio-ports-components.webp&#34; data-width=&#34;5230&#34; data-height=&#34;2506&#34; alt=&#34;image&#34; data-caption=&#34;Istio components&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istio components&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;We can use the &lt;code&gt;nsenter&lt;/code&gt; command to enter the namespace of the &lt;code&gt;productpage&lt;/code&gt; Pod of the Bookinfo example and see the information about the ports it is listening on internally.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/sidecar-ports.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/sidecar-ports.webp&#34; data-width=&#34;1566&#34; data-height=&#34;740&#34; alt=&#34;image&#34; data-caption=&#34;Istio sidecar ports&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istio sidecar ports&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;From the figure, we can see that besides the port 9080 that the &lt;code&gt;productpage&lt;/code&gt; application listens to, the Sidecar container also listens to a large number of other ports, such as 15000, 15001, 15004, 15006, 15021, 15090, etc. You can learn about the ports used in Istio in the &lt;a href=&#34;https://istio.io/latest/docs/ops/deployment/requirements/&#34; title=&#34;Istio documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s go back into the &lt;code&gt;productpage&lt;/code&gt; Pod and use the &lt;code&gt;lsof -i&lt;/code&gt; command to see the ports it has open, as shown in the following figure.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/product-pod-ports.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/product-pod-ports.webp&#34; data-width=&#34;2714&#34; data-height=&#34;902&#34; alt=&#34;image&#34; data-caption=&#34;Productpage Pod ports&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Productpage Pod ports&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;We can see that there is a TCP connection established between the &lt;code&gt;pilot-agent&lt;/code&gt; and &lt;code&gt;istiod&lt;/code&gt;, the port in the listening described above, and the TCP connection established inside the Pod, which corresponds to the figure at the beginning of the article.&lt;/p&gt;
&lt;p&gt;The root process of the Sidecar container (&lt;code&gt;istio-proxy&lt;/code&gt;) is &lt;code&gt;pilot-agent&lt;/code&gt;, and the startup command is shown below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/sidecar-procecces.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/sidecar-procecces.webp&#34; data-width=&#34;2768&#34; data-height=&#34;540&#34; alt=&#34;image&#34; data-caption=&#34;Internal procecces in Sidecar&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Internal procecces in Sidecar&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;As we can see from the figure, the PID of its &lt;code&gt;pilot-agent&lt;/code&gt; process is 1, and it forked the Envoy process.&lt;/p&gt;
&lt;p&gt;Check the ports it opens in Istiod, as shown in the figure below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/sidecar-lsof.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/sidecar-lsof.webp&#34; data-width=&#34;2544&#34; data-height=&#34;760&#34; alt=&#34;image&#34; data-caption=&#34;Istiod ports&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Istiod ports&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;We can see the ports that are listened to, the inter-process and remote communication connections.&lt;/p&gt;
&lt;h2 id=&#34;ports-usage-overview&#34;&gt;Ports usage overview&lt;/h2&gt;
&lt;p&gt;These ports can play a pivotal role when you are troubleshooting. They are described below according to the component and function in which the port is located.&lt;/p&gt;
&lt;h3 id=&#34;ports-in-istiod&#34;&gt;Ports in Istiod&lt;/h3&gt;
&lt;p&gt;The ports in Istiod are relatively few and single-function.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;9876: ControlZ user interface, exposing information about Istiod&amp;rsquo;s processes&lt;/li&gt;
&lt;li&gt;8080: Istiod debugging port, through which the configuration and status information of the grid can be queried&lt;/li&gt;
&lt;li&gt;15010: Exposes the xDS API and issues plain text certificates&lt;/li&gt;
&lt;li&gt;15012: Same functionality as port 15010, but uses TLS communication&lt;/li&gt;
&lt;li&gt;15014: Exposes control plane metrics to Prometheus&lt;/li&gt;
&lt;li&gt;15017: Sidecar injection and configuration validation port&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ports-in-sidecar&#34;&gt;Ports in sidecar&lt;/h2&gt;
&lt;p&gt;From the above, we see that there are numerous ports in the sidecar.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;15000: Envoy admin interface, which you can use to query and modify the configuration of Envoy Proxy. Please refer to&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/operations/admin&#34; title=&#34; Envoy documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; Envoy documentation&lt;/a&gt; for details.&lt;/li&gt;
&lt;li&gt;15001: Used to handle outbound traffic.&lt;/li&gt;
&lt;li&gt;15004: Debug port (explained further below).&lt;/li&gt;
&lt;li&gt;15006: Used to handle inbound traffic.&lt;/li&gt;
&lt;li&gt;15020: Summarizes statistics, perform health checks on Envoy and DNS agents, and debugs &lt;code&gt;pilot-agent&lt;/code&gt; processes, as explained in detail below.&lt;/li&gt;
&lt;li&gt;15021: Used for sidecar health checks to determine if the injected Pod is ready to receive traffic. We set up the readiness probe on the &lt;code&gt;/healthz/ready&lt;/code&gt; path on this port, and Istio hands off the sidecar readiness checks to kubelet.&lt;/li&gt;
&lt;li&gt;15053: Local DNS proxy for scenarios where the cluster&amp;rsquo;s internal domain names are not resolved by Kubernetes DNS.&lt;/li&gt;
&lt;li&gt;15090: Envoy Prometheus query port, through which the &lt;code&gt;pilot-agent&lt;/code&gt; will scratch metrics.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above ports can be divided into the following categories.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Responsible for inter-process communication, such as 15001, 15006, 15053&lt;/li&gt;
&lt;li&gt;Health check and information statistics, e.g. 150021, 15090&lt;/li&gt;
&lt;li&gt;Debugging: 15000, 15004&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&amp;rsquo;s look at the key ports in detail.&lt;/p&gt;
&lt;h2 id=&#34;15000&#34;&gt;15000&lt;/h2&gt;
&lt;p&gt;15000 is Envoy&amp;rsquo;s Admin interface, which allows us to modify Envoy and get a view and query metrics and configurations.&lt;/p&gt;
&lt;p&gt;The Admin interface consists of a REST API with multiple endpoints and a simple user interface. You can enable the Envoy Admin interface view in the &lt;code&gt;productpage&lt;/code&gt; Pod using the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl -n default port-forward deploy/productpage-v1 &lt;span class=&#34;m&#34;&gt;15000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Visit &lt;code&gt;http://localhost:15000&lt;/code&gt; in your browser and you will see the Envoy Admin interface as shown below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/envoy-admin.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/envoy-admin.webp&#34; data-width=&#34;660&#34; data-height=&#34;1158&#34; alt=&#34;image&#34; data-caption=&#34;Envoy Admin interface&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Envoy Admin interface&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;15004&#34;&gt;15004&lt;/h2&gt;
&lt;p&gt;With the &lt;code&gt;pilot-agent&lt;/code&gt; proxy &lt;code&gt;istiod&lt;/code&gt; debug endpoint on port 8080, you can access localhost&amp;rsquo;s port 15004 in the data plane Pod to query the grid information, which has the same effect as port 8080 below.&lt;/p&gt;
&lt;h2 id=&#34;8080&#34;&gt;8080&lt;/h2&gt;
&lt;p&gt;You can also forward &lt;code&gt;istiod&lt;/code&gt; port 8080 locally by running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl -n istio-system port-forward deploy/istiod &lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Visit &lt;code&gt;http://localhost:8080/debug&lt;/code&gt; in your browser and you will see the debug endpoint as shown in the figure below.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/pilot-debug-console.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/pilot-debug-console.webp&#34; data-width=&#34;1080&#34; data-height=&#34;1243&#34; alt=&#34;image&#34; data-caption=&#34;Pilot Debug Console&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Pilot Debug Console&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;Of course, this is only one way to get the mesh information and debug the mesh, you can also use &lt;code&gt;istioctl&lt;/code&gt; command or Kiali to debug it, which will be more efficient and intuitive.&lt;/p&gt;
&lt;h2 id=&#34;15020&#34;&gt;15020&lt;/h2&gt;
&lt;p&gt;Port 15020 has three main usages.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Aggregating metrics: You can query port 15090 for Envoy&amp;rsquo;s metrics, or you can configure it to query the application&amp;rsquo;s metrics, aggregating Envoy, application, and its own metrics for Prometheus to collect. The corresponding debug endpoint is &lt;code&gt;/stats/prometheus&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Performing health checks on Envoy and DNS agent: the corresponding debug endpoints are &lt;code&gt;/healthz/ready&lt;/code&gt; and &lt;code&gt;/app-health&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Debugging &lt;code&gt;pilot-agent&lt;/code&gt; processes: the corresponding debug endpoints are &lt;code&gt;/quitquitquit&lt;/code&gt;, &lt;code&gt;debug/ndsz&lt;/code&gt; and &lt;code&gt;/debug/pprof&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following figure shows the debugging information you see when you open &lt;code&gt;http://localhost:15020/debug/pprof&lt;/code&gt; in your browser.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-components-and-ports/pprof.webp&#34; data-img=&#34;/en/blog/istio-components-and-ports/pprof.webp&#34; data-width=&#34;1761&#34; data-height=&#34;1080&#34; alt=&#34;image&#34; data-caption=&#34;pprof endpoint&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;pprof endpoint&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;The information in the figure shows the stack information of the &lt;code&gt;pilot-agent&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;By understanding the component ports in Istio, you should have a better understanding of the relationship between the components in Istio and their internal traffic. Being familiar with the functions of these ports will help in troubleshooting the mesh.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Traffic Types and Iptables Rules in Istio Sidecar Explained</title>
      <link>https://jimmysong.io/en/blog/istio-sidecar-traffic-types/</link>
      <pubDate>Sat, 07 May 2022 11:18:40 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/istio-sidecar-traffic-types/</guid>
      <description>
        
        
        &lt;p&gt;As we know that Istio uses iptables for traffic hijacking, where the iptables rule chains has one called &lt;code&gt;ISTIO_OUTPUT&lt;/code&gt;, which contains the following rules.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Rule&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;target&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;in&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;out&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;source&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;destination&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;RETURN&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;lo&lt;/td&gt;
&lt;td&gt;127.0.0.6&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;ISTIO_IN_REDIRECT&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;lo&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;!localhost owner UID match 1337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;RETURN&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;lo&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;anywhere !owner UID match 1337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;RETURN&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;anywhere owner UID match 1337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;ISTIO_IN_REDIRECT&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;lo&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;!localhost owner GID match 1337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;RETURN&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;lo&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;anywhere !owner GID match 1337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;RETURN&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;anywhere owner GID match 1337&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;RETURN&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;localhost&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;ISTIO_REDIRECT&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;any&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;td&gt;anywhere&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The sidecar applies these rules to deal with different types of traffic. This article will show you the six types of traffic and their iptables rules in Istio sidecar.&lt;/p&gt;
&lt;h2 id=&#34;iptables-traffic-routing-in-sidecar&#34;&gt;iptables Traffic Routing in Sidecar&lt;/h2&gt;
&lt;p&gt;The following list summarizes the six types of traffic in Sidecar.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Remote service accessing local service: Remote Pod -&amp;gt; Local Pod&lt;/li&gt;
&lt;li&gt;Local service accessing remote service: Local Pod -&amp;gt; Remote Pod&lt;/li&gt;
&lt;li&gt;Prometheus crawling metrics of local service: Prometheus -&amp;gt; Local Pod&lt;/li&gt;
&lt;li&gt;Traffic between Local Pod service: Local Pod -&amp;gt; Local Pod&lt;/li&gt;
&lt;li&gt;Inter-process TCP traffic within Envoy&lt;/li&gt;
&lt;li&gt;Sidecar to Istiod traffic&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The following will explain the iptables routing rules within Sidecar for each scenario, which specifies which rule in ISTIO_OUTPUT is used for routing.&lt;/p&gt;
&lt;h2 id=&#34;type-1-remote-pod---local-pod&#34;&gt;Type 1: Remote Pod -&amp;gt; Local Pod&lt;/h2&gt;
&lt;p&gt;The following are the iptables rules for remote services, applications or clients accessing the local pod IP of the data plane.&lt;/p&gt;
&lt;p&gt;Remote Pod -&amp;gt; &lt;code&gt;RREROUTING&lt;/code&gt; -&amp;gt; &lt;code&gt;ISTIO_INBOUND&lt;/code&gt; -&amp;gt; &lt;code&gt;ISTIO_IN_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15006 (Inbound) -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 1&lt;/strong&gt; -&amp;gt; &lt;code&gt; POSTROUTING&lt;/code&gt; -&amp;gt; Local Pod&lt;/p&gt;
&lt;p&gt;We see that the traffic only passes through the Envoy 15006 Inbound port once. The following diagram shows this scenario of the iptables rules.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/remote-pod-local-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/remote-pod-local-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Remote Pod to Local Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Remote Pod to Local Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-2-local-pod---remote-pod&#34;&gt;Type 2: Local Pod -&amp;gt; Remote Pod&lt;/h2&gt;
&lt;p&gt;The following are the iptables rules that the local pod IP goes through to access the remote service.&lt;/p&gt;
&lt;p&gt;Local Pod-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 9&lt;/strong&gt; -&amp;gt; &lt;code&gt;ISTIO_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15001 (Outbound) -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 4&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt; -&amp;gt; Remote Pod&lt;/p&gt;
&lt;p&gt;We see that the traffic only goes through the Envoy 15001 Outbound port.&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/local-pod-remote-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/local-pod-remote-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Local Pod to Remote Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Local Pod to Remote Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;p&gt;The traffic in both scenarios above passes through Envoy only once because only one scenario occurs in that Pod, sending or receiving requests.&lt;/p&gt;
&lt;h2 id=&#34;type-3-prometheus---local-pod&#34;&gt;Type 3: Prometheus -&amp;gt; Local Pod&lt;/h2&gt;
&lt;p&gt;Prometheus traffic that grabs data plane metrics does not have to go through the Envoy proxy.&lt;/p&gt;
&lt;p&gt;These traffic pass through the following iptables rules.&lt;/p&gt;
&lt;p&gt;Prometheus-&amp;gt; &lt;code&gt;RREROUTING&lt;/code&gt; -&amp;gt; &lt;code&gt;ISTIO_INBOUND&lt;/code&gt; (traffic destined for ports 15020, 15090 will go to &lt;code&gt;INPUT&lt;/code&gt;) -&amp;gt; &lt;code&gt;INPUT&lt;/code&gt;  -&amp;gt; Local Pod&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/prometheus-local-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/prometheus-local-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Prometheus to Local Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Prometheus to Local Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-4-local-pod---local-pod&#34;&gt;Type 4: Local Pod -&amp;gt; Local Pod&lt;/h2&gt;
&lt;p&gt;A Pod may simultaneously have two or more services. If the Local Pod accesses a service on the current Pod, the traffic will go through Envoy 15001 and Envoy 15006 ports to reach the service port of the Local Pod.&lt;/p&gt;
&lt;p&gt;The iptables rules for this traffic are as follows.&lt;/p&gt;
&lt;p&gt;Local Pod-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 9&lt;/strong&gt; -&amp;gt; &lt;code&gt;ISTIO_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15001ï¼ˆOutboundï¼‰-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 2&lt;/strong&gt; -&amp;gt; &lt;code&gt;ISTIO_IN_REDIRECT&lt;/code&gt; -&amp;gt; Envoy 15006ï¼ˆInboundï¼‰-&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 1&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt; -&amp;gt; Local Pod&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/local-pod-local-pod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/local-pod-local-pod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Local Pod to Local Pod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Local Pod to Local Pod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-5-inter-process-tcp-traffic-within-envoy&#34;&gt;Type 5: Inter-process TCP traffic within Envoy&lt;/h2&gt;
&lt;p&gt;Envoy internal processes with UID and GID 1337 will communicate with each other using lo NICs and localhost domains.&lt;/p&gt;
&lt;p&gt;The iptables rules that these flows pass through are as follows.&lt;/p&gt;
&lt;p&gt;Envoy process (Localhost) -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 8&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt; -&amp;gt; Envoy process (Localhost)&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/envoy-internal-tcp-traffic.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/envoy-internal-tcp-traffic.svg&#34; alt=&#34;image&#34; data-caption=&#34;Envoy inter-process TCP traffic&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Envoy inter-process TCP traffic&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;type-6-sidecar-to-istiod-traffic&#34;&gt;Type 6: Sidecar to Istiod traffic&lt;/h2&gt;
&lt;p&gt;Sidecar needs access to Istiod to synchronize its configuration so that Envoy will have traffic sent to Istiod.&lt;/p&gt;
&lt;p&gt;The iptables rules that this traffic passes through are as follows.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pilot-agent&lt;/code&gt; process -&amp;gt; &lt;code&gt;OUTPUT&lt;/code&gt; -&amp;gt; &lt;strong&gt;&lt;code&gt;Istio_OUTPUT&lt;/code&gt; RULE 9&lt;/strong&gt; -&amp;gt; Envoy 15001 (Outbound Handler) -&amp;gt; OUTPUT -&amp;gt; &lt;strong&gt;&lt;code&gt;ISTIO_OUTPUT&lt;/code&gt; RULE 4&lt;/strong&gt; -&amp;gt; &lt;code&gt;POSTROUTING&lt;/code&gt;  -&amp;gt; Istiod&lt;/p&gt;
&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
    
      
        
          &lt;img src=&#34;https://jimmysong.io/en/blog/istio-sidecar-traffic-types/sidecar-istiod.svg&#34; data-img=&#34;/en/blog/istio-sidecar-traffic-types/sidecar-istiod.svg&#34; alt=&#34;image&#34; data-caption=&#34;Sidecar to Istiod&#34;&gt;
        
      
    
  
  
  &lt;figcaption&gt;Sidecar to Istiod&lt;/figcaption&gt;
  
&lt;/figure&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;All the sidecar proxies that Istio injects into the Pod or installed in the virtual machine form the data plane of the service mesh, which is also the main workload location of Istio. In my next blog, I will take you through the ports of each component in Envoy and their functions, so that we can have a more comprehensive understanding of the traffic in Istio.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
