<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song&#39;s Cloud Native Blog – Tproxy</title>
    <link>https://jimmysong.io/en/tags/tproxy/</link>
    <description>Recent content in Tproxy on Jimmy Song&#39;s Cloud Native Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Feb 2024 11:27:49 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/en/tags/tproxy/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Maintaining Traffic Transparency: Preserving Client Source IP in Istio</title>
      <link>https://jimmysong.io/en/blog/preserve-source-ip-in-istio/</link>
      <pubDate>Wed, 28 Feb 2024 11:27:49 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/preserve-source-ip-in-istio/</guid>
      <description>
        
        
        &lt;p&gt;This blog post analyzes the challenges of server-side obtaining the client source IP in the Istio service mesh and provides solutions. The following topics will be covered:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reasons for the loss of source IP during packet transmission.&lt;/li&gt;
&lt;li&gt;How to identify the client source IP.&lt;/li&gt;
&lt;li&gt;Strategies for passing source IP in north-south and east-west requests.&lt;/li&gt;
&lt;li&gt;Handling methods for HTTP and TCP protocols.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-importance-of-preserving-source-ip&#34;&gt;The Importance of Preserving Source IP&lt;/h2&gt;
&lt;p&gt;The main reasons for preserving the client source IP include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Access Control Policies&lt;/strong&gt;: Performing authentication or security policies based on source IP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Load Balancing&lt;/strong&gt;: Implementing request routing based on the client IP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Analysis&lt;/strong&gt;: Access logs and monitoring metrics containing the actual source address, aiding developers in analysis.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;meaning-of-preserving-source-ip&#34;&gt;Meaning of Preserving Source IP&lt;/h2&gt;
&lt;p&gt;Preserving the source IP refers to avoiding the situation where the actual client source IP is replaced as the request goes out from the client, and passes through a load balancer or reverse proxy.&lt;/p&gt;
&lt;p&gt;Here is an example process of source IP address lost:&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    participant C as Client
    participant LB as Load Balancer
    participant IG as Ingress Gateway
    participant S as Server
    C-&gt;&gt;LB: Initial Request
    LB-&gt;&gt;IG: Altered Request (IP Changed)
    IG-&gt;&gt;S: Forwarded Request
    Note over IG,S: Source IP Lost
&lt;/pre&gt;

&lt;p&gt;The above diagram represents the most common scenario. This article considers the following cases:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;North-South Traffic: Clients accessing servers through a load balancer (gateway)
&lt;ol&gt;
&lt;li&gt;Single-tier gateway&lt;/li&gt;
&lt;li&gt;Multi-tier gateways&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;East-West Traffic: Service-to-service communication within the mesh&lt;/li&gt;
&lt;li&gt;Protocols: HTTP and TCP&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;how-to-confirm-client-source-ip&#34;&gt;How to Confirm Client Source IP?&lt;/h2&gt;
&lt;p&gt;In the Istio service mesh, Envoy proxies typically add the client IP to the &amp;ldquo;X-Forwarded-For&amp;rdquo; header of HTTP requests. Here are the steps to confirm the client IP:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Check the X-Forwarded-For Header&lt;/strong&gt;: It contains the IP addresses of various proxies along the request path.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Select the Last IP&lt;/strong&gt;: Usually, the last IP is the client IP closest to the server.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Verify the IP&amp;rsquo;s Trustworthiness&lt;/strong&gt;: Check the trustworthiness of the proxy servers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Use X-Envoy-External-Address&lt;/strong&gt;: Envoy can set this header, which includes the real client IP.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For more details, refer to the Envoy documentation on the &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#config-http-conn-man-headers-x-forwarded-for&#34; title=&#34;&amp;lt;code&amp;gt;x-forwarded-for&amp;lt;/code&amp;gt; header&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;x-forwarded-for&lt;/code&gt; header&lt;/a&gt;
. For TCP/IP connections, you can parse the client IP from the protocol field.&lt;/p&gt;
&lt;h2 id=&#34;testing-environment&#34;&gt;Testing Environment&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;GKE&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client Version: v1.28.4&lt;/li&gt;
&lt;li&gt;Kustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3&lt;/li&gt;
&lt;li&gt;Server Version: v1.27.7-gke.1121000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Istio&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Client version: 1.20.1&lt;/li&gt;
&lt;li&gt;Control plane version: 1.20.1&lt;/li&gt;
&lt;li&gt;Data plane version: 1.20.1 (12 proxies)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CNI&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We use Cilium CNI but have not enabled the kube-proxy-less mode.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cilium-cli: v0.15.18 compiled with go1.21.5 on darwin/amd64&lt;/li&gt;
&lt;li&gt;cilium image (default): v1.14.4&lt;/li&gt;
&lt;li&gt;cilium image (stable): unknown&lt;/li&gt;
&lt;li&gt;cilium image (running): 1.14.5&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Node&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Node Name&lt;/th&gt;
&lt;th&gt;Internal IP&lt;/th&gt;
&lt;th&gt;Remarks&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;gke-cluster1-default-pool-5e4152ba-t5h3&lt;/td&gt;
&lt;td&gt;10.128.0.53&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gke-cluster1-default-pool-5e4152ba-ubc9&lt;/td&gt;
&lt;td&gt;10.128.0.52&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gke-cluster1-default-pool-5e4152ba-yzbg&lt;/td&gt;
&lt;td&gt;10.128.0.54&lt;/td&gt;
&lt;td&gt;Ingress Gateway Pod Node&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Public IP of the local client computer used for testing: &lt;code&gt;123.120.247.15&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploying-test-example&#34;&gt;Deploying Test Example&lt;/h2&gt;
&lt;p&gt;The following diagram illustrates the testing approach:&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    participant C as Client
    participant LB as Load Balancer
    participant IG as Ingress Gateway
    participant S as Echo Server
    C-&gt;&gt;LB: Initial Request
    LB-&gt;&gt;IG: Forward Request 
    IG-&gt;&gt;S: Forwarded Request
&lt;/pre&gt;

&lt;p&gt;First, deploy Istio according to the &lt;a href=&#34;https://istio.io/latest/docs/setup/install/&#34; title=&#34;Istio documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio documentation&lt;/a&gt;
, and then enable sidecar auto-injection for the default namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl label namespace default istio-injection&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;enabled
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Deploy the &lt;code&gt;echo-server&lt;/code&gt; application in Istio:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl create deployment echo-server --image&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;registry.k8s.io/echoserver:1.4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl expose deployment echo-server --name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;clusterip --port&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;80&lt;/span&gt; --target-port&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;8080&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create an Ingress Gateway:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cat &amp;gt; config.yaml &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;apiVersion: networking.istio.io/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;kind: Gateway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  name: clusterip-gateway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  selector:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    istio: ingressgateway # Choose the appropriate selector for your environment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  servers:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    - port:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        number: 80
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        name: http
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        protocol: HTTP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;      hosts:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        - &amp;#34;clusterip.jimmysong.io&amp;#34; # Replace with the desired hostname
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;apiVersion: networking.istio.io/v1beta1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;kind: VirtualService
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;metadata:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  name: clusterip-virtualservice
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;spec:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  hosts:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    - &amp;#34;clusterip.jimmysong.io&amp;#34; # Replace with the same hostname as in the Gateway
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  gateways:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    - clusterip-gateway # Use the name of the Gateway here
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;  http:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;    - route:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;        - destination:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            host: clusterip.default.svc.cluster.local # Replace with the actual hostname of your Service
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;            port:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;              number: 80 # Port of the Service
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl apply -f config.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;View the Envoy logs in the Ingress Gateway:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl logs -f deployment/istio-ingressgateway -n istio-system
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;View the Envoy logs in the Sleep Pod:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl logs -f deployment/sleep -n default -c istio-proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;View the Envoy logs in the Echo Server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl logs -f deployment/echo-server -n default -c istio-proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Get the public IP of the gateway:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;GATEWAY_IP&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;$(&lt;/span&gt;kubectl -n istio-system get service istio-ingressgateway -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{.status.loadBalancer.ingress[0].ip}&amp;#39;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Test locally using curl:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Host: clusterip.jimmysong.io&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$GATEWAY_IP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;resource-ip&#34;&gt;Resource IP&lt;/h3&gt;
&lt;p&gt;After deploying the test application, you need to obtain the IP addresses of the following resources, which will be used in the upcoming experiments.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pod&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are the initial Pod IPs, but please note that as patches are applied to the Deployment, Pods may be recreated, and their names and IP addresses may change.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Pod Name&lt;/th&gt;
&lt;th&gt;Pod IP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;echo-server-6d9f5d97d7-fznrq&lt;/td&gt;
&lt;td&gt;10.32.1.205&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sleep-9454cc476-2dskx&lt;/td&gt;
&lt;td&gt;10.32.3.202&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;istio-ingressgateway-6c96bdcd74-zh46d&lt;/td&gt;
&lt;td&gt;10.32.1.221&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Service&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Service Name&lt;/th&gt;
&lt;th&gt;Cluster IP&lt;/th&gt;
&lt;th&gt;External IP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;clusterip&lt;/td&gt;
&lt;td&gt;10.36.8.86&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sleep&lt;/td&gt;
&lt;td&gt;10.36.14.12&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;istio-ingressgateway&lt;/td&gt;
&lt;td&gt;10.36.4.127&lt;/td&gt;
&lt;td&gt;35.188.212.88&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;north-south-traffic&#34;&gt;North-South Traffic&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s first consider the scenario where the client is outside the Kubernetes cluster and accesses internal services through a load balancer.&lt;/p&gt;
&lt;h3 id=&#34;test-1-cluster-traffic-policy-iptables-traffic-hijacking&#34;&gt;Test 1: Cluster Traffic Policy, iptables Traffic Hijacking&lt;/h3&gt;
&lt;p&gt;This is the default situation after deploying the test application using the steps above, and it represents the commonly encountered scenario where the source IP address is said to be lost.&lt;/p&gt;
&lt;p&gt;curl test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Host: clusterip.jimmysong.io&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$GATEWAY_IP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;details class=&#34;spoiler&#34; id=&#34;spoiler-0&#34;&gt;
  &lt;summary&gt;View Results&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CLIENT VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;client_address=127.0.0.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;command=GET
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real path=/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query=nil
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_version=1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_uri=http://clusterip.jimmysong.io:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SERVER VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server_version=nginx: 1.10.0 - lua: 10001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HEADERS RECEIVED:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;accept=*/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;host=clusterip.jimmysong.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user-agent=curl/8.4.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-parentspanid=03c124c5f910001a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-sampled=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-spanid=103dc912ec14f3b4
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-traceid=140ffa034822077f03c124c5f910001a
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-envoy-attempt-count=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-envoy-internal=true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-client-cert=By=spiffe://cluster.local/ns/default/sa/default;Hash=79253e34e1c28d389e9bfb1a62ffe8944b2c3c369b46bf4a9faf055b55dedb7f;Subject=&amp;#34;&amp;#34;;URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-for=10.128.0.54
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-proto=http
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-request-id=b3c05e22-594e-98da-ab23-da711a8f53ec
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BODY:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-no body in request-&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;

&lt;p&gt;You only need to focus on the &lt;code&gt;client_address&lt;/code&gt; and &lt;code&gt;x-forwarded-for&lt;/code&gt; results. Other information in the curl test results will be omitted in the following curl test results.&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  Explanation
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  &lt;p&gt;Meaning of fields in the results:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;client_address&lt;/code&gt;: The client IP address obtained through TCP/IP protocol resolution, referred to as the remote address in Envoy.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x-forwarded-for&lt;/code&gt;: &lt;code&gt;x-forwarded-for&lt;/code&gt; (XFF) is a standard proxy header used to indicate the IP addresses that the request has passed through from the client to the server. A compliant proxy will add the IP address of the most recent client to the XFF list before proxying the request. See &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#x-forwarded-for&#34; title=&#34;Envoy documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy documentation&lt;/a&gt;
 for details.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;From the test results, we can see that the source IP address becomes the IP address of the Ingress Gateway Pod&amp;rsquo;s node (&lt;code&gt;10.128.0.54&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The following diagram shows the packet flow paths between the two Pods.&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;graph LR
subgraph IngressGatewayPod[Ingress Gateway Pod]
A[&#34;Downstream Remote (Ingress Gateway Node)&lt;br&gt;10.128.0.54:56532&#34;] --&gt; B
    B[&#34;Downstream Local (Ingresss Gateway Pod)&lt;br&gt;10.32.1.221:8080&#34;]--&gt;C
    C[&#34;Upstream Local (Ingress Gateway Pod)&lt;br&gt;10.32.1.221:59842&#34;]
    C --&gt; D[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.205:8080&#34;]
end
subgraph SourceIPAppPod[Echo Server Pod]
    E[&#34;Downstream Remote (Ingress Gateway Pod)&lt;br&gt;10.128.0.54:0&#34;] --&gt; F
    F[&#34;Downstream Local (Echo Server Pod)&lt;br&gt;10.32.1.205:8080&#34;]
    G[&#34;Upstream Local (InboundPassthroughClusterIpv4)&lt;br&gt;127.0.0.6:60481&#34;]
    H[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.205:8080&#34;]
    F --&gt; G
    G --&gt; H
end
IngressGatewayPod--&gt;SourceIPAppPod
&lt;/pre&gt;

&lt;p&gt;For this scenario, preserving the source IP is straightforward and is also a standard option provided by Kubernetes.&lt;/p&gt;
&lt;h3 id=&#34;how-is-the-source-ip-lost&#34;&gt;How is the Source IP Lost?&lt;/h3&gt;
&lt;p&gt;The following diagram shows how the source IP of the client is lost during the request process.&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    participant C as Client&lt;br&gt;123.120.247.15
    participant LB as Load Balancer&lt;br&gt;35.188.212.88
    participant IG as Ingress Gateway&lt;br&gt;10.32.1.221
    participant S as Echo Server Pod&lt;br&gt;10.32.1.205
    C-&gt;&gt;LB: Initial Request
    LB-&gt;&gt;IG: Altered Request (IP Changed)&lt;br&gt;SNAT: 123.120.234.15 -&gt; 10.128.0.54
    IG-&gt;&gt;S: Forwarded Request
    Note over IG,S: Source IP Lost
&lt;/pre&gt;

&lt;p&gt;Because the load balancer sends packets to any node in the Kubernetes cluster, SNAT is performed during this process, resulting in the loss of the client&amp;rsquo;s source IP when it reaches the Server Pod.&lt;/p&gt;
&lt;h3 id=&#34;how-to-preserve-the-client-source-ip&#34;&gt;How to Preserve the Client Source IP&lt;/h3&gt;
&lt;p&gt;You can control the load balancer to preserve the source IP by setting the &lt;code&gt;externalTrafficPolicy&lt;/code&gt; field in the service to &lt;code&gt;Local&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;externalTrafficPolicy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;externalTrafficPolicy&lt;/code&gt; is a standard &lt;a href=&#34;https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip&#34; title=&#34;Service option&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Service option&lt;/a&gt;
 that defines whether incoming traffic to Kubernetes nodes is load-balanced and how it&amp;rsquo;s load-balanced. &lt;code&gt;Cluster&lt;/code&gt; is the default policy, but &lt;code&gt;Local&lt;/code&gt; is typically used to preserve the source IP of incoming traffic to cluster nodes. &lt;code&gt;Local&lt;/code&gt; effectively disables load balancing on the cluster nodes so that traffic received by local Pods sees the source IP address.&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;graph TD;
    A[Client Request] --&gt;|Sent to Service| B[Load Balancer]
    B --&gt;|externalTrafficPolicy: Local| C[Node with Service Endpoint]
    C --&gt;|Source IP Preserved| D[Service Handling Request]
    B --&gt;|&#34;externalTrafficPolicy: Cluster (Default)&#34;| E[Any Node in Cluster]
    E --&gt;|Source IP Altered| D
&lt;/pre&gt;

&lt;p&gt;In other words, setting &lt;code&gt;externalTrafficPolicy&lt;/code&gt; to &lt;code&gt;Local&lt;/code&gt; allows packets to bypass kube-proxy on the nodes and reach the target Pod directly. However, most people do not set &lt;code&gt;externalTrafficPolicy&lt;/code&gt; when creating a Service in Kubernetes, so the default &lt;code&gt;Cluster&lt;/code&gt; policy is used.&lt;/p&gt;
&lt;p&gt;Since using the Local external traffic policy in Service can preserve the client&amp;rsquo;s source IP address, why isn&amp;rsquo;t it the default in Kubernetes?&lt;/p&gt;
&lt;p&gt;The default setting of Kubernetes Service&amp;rsquo;s &lt;code&gt;externalTrafficPolicy&lt;/code&gt; to &lt;code&gt;Cluster&lt;/code&gt; instead of &lt;code&gt;Local&lt;/code&gt; is primarily based on the following considerations:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Load Balancing&lt;/strong&gt;: Ensures even distribution of traffic across all nodes, preventing overload on a single node.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;High Availability&lt;/strong&gt;: Allows traffic to be received by any node in the cluster, enhancing service availability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Simplified Configuration&lt;/strong&gt;: The &lt;code&gt;Cluster&lt;/code&gt; mode reduces the complexity of network configurations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance Optimization&lt;/strong&gt;: Avoids potential performance issues caused by preserving the client&amp;rsquo;s source IP.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Universality&lt;/strong&gt;: Compatible with a variety of network environments and cluster configurations, suitable for a broader range of scenarios.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;test-2-local-traffic-policy-iptables-traffic-hijacking&#34;&gt;Test 2: Local Traffic Policy, iptables Traffic Hijacking&lt;/h3&gt;
&lt;p&gt;Set the Ingress Gateway Service to use the Local external traffic policy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl patch svc istio-ingressgateway -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;externalTrafficPolicy&amp;#34;:&amp;#34;Local&amp;#34;}}&amp;#39;&lt;/span&gt; -n istio-system
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Curl test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Host: clusterip.jimmysong.io&amp;#34;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$GATEWAY_IP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;details class=&#34;spoiler&#34; id=&#34;spoiler-2&#34;&gt;
  &lt;summary&gt;View Results&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CLIENT VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;client_address=127.0.0.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;command=GET
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real path=/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query=nil
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_version=1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_uri=http://clusterip.jimmysong.io:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SERVER VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server_version=nginx: 1.10.0 - lua: 10001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HEADERS RECEIVED:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;accept=*/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;host=clusterip.jimmysong.io
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user-agent=curl/8.4.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-parentspanid=060c393adb561603
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-sampled=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-spanid=8df3e10078cc826b
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-traceid=cf26040ae9536702060c393adb561603
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-envoy-attempt-count=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-envoy-external-address=123.120.247.15
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-client-cert=By=spiffe://cluster.local/ns/default/sa/default;Hash=79253e34e1c28d389e9bfb1a62ffe8944b2c3c369b46bf4a9faf055b55dedb7f;Subject=&amp;#34;&amp;#34;;URI=spiffe://cluster.local/ns/istio-system/sa/istio-ingressgateway-service-account
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-for=123.120.247.15
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-proto=http
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-request-id=35bc2123-0971-9a9c-84c1-2aeee233a268
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BODY:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-no body in request-&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;

&lt;p&gt;From the Envoy logs, we can see the current packet path:&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;graph LR
subgraph IngressGatewayPod[Ingress Gateway Pod]
    B[&#34;Downstream Local (Ingress Gateway Pod)&lt;br&gt;10.32.1.221:8080&#34;]
    C[&#34;Upstream Local (Ingress Gateway Pod)&lt;br&gt;10.32.1.221:59842&#34;]
A[&#34;Downstream Remote (Client)&lt;br&gt;123.120.247.15:62650&#34;] --&gt; B
B --&gt; C
C --&gt; D[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.205:8080&#34;]
end
subgraph SourceIPAppPod[Echo Server Pod]
    F[&#34;Downstream Local (Echo Server Pod)&lt;br&gt;10.32.1.205:8080&#34;]
    G[&#34;Upstream Local (InboundPassthroughClusterIpv4)&lt;br&gt;127.0.0.6:58639&#34;]
    H[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.205:8080&#34;]
E[&#34;Downstream Remote (Client)&lt;br&gt;123.120.247.15:0&#34;] --&gt; F
F --&gt; G
G --&gt; H
end
IngressGatewayPod--&gt;SourceIPAppPod
&lt;/pre&gt;

&lt;p&gt;The client&amp;rsquo;s source IP is correctly identified as &lt;code&gt;123.120.247.15&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;east-west-traffic&#34;&gt;East-West Traffic&lt;/h2&gt;
&lt;p&gt;In the default Istio configuration, for east-west traffic as well, the server cannot obtain the correct client source IP.&lt;/p&gt;
&lt;h3 id=&#34;test-3-local-traffic-policy-tproxy-traffic-hijacking&#34;&gt;Test 3: Local Traffic Policy, tproxy Traffic Hijacking&lt;/h3&gt;
&lt;p&gt;Change the traffic interception method from iptables to &lt;a href=&#34;https://jimmysong.io/blog/what-is-tproxy/&#34; title=&#34;tproxy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tproxy&lt;/a&gt;
 for the Echo Server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl patch deployment -n default echo-server -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;template&amp;#34;:{&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{&amp;#34;sidecar.istio.io/interceptionMode&amp;#34;:&amp;#34;TPROXY&amp;#34;}}}}}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: At this point, the Pod for Echo Server will be recreated, and the new Pod&amp;rsquo;s name is &lt;code&gt;echo-server-686d564647-r7nlq&lt;/code&gt;, with an IP address of 10.32.1.140.&lt;/p&gt;
&lt;p&gt;Curl test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it deployment/sleep -it -- curl clusterip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;details class=&#34;spoiler&#34; id=&#34;spoiler-3&#34;&gt;
  &lt;summary&gt;View Results&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CLIENT VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;client_address=10.32.3.202
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;command=GET
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real path=/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query=nil
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_version=1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_uri=http://clusterip:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SERVER VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server_version=nginx: 1.10.0 - lua: 10001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HEADERS RECEIVED:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;accept=*/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;host=clusterip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user-agent=curl/8.5.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-parentspanid=3c07f3b87cc547dd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-sampled=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-spanid=97844ebdde748bfc
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-traceid=90f57b0fb260dfbf3c07f3b87cc547dd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-envoy-attempt-count=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-client-cert=By=spiffe://cluster.local/ns/default/sa/default;Hash=25af59fcf9fbe745eb75a318c47d55059d75914632d2536a43a80d342eaed27c;Subject=&amp;#34;&amp;#34;;URI=spiffe://cluster.local/ns/default/sa/sleep
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-proto=http
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-request-id=e9b27bde-3cf6-9d8b-8f23-1cb0fa35d405
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BODY:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-no body in request-&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;

&lt;p&gt;The diagram below illustrates the packet path:&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;graph LR
subgraph SleepPod[Sleep Pod]
A[&#34;Downstream Remote (Sleep Pod)&lt;br&gt;10.32.3.202:38394&#34;] --&gt; B
B[&#34;Downstream Local (Clusterip Service)&lt;br&gt;10.36.8.86:80&#34;] --&gt; C
C[&#34;Upstream Local (Sleep Pod)&lt;br&gt;10.32.3.202:33786&#34;] --&gt; D[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.140:8080&#34;]
end
subgraph SourceIPAppPod[Echo Server Pod]
E[&#34;Downstream Remote (Sleep Pod)&lt;br&gt;10.32.3.202:33786&#34;] --&gt; F
F[&#34;Downstream Local (Echo Server Pod)&lt;br&gt;10.32.1.140:8080&#34;] --&gt; G
G[&#34;Upstream Local (Sleep Pod)&lt;br&gt;10.32.3.202:34173&#34;] --&gt; H[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.140:8080&#34;]
end
SleepPod--&gt;SourceIPAppPod
&lt;/pre&gt;

&lt;p&gt;The client&amp;rsquo;s IP is correctly identified as &lt;code&gt;10.32.3.202&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;test-4-local-traffic-policy-iptables-traffic-hijacking&#34;&gt;Test 4: Local Traffic Policy, iptables Traffic Hijacking&lt;/h3&gt;
&lt;p&gt;Restore the traffic interception method in the Echo Server to redirect:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl patch deployment -n default echo-server -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;template&amp;#34;:{&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{&amp;#34;sidecar.istio.io/interceptionMode&amp;#34;:&amp;#34;REDIRECT&amp;#34;}}}}}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: At this point, the Pod for the Echo Server will be recreated, and the new Pod&amp;rsquo;s name is &lt;code&gt;echo-server-6d9f5d97d7-bgpk6&lt;/code&gt;, with an IP address of 10.32.1.123.&lt;/p&gt;
&lt;p&gt;Curl test:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it deployment/sleep -it -- curl clusterip
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;details class=&#34;spoiler&#34; id=&#34;spoiler-4&#34;&gt;
  &lt;summary&gt;View Results&lt;/summary&gt;
  &lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;hl&#34;&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CLIENT VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line hl&#34;&gt;&lt;span class=&#34;cl&#34;&gt;client_address=127.0.0.6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;command=GET
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;real path=/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;query=nil
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_version=1.1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;request_uri=http://clusterip:8080/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;SERVER VALUES:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server_version=nginx: 1.10.0 - lua: 10001
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;HEADERS RECEIVED:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;accept=*/*
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;host=clusterip
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;user-agent=curl/8.5.0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-parentspanid=6123380e58ca0ce7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-sampled=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-spanid=633848c0065ec91e
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-b3-traceid=dbcda8b3673e70a46123380e58ca0ce7
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-envoy-attempt-count=1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-client-cert=By=spiffe://cluster.local/ns/default/sa/default;Hash=25af59fcf9fbe745eb75a318c47d55059d75914632d2536a43a80d342eaed27c;Subject=&amp;#34;&amp;#34;;URI=spiffe://cluster.local/ns/default/sa/sleep
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-forwarded-proto=http
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;x-request-id=b05e07e1-08ba-9449-90a9-a4a98277a8c0
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;BODY:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;-no body in request-&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/details&gt;

&lt;p&gt;The diagram below illustrates the packet path:&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;graph LR
subgraph Sleep[Sleep Pod]
A[&#34;Downstream Remote (Sleep Pod)&lt;br&gt;10.32.3.202:34238&#34;] --&gt; B
B[&#34;Downstream Local (Clusterip Service)&lt;br&gt;10.36.8.86:80&#34;] --&gt; C
C[&#34;Upstream Local (Sleep Pod)&lt;br&gt;10.32.3.202:52776&#34;] --&gt; D[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.123:8080&#34;]
end
subgraph SourceIPApp[Echo Server Pod]
E[&#34;Downstream Remote (Sleep Pod)&lt;br&gt;10.32.3.202:52776&#34;] --&gt; F
F[&#34;Downstream Local (Echo Server Pod)&lt;br&gt;10.32.1.123:8080&#34;] --&gt; G
G[&#34;Upstream Local (InboundPassthroughClusterIpv4)&lt;br&gt;127.0.0.6:49803&#34;] --&gt; H[&#34;Upstream Host (Echo Server Pod)&lt;br&gt;10.32.1.123:8080&#34;]
end
Sleep --&gt;SourceIPApp
&lt;/pre&gt;

&lt;p&gt;The client&amp;rsquo;s source IP is identified as &lt;code&gt;127.0.0.6&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;summary-for-single-layer-proxy-scenario&#34;&gt;Summary for Single-Layer Proxy Scenario&lt;/h2&gt;
&lt;p&gt;In a single-tier proxy scenario, you only need to set the &lt;code&gt;externalTrafficPolicy&lt;/code&gt; of the Ingress Gateway&amp;rsquo;s Service to &lt;code&gt;Local&lt;/code&gt; to preserve the client&amp;rsquo;s source IP. Modifying the traffic interception mode of the target service to &lt;code&gt;TPROXY&lt;/code&gt; will preserve the source IP in east-west requests.&lt;/p&gt;
&lt;h2 id=&#34;multi-layer-proxy&#34;&gt;Multi-Layer Proxy&lt;/h2&gt;
&lt;p&gt;If traffic has already passed through multiple tiers of proxies before entering the Istio Mesh, each time traffic passes through a proxy, the proxy parses the HTTP traffic and appends its own IP address to the &lt;code&gt;x-forwarded-for&lt;/code&gt; header. You can use the &lt;code&gt;numTrustedProxies&lt;/code&gt; configuration to specify the number of trusted proxy hops, referring to the &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#x-forwarded-for&#34; title=&#34;Envoy documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy documentation&lt;/a&gt;
 for how to determine the &lt;code&gt;X-Forwarded-For&lt;/code&gt; header and trusted client addresses.&lt;/p&gt;
&lt;p&gt;In practice, it can be challenging to determine how many tiers of proxy traffic have passed through before reaching the Istio Mesh, but you can use the &lt;code&gt;x-forwarded-for&lt;/code&gt; header to understand the forwarding path of the traffic.&lt;/p&gt;
&lt;p&gt;The diagram below shows how Envoy confirms the source IP based on the &lt;code&gt;x-forwarded-for&lt;/code&gt; header and &lt;code&gt;xff_num_trusted_hops&lt;/code&gt; (corresponding to the &lt;code&gt;numTrustedProxies&lt;/code&gt; configuration in Istio). See the &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#x-forwarded-for&#34; title=&#34;Envoy documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy documentation&lt;/a&gt;
 for details.&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;graph TD
    A[Start] --&gt;|use_remote_address is false| B[Check XFF]
    A --&gt;|use_remote_address is true| G[Check xff_num_trusted_hops]
    B --&gt;|XFF contains at least one IP| C[Use last IP in XFF]
    B --&gt;|XFF is empty| D[Use immediate downstream IP]
    G --&gt;|xff_num_trusted_hops &gt; 0| H[&#34;Use (N)th IP from right in XFF&#34;]
    G --&gt;|xff_num_trusted_hops &lt;= 0| D
    H --&gt;|XFF contains &gt;= N addresses| I[Use Nth address from right]
    H --&gt;|XFF contains &lt; N addresses| D
&lt;/pre&gt;

&lt;p&gt;Execute the following command to enable trusted proxy configuration for the Ingress Gateway:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl patch deployment istio-ingressgateway -n istio-system -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;template&amp;#34;:{&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{&amp;#34;proxy.istio.io/config&amp;#34;:&amp;#34;{\&amp;#34;gatewayTopology\&amp;#34;:{\&amp;#34;numTrustedProxies\&amp;#34;: 2,\&amp;#34;forwardClientCertDetails\&amp;#34;:\&amp;#34;SANITIZE_SET\&amp;#34;}}&amp;#34;}}}}}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When the Istio Gateway receives a request, it sets the &lt;code&gt;X-Envoy-External-Address&lt;/code&gt; header to the second-to-last address in your &lt;code&gt;X-Forwarded-For&lt;/code&gt; header in the curl command (&lt;code&gt;numTrustedProxies: 2&lt;/code&gt;). According to Istio&amp;rsquo;s documentation, the Gateway appends its own IP to the &lt;code&gt;X-Forwarded-For&lt;/code&gt; header before forwarding it to the service sidecar. However, in practice, only the client source IP and the External Gateway Pod IP are present in the header.&lt;/p&gt;
&lt;p&gt;You can undo this patch by executing the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl patch deployment istio-ingressgateway -n istio-system -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;template&amp;#34;:{&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{&amp;#34;proxy.istio.io/config&amp;#34;:&amp;#34;{}&amp;#34;}}}}}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tcp-traffic&#34;&gt;TCP Traffic&lt;/h2&gt;
&lt;p&gt;The method mentioned above for obtaining the client source IP using headers applies only to L7 networks. For L4 network TCP traffic, you can use the Proxy Protocol.&lt;/p&gt;
&lt;p&gt;The Proxy Protocol is a network protocol that adds a header at the beginning of a TCP connection to pass along some metadata, such as the client&amp;rsquo;s real IP address and port number, during the connection establishment. This is particularly useful for applications deployed behind load balancers (LB) because load balancers often change the original IP address of the client to the LB&amp;rsquo;s address, making it difficult for the server to know the real client&amp;rsquo;s IP. Many proxy software supports the Proxy Protocol, including &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/listeners/listener_filters/proxy_protocol&#34; title=&#34;Envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;
, HAProxy, NGINX, and others.&lt;/p&gt;
&lt;p&gt;You can use the following command to patch the Ingress Gateway to support the Proxy Protocol:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl patch deployment istio-ingressgateway -n istio-system -p &lt;span class=&#34;s1&#34;&gt;&amp;#39;{&amp;#34;spec&amp;#34;:{&amp;#34;template&amp;#34;:{&amp;#34;metadata&amp;#34;:{&amp;#34;annotations&amp;#34;:{&amp;#34;proxy.istio.io/config&amp;#34;:&amp;#34;{\\&amp;#34;gatewayTopology\\&amp;#34;:{\\&amp;#34;proxyProtocol\\&amp;#34;:{}}}&amp;#34;}}}}}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note: Not all load balancers created by &lt;code&gt;LoadBalancer&lt;/code&gt; type Services in Kubernetes in public clouds support this configuration. For example, GKE does not support it. To enable Proxy Protocol on AWS NLB, refer to &lt;a href=&#34;https://istio.io/latest/blog/2020/show-source-ip/&#34; title=&#34;this blog post&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this blog post&lt;/a&gt;
.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth noting that Envoy does not recommend using the Proxy Protocol because it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only supports the TCP protocol.&lt;/li&gt;
&lt;li&gt;Requires upstream hosts to support it.&lt;/li&gt;
&lt;li&gt;May impact performance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For Envoy&amp;rsquo;s support of the Proxy Protocol, refer to &lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/other_features/ip_transparency#proxy-protocol&#34; title=&#34;this documentation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;this documentation&lt;/a&gt;
.&lt;/p&gt;
&lt;h2 id=&#34;use-case-examples&#34;&gt;Use Case Examples&lt;/h2&gt;
&lt;p&gt;The following are common scenarios for source IP addresses.&lt;/p&gt;
&lt;h3 id=&#34;access-control-based-on-source-ip-address&#34;&gt;Access Control Based on Source IP Address&lt;/h3&gt;
&lt;p&gt;In Istio, you can configure access control policies based on source IP using the Ingress Gateway. This is achieved by setting the authorization policy for the Ingress Gateway to restrict access based on source IP addresses.&lt;/p&gt;
&lt;p&gt;The following diagram shows the flow of traffic:&lt;/p&gt;
&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram
    participant C as Client
    participant P1 as Proxy 1
    participant P2 as Proxy 2
    participant Pn as Proxy N
    participant IG as Ingress Gateway
    participant S as Service

    C-&gt;&gt;+P1: Request with Source IP
    P1-&gt;&gt;+P2: Forward Request
    P2-&gt;&gt;+Pn: Forward Request
    Pn-&gt;&gt;+IG: Forward Request
    Note over IG: numTrustedProxies Set
    IG-&gt;&gt;+S: Forwarded Request
    Note over IG: Authorization Policy Based on Source IP
&lt;/pre&gt;

&lt;h4 id=&#34;scenario-assumptions&#34;&gt;Scenario Assumptions&lt;/h4&gt;
&lt;p&gt;Let&amp;rsquo;s assume a request passes through three proxies with IP addresses &lt;code&gt;1.1.1.1&lt;/code&gt;, &lt;code&gt;2.2.2.2&lt;/code&gt;, and &lt;code&gt;3.3.3.3&lt;/code&gt;. In the Ingress Gateway, &lt;code&gt;numTrustedProxies&lt;/code&gt; is set to 2, so Istio trusts the source IP as &lt;code&gt;2.2.2.2&lt;/code&gt; (i.e., &lt;code&gt;x-envoy-external-address&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -H &lt;span class=&#34;s2&#34;&gt;&amp;#34;Host: clusterip.jimmysong.io&amp;#34;&lt;/span&gt; -H &lt;span class=&#34;s1&#34;&gt;&amp;#39;X-Forwarded-For: 1.1.1.1,2.2.2.2,3.3.3.3&amp;#39;&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$GATEWAY_IP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;blocking-specific-source-ip&#34;&gt;Blocking Specific Source IP&lt;/h4&gt;
&lt;p&gt;If you need to block requests from &lt;code&gt;2.2.2.2&lt;/code&gt;, you can use the following authorization policy:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;security.istio.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;AuthorizationPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ingress-policy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-ingressgateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;DENY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;remoteIpBlocks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;2.2.2.2/24&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;using-the-ultimate-client-ip&#34;&gt;Using the Ultimate Client IP&lt;/h4&gt;
&lt;p&gt;If you want to identify the client IP directly connected to the Istio Mesh (i.e., the last IP in &lt;code&gt;x-forwarded-for&lt;/code&gt;, e.g., &lt;code&gt;123.120.234.15&lt;/code&gt;), you need to configure it using &lt;code&gt;ipBlocks&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;security.istio.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;AuthorizationPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ingress-policy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;selector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;istio-ingressgateway&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;action&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;DENY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;from&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;source&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ipBlocks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;s2&#34;&gt;&amp;#34;123.120.234.15/24&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This approach, by configuring authorization policies for Istio&amp;rsquo;s Ingress Gateway, allows for effective access control based on source IP. It enables administrators to set rules flexibly based on different requirements, such as blocking specific IPs or trusting the ultimate client IP, enhancing the security and flexibility of the services.&lt;/p&gt;
&lt;h4 id=&#34;load-balancing-based-on-source-ip-address&#34;&gt;Load Balancing Based on Source IP Address&lt;/h4&gt;
&lt;p&gt;Here is an example configuration that shows how to use &lt;code&gt;DestinationRule&lt;/code&gt; to load balance based on source IP address:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;networking.istio.io/v1alpha3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;DestinationRule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;example-destination-rule&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;example-service&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;trafficPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;loadBalancer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;consistentHash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;httpHeaderName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;x-forwarded-for&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note that if connecting directly to the Istio Ingress Gateway without going through another proxy, you may need to adjust &lt;code&gt;httpHeaderName&lt;/code&gt; or use a different hash key, such as &lt;code&gt;useSourceIp&lt;/code&gt; as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;trafficPolicy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;loadBalancer&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;consistentHash&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;useSourceIp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  Notice
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;When using source IP addresses as keys for load balancing, make sure you understand how this may affect traffic distribution, especially if the source IP addresses are unevenly distributed.&lt;/li&gt;
&lt;li&gt;As mentioned above, in some environments, the original source IP may be modified by network devices (such as load balancers or NAT devices), and you need to ensure that the &lt;code&gt;x-forwarded-for&lt;/code&gt; header or other corresponding mechanism accurately reflects the original client IP.&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Preserving the source IP is crucial for implementing access control, load balancing, and data analysis.&lt;/li&gt;
&lt;li&gt;Envoy proxies use the &lt;code&gt;X-Forwarded-For&lt;/code&gt; header to handle the client source IP in HTTP requests.&lt;/li&gt;
&lt;li&gt;By setting &lt;code&gt;externalTrafficPolicy&lt;/code&gt; and choosing the appropriate traffic interception method (&lt;code&gt;REDIRECT&lt;/code&gt; or &lt;code&gt;TPROXY&lt;/code&gt;), you can correctly obtain the client source IP in North-South and East-West traffic.&lt;/li&gt;
&lt;li&gt;When dealing with traffic that passes through multiple tiers of proxies, configuring &lt;code&gt;numTrustedProxies&lt;/code&gt; is crucial.&lt;/li&gt;
&lt;li&gt;For TCP traffic, the Proxy Protocol is an effective solution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_conn_man/headers#x-forwarded-for&#34; title=&#34;x-forwarded-for - envoyproxy.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;x-forwarded-for - envoyproxy.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/blog/2020/show-source-ip/&#34; title=&#34;Proxy protocol on AWS NLB and Istio ingress gateway - istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Proxy protocol on AWS NLB and Istio ingress gateway - istio.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/ops/configuration/traffic-management/network-topologies/&#34; title=&#34;Configuring Gateway Network Topology - istio.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Configuring Gateway Network Topology - istio.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/other_features/ip_transparency&#34; title=&#34;IP Transparency - envoyproxy.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IP Transparency - envoyproxy.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://kubernetes.io/docs/tutorials/services/source-ip/&#34; title=&#34;Using Source IP - kubernetes.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Using Source IP - kubernetes.io&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/haproxy/haproxy/blob/master/doc/proxy-protocol.txt&#34; title=&#34;Proxy Protocol - github.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Proxy Protocol - github.com&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This blog was initially published at &lt;a href=&#34;https://tetrate.io/blog/istio-source-ip-transparency/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;
 .&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Using Geneve Tunnels to Implement Istio Ambient Mesh Traffic Interception</title>
      <link>https://jimmysong.io/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/</link>
      <pubDate>Mon, 29 May 2023 15:27:49 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/</guid>
      <description>
        
        
        &lt;p&gt;In a previous&lt;a href=&#34;https://jimmysong.io/en/blog/ambient-mesh-l7-traffic-path/&#34; title=&#34; blog post&#34;&gt; blog post&lt;/a&gt;
, I discussed how Istio Ambient Mesh uses iptables and Geneve tunnels to intercept traffic from application pods into Ztunnel. Many readers may not be familiar with this tunneling protocol, so this article will introduce the definition, packet structure and advantages of Geneve tunnels compared with the VXLAN protocol. Finally, this article will introduce how Istio Ambient Mesh applies Geneve tunnels to implement traffic interception and the new eBPF mode introduced in Istio 1.18.&lt;/p&gt;
&lt;h2 id=&#34;introduction-to-geneve-tunnels&#34;&gt;Introduction to Geneve Tunnels&lt;/h2&gt;
&lt;p&gt;In order to address the lack of flexibility and security in current data transmissions, the Geneve (Generic Network Virtualization Encapsulation) network virtualization encapsulation (tunneling) protocol was created. Geneve only defines a data encapsulation format, excluding control plane information. The key advantage of Geneve over VXLAN encapsulation is that it extends the types of encapsulated protocols by adding TLV format options.&lt;/p&gt;
&lt;h3 id=&#34;geneve-vs-vxlan&#34;&gt;Geneve vs. VXLAN&lt;/h3&gt;
&lt;p&gt;VXLAN and Geneve are both network virtualization protocols and they have many similarities. Virtualization protocols are technologies that separate virtual networks from physical networks. They allow network administrators to create multiple virtual networks in a virtual environment, each of which can have its own VLAN identifiers, IP addresses and routing. In addition, VXLAN and Geneve use UDP encapsulation, which enables them to be extended through existing network infrastructure. VXLAN and Geneve protocols are also flexible, can be used in different network topologies and are compatible with different virtualization platforms.&lt;/p&gt;
&lt;p&gt;Figure 1 shows the message structure of VXLAN and Geneve tunnels and the differences in their respective headers.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/vxlan-vs-geneve.svg&#34; data-img=&#34;/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/vxlan-vs-geneve.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 1: VXLAN and Geneve packet format schematic diagram.&#34;&gt;
    
  
  &lt;figcaption&gt;Figure 1: VXLAN and Geneve packet format schematic diagram.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;From the figure, we can see that the message structure of VXLAN and Geneve tunneling protocols is similar, with the main difference being the use of different UDP port numbers and protocol headers. VXLAN uses port 4789, while Geneve uses port 6081. The Geneve protocol header is more extendable than VXLAN.&lt;/p&gt;
&lt;p&gt;The Geneve tunneling protocol adds variable-length options that can contain zero or more option data in TLV format, making it more scalable than VXLAN. TLV stands for Type-Length-Value, which is a format for parsing and transmitting metadata in network packets. Each metadata information in the Geneve protocol is composed of a TLV format field, making it simple to flexibly add, delete and modify these metadata.&lt;/p&gt;
&lt;p&gt;The TLV format field contains the following data:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type: 8-bit type field.&lt;/li&gt;
&lt;li&gt;Length: 5-bit option length field, represented in multiples of 4 bytes, excluding the option header.&lt;/li&gt;
&lt;li&gt;Data: Variable-length option data field, which may not exist or may be between 4 and 128 bytes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Geneve protocol can easily modify and extend metadata information while maintaining compatibility and flexibility by using the TLV format.&lt;/p&gt;
&lt;p&gt;Please refer to&lt;a href=&#34;https://tools.ietf.org/html/rfc7348&#34; title=&#34; RFC 7348 Virtual eXtensible Local Area Network (VXLAN): A Framework for Overlaying Virtualized Layer 2 Networks over Layer 3 Networks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; RFC 7348 Virtual eXtensible Local Area Network (VXLAN): A Framework for Overlaying Virtualized Layer 2 Networks over Layer 3 Networks&lt;/a&gt;
 for more information about VXLAN. For more information about the Geneve tunnel packet format, please refer to&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc8926#name-geneve-packet-format-over-i&#34; title=&#34; RFC 8926 Geneve: Generic Network Virtualization Encapsulation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; RFC 8926 Geneve: Generic Network Virtualization Encapsulation&lt;/a&gt;
.&lt;/p&gt;
&lt;h3 id=&#34;how-it-works&#34;&gt;How it Works&lt;/h3&gt;
&lt;p&gt;The Geneve tunnel is mainly used in cloud computing and virtualization scenarios, and it can encapsulate packets in a new packet for transmission in a virtual network. The Geneve tunnel uses a 24-bit VNI (Virtual Network Identifier) to transmit packets from one physical network to another. The Geneve tunnel can also use security protocols such as IPsec and TLS to protect the transmission of packets.&lt;/p&gt;
&lt;p&gt;When a packet reaches the destination host, the Geneve tunnel protocol will de-encapsulate the packet from the Geneve protocol header and deliver it to the destination in the virtual network. During the de-encapsulation process, the VNI information in the Geneve protocol header is used to determine the destination of the packet, ensuring that the packet is correctly routed to the destination in the virtual network.&lt;/p&gt;
&lt;p&gt;Assuming there is a virtual network with a VNI of 1001. When a packet is transmitted from one physical network to another, a tunnel can be used to track the packet during transmission by setting the VNI between the source and target physical networks to 1001. When the packet reaches the target physical network, the VNI is removed from the packet and the packet is delivered to the target physical network.&lt;/p&gt;
&lt;h3 id=&#34;security&#34;&gt;Security&lt;/h3&gt;
&lt;p&gt;The Geneve tunnel protocol itself does not provide any security mechanisms, so packets transmitted in the Geneve tunnel can be subject to threats such as packet tampering, interception and replay.&lt;/p&gt;
&lt;p&gt;To ensure the security of packets transmitted in the Geneve tunnel, some security protocols can be used. The following are some common security protocols:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;IPsec (Internet Protocol Security): IPsec is a network layer security protocol that can encrypt, authenticate and provide integrity protection to packets in the Geneve tunnel. IPsec can provide end-to-end security.&lt;/li&gt;
&lt;li&gt;TLS (Transport Layer Security): TLS is an encryption protocol based on the transport layer that can encrypt and authenticate packets in the Geneve tunnel. TLS can provide end-to-end security.&lt;/li&gt;
&lt;li&gt;MACSec (Media Access Control Security): MACSec is a data link layer security protocol that can encrypt and authenticate packets in the Geneve tunnel. MACSec can provide link-layer security.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It should be noted that the above security protocols require corresponding configuration and deployment and may have a certain impact on performance. When choosing the appropriate security protocol, factors such as security, performance, manageability and other aspects need to be considered.&lt;/p&gt;
&lt;h2 id=&#34;why-choose-geneve&#34;&gt;Why Choose Geneve?&lt;/h2&gt;
&lt;p&gt;The following table compares the characteristics of VXLAN and Geneve in multiple aspects.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;Feature&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;VXLAN&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Geneve&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Header format&lt;/td&gt;
&lt;td&gt;Fixed format&lt;/td&gt;
&lt;td&gt;Extensible format&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Scalability&lt;/td&gt;
&lt;td&gt;More focused on L2 extension&lt;/td&gt;
&lt;td&gt;Better support for emerging network services&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Operability&lt;/td&gt;
&lt;td&gt;Difficult to manage and extend&lt;/td&gt;
&lt;td&gt;Easier to manage and extend&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Performance&lt;/td&gt;
&lt;td&gt;Shorter header, higher performance&lt;/td&gt;
&lt;td&gt;Longer header, slightly lower performance&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Table 1:&lt;/strong&gt; &lt;em&gt;VXLAN vs Geneve characteristics&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;The main reason for using the Geneve protocol is to combine the advantages of current network virtualization encapsulation technologies (such as VXLAN, NVGRE and STT) into one protocol. Through years of network virtualization development experience, we know that one of the most important requirements is scalability. The Geneve protocol encodes metadata using an extensible TLV structure, so it can independently develop the functionality of software and hardware endpoints to meet growing needs.&lt;/p&gt;
&lt;h2 id=&#34;how-istio-ambient-mesh-applies-geneve-tunnels&#34;&gt;How Istio Ambient Mesh Applies Geneve Tunnels&lt;/h2&gt;
&lt;p&gt;In the&lt;a href=&#34;https://tetrate.io/blog/transparent-traffic-intercepting-and-routing-in-the-l4-network-of-istio-ambient-mesh/&#34; title=&#34; previous blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; previous blog&lt;/a&gt;
, I explained how Istio Ambient Mesh uses Ztunnel to implement L4 proxies and Figure 2 shows the L4 transparent traffic interception path using iptables and Geneve tunnels.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/geneve-tunnel.svg&#34; data-img=&#34;/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/geneve-tunnel.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 2: L4 Transparent Traffic Interception Path Using Iptables and Geneve Tunnels.&#34;&gt;
    
  
  &lt;figcaption&gt;Figure 2: L4 Transparent Traffic Interception Path Using Iptables and Geneve Tunnels.&lt;/figcaption&gt;
&lt;/figure&gt;

From the figure, we can see that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Istio CNI creates an &lt;code&gt;istioout&lt;/code&gt; network card and iptables rules on the node, transparently intercepting the outbound traffic in the node to the &lt;code&gt;pistioout&lt;/code&gt; virtual network card.&lt;/li&gt;
&lt;li&gt;The Istio CNI creates an &lt;code&gt;istioin&lt;/code&gt; network card and iptables rules on the node, transparently intercepting the inbound traffic in the node to the &lt;code&gt;pistioin&lt;/code&gt; virtual network card.&lt;/li&gt;
&lt;li&gt;The Istio CNI creates &lt;code&gt;pistioin&lt;/code&gt; and &lt;code&gt;pistioout&lt;/code&gt; network cards in ztunnel to receive data packets in the Geneve tunnel.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The two network cards &lt;code&gt;pistioin&lt;/code&gt; and &lt;code&gt;pistioout&lt;/code&gt; are created by the init container or Istio CNI (see the &lt;code&gt;CreateRulesWithinNodeProxyNS&lt;/code&gt; function in &lt;a href=&#34;https://github.com/istio/istio/blob/master/cni/pkg/ambient/net_linux.go#L910&#34; title=&#34;net_linux.go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;net_linux.go&lt;/a&gt;
), and their IP addresses and ports are fixed. The data packets sent by the application container need to pass through the &lt;code&gt;istioout&lt;/code&gt; network card and be forwarded to the ztunnel container after being encapsulated in the Geneve tunnel. When the data packets are received by the ztunnel container, they are de-encapsulated and forwarded to the corresponding application containers through the &lt;code&gt;pistioin&lt;/code&gt; network card.&lt;/p&gt;
&lt;h2 id=&#34;using-ebpf-for-transparent-traffic-interception&#34;&gt;Using eBPF for Transparent Traffic Interception&lt;/h2&gt;
&lt;p&gt;eBPF (extended Berkeley Packet Filter) is a powerful technology that allows secure user-space programs to run within the Linux kernel. Initially developed as a technique for filtering network packets, eBPF has now been extended to other areas such as tracking system calls, performance analysis and security monitoring. The advantages of eBPF are its lightweight nature, efficiency, security and programmability. It can be used in real-time monitoring, network security, application debugging and optimization, container networking and various other fields.&lt;/p&gt;
&lt;p&gt;Istio Ambient Mesh also supports using the eBPF (extended Berkeley Packet Filter) mode for transparent traffic interception since 1.18. As shown in Figure 3, the eBPF program runs directly in the host kernel and forwards application traffic to ztunnel. Compared to the iptables-based approach, the eBPF mode can provide better network efficiency and scalability. However, it requires a higher version of the Linux kernel and is more difficult to implement.&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/ebpf.svg&#34; data-img=&#34;/en/blog/traffic-interception-with-geneve-tunnel-with-istio-ambient-mesh/ebpf.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 3: Intercepting the Traffic of Application Using eBPF.&#34;&gt;
    
  
  &lt;figcaption&gt;Figure 3: Intercepting the Traffic of Application Using eBPF.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;To use the eBPF mode to run Ambient Mesh, simply set the &lt;code&gt;values.cni.ambient.redirectMode&lt;/code&gt; parameter to “ebpf” when installing Istio, as shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;istioctl install --set &lt;span class=&#34;nv&#34;&gt;profile&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;ambient --set values.cni.ambient.redirectMode&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;ebpf&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This article introduced the working principle, security and comparison with VXLAN of the Geneve tunnel protocol. In addition, it also introduced how Istio Ambient Mesh uses Geneve tunnels to implement traffic interception and discussed the advantages and disadvantages of using eBPF for transparent traffic interception. The Geneve tunnel protocol is a universal tunneling protocol that can transmit packets in virtual networks, and it has more advantages than other tunneling protocols. Therefore, when choosing a tunneling protocol, users can consider using the Geneve tunnel. In Istio 1.18, the eBPF mode of Ambient Mesh is newly introduced, which can provide better network efficiency, but has higher requirements for the Linux kernel version. Users can choose according to their actual situation.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc7348&#34; title=&#34;RFC 7348 Virtual eXtensible Local Area Network (VXLAN): A Framework for Overlaying Virtualized Layer 2 Networks over Layer 3 Networks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RFC 7348 Virtual eXtensible Local Area Network (VXLAN): A Framework for Overlaying Virtualized Layer 2 Networks over Layer 3 Networks&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rfc-editor.org/rfc/rfc8926#name-geneve-packet-format-over-i&#34; title=&#34;RFC 8926 Geneve: Generic Network Virtualization Encapsulation&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;RFC 8926 Geneve: Generic Network Virtualization Encapsulation&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://istio.io/latest/docs/ops/deployment/architecture/#istio-ambient-mesh&#34; title=&#34;Istio Ambient Mesh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Istio Ambient Mesh&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mankier.com/8/ovs-vswitchd.conf.db%285%29&#34; title=&#34;Open vSwitch Geneve(8) man page&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Open vSwitch Geneve(8) man page&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;If you’re new to service mesh and Kubernetes security, we have a bunch of free online courses &lt;a href=&#34;https://tetr8.io/academy&#34; title=&#34;available at Tetrate Academy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;available at Tetrate Academy&lt;/a&gt;
 that will quickly get you up to speed with Istio and Envoy.&lt;/p&gt;
&lt;p&gt;If you’re looking for a fast way to get to production with Istio, check out &lt;a href=&#34;https://tetr8.io/tid&#34; title=&#34;Tetrate Istio Distribution (TID)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Tetrate Istio Distribution (TID)&lt;/a&gt;
 . TID is Tetrate’s hardened, fully upstream Istio distribution, with FIPS-verified builds and support available. It’s a great way to get started with Istio knowing you have a trusted distribution to begin with, have an expert team supporting you, and also have the option to get to FIPS compliance quickly if you need to.Once you have Istio up and running, you will probably need simpler ways to manage and secure your services beyond what’s available in Istio, that’s where Tetrate Service Bridge comes in. You can learn more about how Tetrate Service Bridge makes service mesh more secure, manageable, and resilient &lt;a href=&#34;https://tetr8.io/tsb&#34; title=&#34;here&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;here&lt;/a&gt;
 , or &lt;a href=&#34;https://tetr8.io/contact&#34; title=&#34;contact us for a quick demo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;contact us for a quick demo&lt;/a&gt;
 .&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This blog was originally published at &lt;a href=&#34;https://tetrate.io/blog/using-geneve-tunnels-to-implement-istio-ambient-mesh-traffic-interception/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;
.&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>How Istio&#39;s Ambient Mode Transparent Proxy - tproxy Works Under the Hood</title>
      <link>https://jimmysong.io/en/blog/what-is-tproxy/</link>
      <pubDate>Thu, 05 Jan 2023 11:27:49 +0800</pubDate>
      
      <guid>https://jimmysong.io/en/blog/what-is-tproxy/</guid>
      <description>
        
        
        &lt;p&gt;Istio’s new “ambient mode” is &lt;a href=&#34;https://tetrate.io/blog/ambient-mesh-what-you-need-to-know-about-this-experimental-new-deployment-model-for-istio/&#34; title=&#34;an experimental, “sidecar-less” deployment model for Istio&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;an experimental, “sidecar-less” deployment model for Istio&lt;/a&gt;
. Instead of a sidecar proxy in front of every workload, ambient mode uses &lt;a href=&#34;https://www.kernel.org/doc/Documentation/networking/tproxy.txt&#34; title=&#34;&amp;lt;em&amp;gt;tproxy&amp;lt;/em&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;tproxy&lt;/em&gt;&lt;/a&gt;
 and &lt;a href=&#34;https://pkg.go.dev/github.com/costinm/hbone&#34; title=&#34;HTTP Based Overlay Network Environment (HBONE)&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;HTTP Based Overlay Network Environment (HBONE)&lt;/a&gt;
 as key technologies for transparent traffic intercepting and routing that we covered in our recent article on &lt;a href=&#34;https://tetrate.io/blog/transparent-traffic-intercepting-and-routing-in-the-l4-network-of-istio-ambient-mesh/&#34; title=&#34;transparent traffic intercepting and routing in the L4 network of Istio Ambient Mesh&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;transparent traffic intercepting and routing in the L4 network of Istio Ambient Mesh&lt;/a&gt;
. In this article, we’ll take a closer look at &lt;em&gt;tproxy&lt;/em&gt; and how it’s used.&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-proxy-for&#34;&gt;What Is a Proxy For?&lt;/h2&gt;
&lt;p&gt;Proxies have a wide range of uses on the Internet, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Request caching:&lt;/strong&gt; to speed up network response, acting similarly to a CDN.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Traffic filtering&lt;/strong&gt;: used for network supervision, blocking or allowing access to specific hosts and websites.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Traffic forwarding:&lt;/strong&gt; used for load balancing or as a network relay.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Traffic management:&lt;/strong&gt; fine-grained management of traffic to and from the proxy, such as publishing to different backends by percentage, timeout and retry settings, circuit breaking, etc.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Security auditing:&lt;/strong&gt; logging and limiting client requests for billing or auditing purposes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;proxy-types&#34;&gt;Proxy Types&lt;/h2&gt;
&lt;p&gt;There are a number of ways to classify proxies based on how they’re used. You can see two categories based on the location of the proxy in Figure 1:&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/en/blog/what-is-tproxy/proxy.svg&#34; data-img=&#34;/en/blog/what-is-tproxy/proxy.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 1: Forward proxy and reverse proxy.&#34;&gt;
    
  
  &lt;figcaption&gt;Figure 1: Forward proxy and reverse proxy.&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Forward proxies&lt;/strong&gt; (&lt;a href=&#34;https://shadowsocks.org/&#34; title=&#34;like shadowsocks&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;like shadowsocks&lt;/a&gt;
) run on the client side and send requests to the server on behalf of the client.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reverse proxies&lt;/strong&gt; (often in the form of a web server) accept Internet or external requests on behalf of the server and route them to the corresponding backends.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Proxies may be located on the same node as the client or server or on a different node. We can classify them as &lt;strong&gt;transparent&lt;/strong&gt; or &lt;strong&gt;non-transparent&lt;/strong&gt; based on whether the client or server can see them. Figure 2 (below) shows the process of a client (A) sending a request to a server (C) through a proxy (B).&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/en/blog/what-is-tproxy/transparent-proxy.svg&#34; data-img=&#34;/en/blog/what-is-tproxy/transparent-proxy.svg&#34; alt=&#34;image&#34; data-caption=&#34;Figure 2: Transparent vs. non-transparent proxies&#34;&gt;
    
  
  &lt;figcaption&gt;Figure 2: Transparent vs. non-transparent proxies&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To use a &lt;strong&gt;non-transparent proxy,&lt;/strong&gt; the client needs to explicitly change the destination address to that of the proxy server and use the proxy protocol to connect to the proxy server.&lt;/li&gt;
&lt;li&gt;To use a &lt;strong&gt;transparent proxy,&lt;/strong&gt; the client and the server do not know the proxy is there, which means the client does not need to modify the destination address, and does not need to use the proxy protocol to connect to the proxy server; all the destination address conversion is done in the transparent proxy.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;using-the-tproxy-transparent-proxy&#34;&gt;Using the &lt;em&gt;tproxy&lt;/em&gt; Transparent Proxy&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;tproxy&lt;/em&gt; is a Linux kernel module (since Linux 2.2) that implements transparent proxies. To use &lt;em&gt;tproxy&lt;/em&gt;, you must first use &lt;em&gt;iptables&lt;/em&gt; to intercept the required packets at the required NIC, then listen for and forward the packet on that NIC.&lt;/p&gt;
&lt;p&gt;Follow these steps to use &lt;em&gt;tproxy&lt;/em&gt; to implement a transparent proxy:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;First, you need to implement traffic interception: create a rule in the mangle table of the PREROUTING chain of iptables to intercept traffic and send it to tproxy for processing, for example, &lt;code&gt;iptables -t mangle -A PREROUTING -p tcp -dport 9080 -j TPROXY --on-port 15001 --on-ip 127.0.0.1 --tproxy-mark 0x1/0x1&lt;/code&gt;, marking all TCP packets destined for port 9080 with a mark 1. You can specify the source IP address or &lt;a href=&#34;https://ipset.netfilter.org/&#34; title=&#34;IP set&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IP set&lt;/a&gt;
 to further narrow the marking, with &lt;em&gt;tproxy&lt;/em&gt; listening on port 15001.&lt;/li&gt;
&lt;li&gt;Create a routing rule that looks up all packets with mark 1 in a specific routing table: for example, &lt;code&gt;add ip rule add fwmark 1 lookup 100&lt;/code&gt;, so that all packets with &lt;code&gt;fwmark 1&lt;/code&gt; look up to the routing table 100.&lt;/li&gt;
&lt;li&gt;Mapping packets to specific local addresses: for example, &lt;code&gt;ip rule add local 0.0.0.0/0 dev lo table 100&lt;/code&gt;, which declares all IPv4 addresses as local in the routing table 100, but of course, this is just an example. In practice, you will need to forward packets with specific IPs to the local &lt;em&gt;lo&lt;/em&gt; loopback NIC.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The traffic has been intercepted on &lt;em&gt;tproxy’s&lt;/em&gt; listening port 15001 (enter from Linux kernel space into user space). You can write a web application to process the packets or use &lt;em&gt;tproxy&lt;/em&gt;-enabled software such as &lt;a href=&#34;http://www.squid-cache.org/&#34; title=&#34;Squid&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Squid&lt;/a&gt;
 or &lt;a href=&#34;https://www.envoyproxy.io/&#34; title=&#34;Envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;
 to process the packets.&lt;/p&gt;
&lt;h2 id=&#34;pros-and-cons-of-transparent-proxies&#34;&gt;Pros and Cons of Transparent Proxies&lt;/h2&gt;
&lt;p&gt;Transparent proxies have the following advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Higher bandwidth and reduced transmission latency, thereby improving the quality of service.&lt;/li&gt;
&lt;li&gt;No need for users to configure networks and hosts.&lt;/li&gt;
&lt;li&gt;Control access to network services.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Transparent proxies have the following disadvantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incorrectly configured, the transparent proxy may prevent connection to the Internet, leaving users unable to troubleshoot and fix errors.&lt;/li&gt;
&lt;li&gt;Security cannot be guaranteed, as intercepted user traffic may be tampered with by transparent proxies.&lt;/li&gt;
&lt;li&gt;The risk that transparent proxies may cache user information, leading to privacy leaks.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;As a vital type of proxy, transparent proxies are used in a wide range of applications, whether in proxy software such as &lt;em&gt;shadowsocks&lt;/em&gt;, Xray, or in the Istio service mesh. Understanding how they work helps us use proxies correctly, and whether or not you use a transparent proxy depends on how much you trust and know about it.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;This blog was originally published at &lt;a href=&#34;https://tetrate.io/blog/what-is-tproxy-and-how-does-it-work/&#34; title=&#34;tetrate.io&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tetrate.io&lt;/a&gt;
.&lt;/em&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
