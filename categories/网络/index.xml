<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jimmy Song&#39;s Blog – 网络</title>
    <link>https://jimmysong.io/categories/%E7%BD%91%E7%BB%9C/</link>
    <description>Recent content in 网络 on Jimmy Song&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 17 Jun 2022 12:00:00 +0800</lastBuildDate>
    
	  <atom:link href="https://jimmysong.io/categories/%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>eBPF 数据路径介绍</title>
      <link>https://jimmysong.io/book/cilium-handbook/ebpf/intro/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/ebpf/intro/</guid>
      <description>
        
        
        &lt;p&gt;Linux 内核在网络堆栈中支持一组 BPF 钩子（hook），可用于运行 BPF 程序。Cilium 数据路径使用这些钩子来加载 BPF 程序，这些程序一起使用时会创建更高级别的网络结构。&lt;/p&gt;
&lt;p&gt;以下是 Cilium 使用的钩子列表和简要说明。有关每个钩子细节的更详尽的文档，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/stable/bpf/#bpf-guide&#34; title=&#34;BPF 和 XDP 参考指南&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BPF 和 XDP 参考指南&lt;/a&gt;
。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;XDP&lt;/strong&gt;：XDP BPF 钩子位于网络驱动程序中的最早可能点，并在数据包接收时触发 BPF 程序的运行。这实现了可能的最佳数据包处理性能，因为程序在任何其他处理发生之前直接在数据包数据上运行。此钩子非常适合运行丢弃恶意或意外流量的过滤程序以及其他常见的 DDOS 保护机制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;流量控制入口/出口&lt;/strong&gt;：附加到流量控制（traffic control，简称 TC）入口钩子的 BPF 程序附加到网络接口，与 XDP 相同，但将在网络堆栈完成数据包的初始处理后运行。该钩子在三层网络之前运行，但可以访问与数据包关联的大部分元数据。这非常适合进行本地节点处理，例如应用三层/四层端点策略并将流量重定向到端点。对于面向网络的设备，TC 入口钩子可以与上面的 XDP 钩子耦合。完成此操作后，可以合理地假设此时的大部分流量是合法的并以主机为目的地。&lt;/p&gt;
&lt;p&gt;容器通常使用称为 veth 对的虚拟设备，它充当将容器连接到主机的虚拟路由。通过附加到这个 veth 对的主机端的 TC 入口钩子，Cilium 可以监控和执行所有离开容器的流量的策略。通过将 BPF 程序附加到与每个容器关联的 veth 对，并将所有网络流量路由到主机端虚拟设备，同时将另一个 BPF 程序附加到 TC 入口钩子，Cilium 可以监控所有进入或离开节点的流量并执行策略。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;套接字操作&lt;/strong&gt;：套接字操作钩子附加到特定的 cgroup 并在 TCP 事件上运行。Cilium 将 BPF 套接字操作程序附加到根 cgroup 并使用它来监视 TCP 状态转换，特别是 ESTABLISHED 状态转换。如果 TCP 套接字具有节点本地对等节点（可能是本地代理），则当套接字转换为 ESTABLISHED 状态时，附加套接字发送 / 接收程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;套接字发送/接收&lt;/strong&gt;：套接字发送/接收钩子（socket send/recv hook）在 TCP 套接字执行的每个发送操作上运行。此时，钩子可以检查消息并丢弃消息、将消息发送到 TCP 层或将消息重定向到另一个套接字。Cilium 使用它来加速数据路径重定向，如下所述。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;将上述钩子与虚拟接口（&lt;code&gt;cilium_host&lt;/code&gt;、&lt;code&gt;cilium_net&lt;/code&gt;）、可选的 overlay 接口（&lt;code&gt;cilium_vxlan&lt;/code&gt;）、Linux 内核加密支持和用户空间代理（Envoy）相结合，Cilium 创建了以下网络对象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;前置过滤器（Prefilter）&lt;/strong&gt;：前置过滤器对象运行一个 XDP 程序并提供一组前置过滤器规则，用于过滤来自网络的流量以获得最佳性能。具体来说，数据包要么被丢弃，例如当目标不是有效的端点时，要么被堆栈处理。这可以根据需要轻松扩展以构建新的前置过滤器标准/功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;端点策略&lt;/strong&gt;：端点策略对象实现 Cilium 端点强制。使用映射来查找与身份和策略相关的数据包，该层可以很好地扩展到许多端点。根据策略，该层可能会丢弃数据包、转发到本地端点、转发到服务对象或转发到七层策略对象以获取进一步的七层规则。这是 Cilium 数据路径中的主要对象，负责将数据包映射到身份并执行三层和四层策略。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;服务&lt;/strong&gt;：服务对象对对象接收的每个数据包的目标 IP 和可选的目标端口执行映射查找。如果找到匹配条目，数据包将被转发到配置的三层/四层端点之一。Service 块可用于使用 TC 入口钩子在任何接口上实现独立的负载均衡器，或者可以集成到端点策略对象中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;三层加密&lt;/strong&gt;：在入口时，三层加密对象标记要解密的数据包，将数据包传递给 Linux xfrm（转换）层进行解密，数据包解密后对象接收数据包，然后将其向上传递到堆栈以供其他人进一步处理对象。根据模式、直接路由或覆盖，这可能是 BPF 尾调用或将数据包传递给下一个对象的 Linux 路由堆栈。解密所需的密钥在 IPsec 标头中编码，因此在入口处我们不需要进行映射查找来查找解密密钥。&lt;/p&gt;
&lt;p&gt;在出口处，首先使用目标 IP 执行映射查找以确定数据包是否应加密，如果加密，则目标节点上可用的密钥。选择两个节点上可用的最新密钥，并将数据包标记为加密。然后将数据包传递到对其进行加密的 Linux xfrm 层。在接收到现在加密的数据包后，通过将其发送到 Linux 堆栈进行路由或在使用覆盖时进行直接尾调用，将其传递到下一层。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;套接字层强制&lt;/strong&gt;：套接字层强制使用两个钩子，套接字操作钩子和套接字发送/接收钩子来监视和附加到与 Cilium 托管端点关联的所有 TCP 套接字，包括任何 七层代理。套接字操作钩子将识别用于加速的候选套接字。这些包括所有本地节点连接（端点到端点）和任何到 Cilium 代理的连接。然后，这些已识别的连接将由套接字发送/接收钩子处理所有消息，并将使用 &lt;code&gt;sockmap&lt;/code&gt; 快速重定向加速。快速重定向确保 Cilium 中实现的所有策略对关联的套接字 / 端点映射有效，并假设它们直接将消息发送到对等套接字。这是允许的，因为 &lt;code&gt;sockmap&lt;/code&gt; &lt;code&gt;send/recv&lt;/code&gt; 钩子确保消息不需要由上述任何对象处理。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;七层策略&lt;/strong&gt;：七层策略对象将代理流量重定向到 Cilium 用户空间代理实例。Cilium 使用 Envoy 实例作为其用户空间代理。然后，Envoy 将根据配置的七层策略转发流量或生成适当的拒绝消息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这些组件相互连接，以创建 Cilium 使用的灵活高效的数据路径。下面我们展示了连接单个节点上的端点、入口到端点以及端点到出口网络设备的以下可能流程。在每种情况下，都有一个附加图表显示启用套接字层强制时可用的 TCP 加速路径。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Kubernetes 集成介绍</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/intro/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/intro/</guid>
      <description>
        
        
        &lt;h2 id=&#34;cilium-能为-kubernetes-集群提供什么&#34;&gt;Cilium 能为 Kubernetes 集群提供什么？&lt;/h2&gt;
&lt;p&gt;在 Kubernetes 集群中运行 Cilium 时提供以下功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-cni&#34; title=&#34;CNI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CNI&lt;/a&gt;
 插件支持，为 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/intro/#pod-connectivity&#34; title=&#34;pod 连接&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pod 连接&lt;/a&gt;
 提供 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/networking/#multi-host-networking&#34; title=&#34;联网&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;联网&lt;/a&gt;
。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#networkpolicy&#34; title=&#34;NetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetworkPolicy&lt;/a&gt;
 资源的基于身份的实现，用于隔离三层和四层网络  &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-pod&#34; title=&#34;pod&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pod&lt;/a&gt;
 的连接。&lt;/li&gt;
&lt;li&gt;以 &lt;code&gt;CustomResourceDefinition&lt;/code&gt; 形式对 &lt;code&gt;NetworkPolicy&lt;/code&gt; 的扩展，扩展策略控制以添加：
&lt;ul&gt;
&lt;li&gt;针对以下应用协议的入口和出口执行七层策略：
&lt;ul&gt;
&lt;li&gt;HTTP&lt;/li&gt;
&lt;li&gt;Kafka&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对 CIDR 的出口支持以保护对外部服务的访问&lt;/li&gt;
&lt;li&gt;强制外部无头服务自动限制为服务配置的 Kubernetes 端点集&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ClusterIP 实现为 pod 到 pod 的流量提供分布式负载平衡&lt;/li&gt;
&lt;li&gt;完全兼容现有的 kube-proxy 模型&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pod-间连接&#34;&gt;Pod 间连接&lt;/h2&gt;
&lt;p&gt;在 Kubernetes 中，容器部署在称为 pod 的单元中，其中包括一个或多个可通过单个 IP 地址访问的容器。使用 Cilium，每个 pod 从运行 pod 的 Linux 节点的节点前缀中获取一个 IP 地址。有关其他详细信息，请参阅 &lt;a href=&#34;../../networking/ipam/#address-management&#34; title=&#34;IP 地址管理（IPAM）&#34;&gt;IP 地址管理（IPAM）&lt;/a&gt;
。在没有任何网络安全策略的情况下，所有的 pod 都可以互相访问。&lt;/p&gt;
&lt;p&gt;Pod IP 地址通常位于 Kubernetes 集群本地。如果 pod 需要作为客户端访问集群外部的服务，则网络流量在离开节点时会自动伪装。&lt;/p&gt;
&lt;h2 id=&#34;服务负载均衡&#34;&gt;服务负载均衡&lt;/h2&gt;
&lt;p&gt;Kubernetes 开发了服务抽象，它为用户提供了将网络流量负载平衡到不同 pod 的能力。这种抽象允许 pod 通过单个 IP 地址（一个虚拟 IP 地址）与其他 pod 联系，而无需知道所有运行该特定服务的 pod。&lt;/p&gt;
&lt;p&gt;如果没有 Cilium，kube-proxy 会安装在每个节点上，监视 kube-master 上的端点和服务的添加和删除，这允许它在 iptables 上应用必要的强制策略执行。因此，从 pod 接收和发送到的流量被正确地路由到为该服务服务的节点和端口。有关更多信息，您可以查看服务的 Kubernetes 用户 &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/service/&#34; title=&#34;指南&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;指南&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;在实现 ClusterIP 时，Cilium 的行为与 kube-proxy 相同，它监视服务的添加或删除，但不是在 iptables 上执行，而是更新每个节点上的 eBPF 映射条目。有关更多信息，请参阅 &lt;a href=&#34;https://github.com/cilium/cilium/pull/109&#34; title=&#34;GItHub PR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GItHub PR&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;延伸阅读&#34;&gt;延伸阅读&lt;/h2&gt;
&lt;p&gt;Kubernetes 文档包含有关 &lt;a href=&#34;https://kubernetes.io/docs/concepts/cluster-administration/networking/&#34; title=&#34;Kubernetes 网络模型&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 网络模型&lt;/a&gt;
和 &lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/&#34; title=&#34;Kubernetes 网络插件&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes 网络插件&lt;/a&gt;
的更多背景信息。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>介绍</title>
      <link>https://jimmysong.io/book/cilium-handbook/security/intro/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/security/intro/</guid>
      <description>
        
        
        &lt;p&gt;Cilium 在多个层面上提供安全性。可以单独使用或组合使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../identity/&#34; title=&#34;基于身份&#34;&gt;基于身份&lt;/a&gt;
：端点之间的连接策略（三层），例如任何带有标签的端点 &lt;code&gt;role=frontend&lt;/code&gt; 都可以连接到任何带有标签的端点 &lt;code&gt;role=backend&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;限制传入和传出连接的可访问端口（四层），例如带标签的端点 &lt;code&gt;role=frontend&lt;/code&gt;只能在端口 443（https）上进行传出连接，端点&lt;code&gt;role=backend&lt;/code&gt; 只能接受端口 443（https）上的连接。&lt;/li&gt;
&lt;li&gt;应用程序协议级别的细粒度访问控制，以保护 HTTP 和远程过程调用（RPC）协议，例如带有标签的端点 &lt;code&gt;role=frontend&lt;/code&gt; 只能执行 REST API 调用 &lt;code&gt;GET /userdata/[0-9]+&lt;/code&gt;，所有其他与 &lt;code&gt;role=backend&lt;/code&gt; API 的交互都受到限制。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>路由</title>
      <link>https://jimmysong.io/book/cilium-handbook/networking/routing/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/networking/routing/</guid>
      <description>
        
        
        &lt;h2 id=&#34;封装&#34;&gt;封装&lt;/h2&gt;
&lt;p&gt;当没有提供配置时，Cilium 会自动在此模式下运行，因为它是对底层网络基础设施要求最低的模式。&lt;/p&gt;
&lt;p&gt;在这种模式下，所有集群节点使用基于 UDP 的封装协议  &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-vxlan&#34; title=&#34;&amp;lt;code&amp;gt;VXLAN&amp;lt;/code&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;VXLAN&lt;/code&gt;&lt;/a&gt;
 或  &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-geneve&#34; title=&#34;&amp;lt;code&amp;gt;Geneve&amp;lt;/code&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;Geneve&lt;/code&gt;&lt;/a&gt;
。Cilium 节点之间的所有流量都被封装。&lt;/p&gt;
&lt;h3 id=&#34;对网络的要求&#34;&gt;对网络的要求&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;封装依赖于正常的节点到节点的连接。这意味着如果 Cilium 节点已经可以互相到达，那么所有的路由要求都已经满足了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;底层网络和防火墙必须允许封装数据包：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;封装方式&lt;/th&gt;
&lt;th&gt;端口范围 / 协议&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;VXLAN（默认）&lt;/td&gt;
&lt;td&gt;8472/UDP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Geneve&lt;/td&gt;
&lt;td&gt;6081/UDP&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;封装模式的优点&#34;&gt;封装模式的优点&lt;/h3&gt;
&lt;p&gt;封装模式具有以下优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;简单&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;连接集群节点的网络不需要知道 PodCIDR。集群节点可以产生多个路由或链路层域。只要集群节点可以使用 IP/UDP 相互访问，底层网络的拓扑就无关紧要。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;寻址空间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于不依赖于任何底层网络限制，如果相应地配置了 PodCIDR 大小，可用的寻址空间可能会更大，并且允许每个节点运行任意数量的 Pod。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;自动配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当与 Kubernetes 等编排系统一起运行时，集群中所有节点的列表（包括它们关联的分配前缀节点）会自动提供给每个代理。加入集群的新节点将自动合并到网格中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;身份上下文&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;封装协议允许将元数据与网络数据包一起携带。Cilium 利用这种能力来传输元数据，例如源安全身份。身份传输是一种优化，旨在避免在远程节点上进行一次身份查找。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;封装模式的缺点&#34;&gt;封装模式的缺点&lt;/h3&gt;
&lt;p&gt;封装模式有以下缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MTU 开销&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;由于添加了封装标头，可用于有效负载的有效 MTU 低于本地路由（VXLAN 的每个网络数据包 50 字节）。这会导致特定网络连接的最大吞吐率较低。这可以通过启用巨型帧（每 1500 字节 50 字节的开销对比每 9000 字节的 50 字节开销）在很大程度上得到缓解。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;本地路由&#34;&gt;本地路由&lt;/h2&gt;
&lt;p&gt;本地路由数据路径使用 &lt;code&gt;tunnel: disabled&lt;/code&gt; 启用并启用本机数据包转发模式。本地数据包转发模式利用 Cilium 运行的网络的路由功能，而不是执行封装。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/networking/routing/native_routing.png&#34; data-img=&#34;/book/cilium-handbook/networking/routing/native_routing.png&#34; data-width=&#34;882&#34; data-height=&#34;375&#34; alt=&#34;image&#34; data-caption=&#34;本地路由模式&#34;&gt;
    
  
  &lt;figcaption&gt;本地路由模式&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在本地路由模式下，Cilium 会将所有未发送到另一个本地端点的数据包委托给 Linux 内核的路由子系统。这意味着数据包将被路由，就好像本地进程会发出数据包一样。因此，连接集群节点的网络必须能够路由 PodCIDR。&lt;/p&gt;
&lt;p&gt;当配置本地路由时，Cilium 会在 Linux 内核中自动启用 IP 转发。&lt;/p&gt;
&lt;h3 id=&#34;对网络的要求-1&#34;&gt;对网络的要求&lt;/h3&gt;
&lt;p&gt;为了运行本地路由模式，连接运行 Cilium 的主机的网络必须能够使用分配给 pod 或其他工作负载的地址转发 IP 流量。&lt;/p&gt;
&lt;p&gt;节点上的 Linux 内核必须知道如何转发运行 Cilium 的所有节点的 pod 或其他工作负载的数据包。这可以通过两种方式实现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;节点本身不知道如何路由所有 pod IP，但网络上存在一个知道如何到达所有其他 pod 的路由器。在这种情况下，Linux 节点配置为包含指向此类路由器的默认路由。该模型用于云提供商网络集成。&lt;/li&gt;
&lt;li&gt;每个单独的节点都知道所有其他节点的所有 Pod IP，并且路由被插入到 Linux 内核路由表中来表示这一点。如果所有节点共享一个 L2 网络，则可以通过启用 &lt;code&gt;auto-direct-node-routes: true&lt;/code&gt; 选项来解决此问题。否则，必须运行额外的系统组件（例如 BGP 守护程序）来分发路由。请参阅 &lt;a href=&#34;https://docs.cilium.io/en/stable/gettingstarted/kube-router/#kube-router&#34; title=&#34;使用 kube-router 运行 BGP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;使用 kube-router 运行 BGP&lt;/a&gt;
 指南，了解如何使用 kube-router 项目实现此目的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;配置&#34;&gt;配置&lt;/h3&gt;
&lt;p&gt;必须设置以下配置选项以在本地路由模式下运行数据路径：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tunnel: disabled&lt;/code&gt;：启用本机路由模式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ipv4-native-routing-cidr: x.x.x.x/y&lt;/code&gt;：设置可以执行本机路由的 CIDR。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Cilium 和 Hubble 简介</title>
      <link>https://jimmysong.io/book/cilium-handbook/intro/</link>
      <pubDate>Tue, 07 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/intro/</guid>
      <description>
        
        
        &lt;p&gt;本文将为你简要介绍 Cilium 和 Hubble。&lt;/p&gt;
&lt;h2 id=&#34;cilium&#34;&gt;什么是 Cilium？&lt;/h2&gt;
&lt;p&gt;Cilium 是开源软件，用于透明地保护使用 Docker 和 Kubernetes 等 Linux 容器管理平台部署的应用服务之间的网络连接。&lt;/p&gt;
&lt;p&gt;Cilium 的基础是一种新的 Linux 内核技术，称为 eBPF，它使强大的安全可视性和控制逻辑动态插入 Linux 本身。由于 eBPF 在 Linux 内核内运行，Cilium 安全策略的应用和更新无需对应用程序代码或容器配置进行任何改动。&lt;/p&gt;
&lt;h2 id=&#34;hubble&#34;&gt;什么是 Hubble？&lt;/h2&gt;
&lt;p&gt;Hubble 是一个完全分布式的网络和安全可观测性平台。它建立在 Cilium 和 eBPF 之上，以完全透明的方式实现对服务的通信行为以及网络基础设施的深度可视性。&lt;/p&gt;
&lt;p&gt;通过建立在 Cilium 之上，Hubble 可以利用 eBPF 实现可视性。依靠 eBPF，所有的可视性都是可编程的，并允许采用一种动态的方法，最大限度地减少开销，同时按照用户的要求提供深入和详细的可视性。Hubble 的创建和专门设计是为了最好地利用这些新的 eBPF 力量。&lt;/p&gt;
&lt;p&gt;Hubble 可以回答诸如以下问题。&lt;/p&gt;
&lt;h3 id=&#34;服务依赖和拓扑图&#34;&gt;服务依赖和拓扑图&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;哪些服务在相互通信？频率如何？服务依赖关系图是什么样子的？&lt;/li&gt;
&lt;li&gt;正在进行哪些 HTTP 调用？服务正在生产或消费哪些 Kafka 主题？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;网络监控和警报&#34;&gt;网络监控和警报&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;是否有任何网络通信失败？为什么会出现通信失败？是 DNS 的问题吗？是应用还是网络问题？通讯是在四层（TCP）还是七层（HTTP）中断的？&lt;/li&gt;
&lt;li&gt;在过去 5 分钟内，哪些服务遇到了 DNS 解析问题？哪些服务最近经历了 TCP 连接中断或连接超时？未回复的 TCP SYN 请求的比率是多少？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;应用监控&#34;&gt;应用监控&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;某一服务或所有集群中的 5xx 或 4xx HTTP 响应代码的比率是多少？&lt;/li&gt;
&lt;li&gt;在我的集群中，HTTP 请求和响应之间的 95% 和 99% 的延迟是什么？哪些服务的性能最差？两个服务之间的延时是多少？&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安全观察性&#34;&gt;安全观察性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;哪些服务由于网络策略而被阻止连接？哪些服务被从集群外访问过？哪些服务解析了一个特定的 DNS 名称？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;为什么使用-cilium-和-hubble&#34;&gt;为什么使用 Cilium 和 Hubble？&lt;/h2&gt;
&lt;p&gt;现代数据中心应用程序的开发已经转向面向服务的体系结构（SOA），通常称为微服务，其中大型应用程序被分成小型独立服务，这些服务使用 HTTP 等轻量级协议通过 API 相互通信。微服务应用程序往往是高度动态的，作为持续交付的一部分部署的滚动更新期间单个容器启动或销毁，应用程序扩展 / 缩小以适应负载变化。&lt;/p&gt;
&lt;p&gt;这种向高度动态的微服务的转变过程，给确保微服务之间的连接方面提出了挑战和机遇。传统的 Linux 网络安全方法（例如 iptables）过滤 IP 地址和 TCP/UDP 端口，但 IP 地址经常在动态微服务环境中流失。容器的高度不稳定的生命周期导致这些方法难以与应用程序并排扩展，因为负载均衡表和访问控制列表要不断更新，可能增长成包含数十万条规则。出于安全目的，协议端口（例如，用于 HTTP 流量的 TCP 端口 80）不能再用于区分应用流量，因为该端口用于跨服务的各种消息。&lt;/p&gt;
&lt;p&gt;另一个挑战是提供准确的可视性，因为传统系统使用 IP 地址作为主要识别工具，其在微服务架构中的寿命被大大缩短，可能才仅仅几秒钟。&lt;/p&gt;
&lt;p&gt;利用 Linux eBPF，Cilium 保留了透明地插入安全可视性 + 强制执行的能力，但这种方式基于服务 /pod/ 容器标识（与传统系统中的 IP 地址识别相反），并且可以根据应用层进行过滤（例如 HTTP）。因此，通过将安全性与寻址分离，Cilium 不仅可以在高度动态的环境中应用安全策略，而且除了提供传统的三层和四层分割之外，还可以通过在 HTTP 层运行来提供更强的安全隔离。&lt;/p&gt;
&lt;p&gt;eBPF 的使用使得 Cilium 能够以高度可扩展的方式实现以上功能，即使对于大规模环境也不例外。&lt;/p&gt;
&lt;h2 id=&#34;功能概述&#34;&gt;功能概述&lt;/h2&gt;
&lt;p&gt;以下是关于 Cilium 可以提供的功能的概述。&lt;/p&gt;
&lt;h3 id=&#34;透明的保护-api&#34;&gt;透明的保护 API&lt;/h3&gt;
&lt;p&gt;能够保护现代应用程序协议，如 REST/HTTP、gRPC 和 Kafka。传统防火墙在三层和四层运行，在特定端口上运行的协议要么完全受信任，要么完全被阻止。Cilium 提供了过滤各个应用程序协议请求的功能，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;允许所有带有方法 &lt;code&gt;GET&lt;/code&gt; 和路径 &lt;code&gt;/public/.*&lt;/code&gt; 的 HTTP 请求。拒绝所有其他请求。&lt;/li&gt;
&lt;li&gt;允许 &lt;code&gt;service1&lt;/code&gt; 在 Kafka  &lt;code&gt;topic1&lt;/code&gt; 主题上生产，&lt;code&gt;service2&lt;/code&gt; 消费 &lt;code&gt;topic1&lt;/code&gt;。拒绝所有其他 Kafka 消息。&lt;/li&gt;
&lt;li&gt;要求 HTTP 标头 &lt;code&gt;X-Token: [0-9]+&lt;/code&gt; 出现在所有 REST 调用中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;详情请参考 &lt;a href=&#34;../policy/#layer-7&#34; title=&#34;七层协议&#34;&gt;七层协议&lt;/a&gt;
。&lt;/p&gt;
&lt;h3 id=&#34;基于身份来保护服务间通信&#34;&gt;基于身份来保护服务间通信&lt;/h3&gt;
&lt;p&gt;现代分布式应用程序依赖于诸如容器之类的技术来促进敏捷性并按需扩展。这将导致在短时间内启动大量应用容器。典型的容器防火墙通过过滤源 IP 地址和目标端口来保护工作负载。这就要求不论在集群中的哪个位置启动容器时都要操作所有服务器上的防火墙。&lt;/p&gt;
&lt;p&gt;为了避免受到规模限制，Cilium 为共享相同安全策略的应用程序容器组分配安全标识。然后，该标识与应用程序容器发出的所有网络数据包相关联，从而允许验证接收节点处的身份。使用键值存储执行安全身份管理。&lt;/p&gt;
&lt;h3 id=&#34;安全访问外部服务&#34;&gt;安全访问外部服务&lt;/h3&gt;
&lt;p&gt;基于标签的安全性是集群内部访问控制的首选工具。为了保护对外部服务的访问，支持入口（ingress）和出口（egress）的传统基于 CIDR 的安全策略。这允许限制对应用程序容器的访问以及对特定 IP 范围的访问。&lt;/p&gt;
&lt;h3 id=&#34;简单网络&#34;&gt;简单网络&lt;/h3&gt;
&lt;p&gt;一个简单的扁平三层网络能够跨越多个集群连接所有应用程序容器。使用主机范围分配器可以简化 IP 分配。这意味着每个主机可以在主机之间没有任何协调的情况下分配 IP。&lt;/p&gt;
&lt;p&gt;支持以下多节点网络模型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Overlay&lt;/strong&gt;：基于封装的虚拟网络产生所有主机。目前 VXLAN 和 Geneve 已经完成，但可以启用 Linux 支持的所有封装格式。&lt;/p&gt;
&lt;p&gt;何时使用此模式：此模式具有最小的基础架构和集成要求。它几乎适用于任何网络基础架构，唯一的要求是主机之间可以通过 IP 连接。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;本机路由&lt;/strong&gt;：使用 Linux 主机的常规路由表。网络必须能够路由应用程序容器的 IP 地址。&lt;/p&gt;
&lt;p&gt;何时使用此模式：此模式适用于高级用户，需要了解底层网络基础结构。此模式适用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地 IPv6 网络&lt;/li&gt;
&lt;li&gt;与云网络路由器配合使用&lt;/li&gt;
&lt;li&gt;如果你已经在运行路由守护进程&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;负载均衡&#34;&gt;负载均衡&lt;/h3&gt;
&lt;p&gt;Cilium 为应用容器之间的流量和外部服务实现了分布式负载均衡，能够完全取代 kube-proxy 等组件。负载均衡是在 eBPF 中使用高效的 hashtables 实现的，允许几乎无限规模扩展。&lt;/p&gt;
&lt;p&gt;对于南北向的负载均衡，Cilium 的 eBPF 实现了最大的性能优化，可以连接到 XDP（eXpress Data Path），并支持直接服务器返回（DSR）以及 Maglev 一致的散列，如果负载均衡操作不在源主机上执行的话。&lt;/p&gt;
&lt;p&gt;对于东西向类型的负载均衡，Cilium 在 Linux 内核的套接字层（如在 TCP 连接时）执行有效的服务到后端转换，这样就可以避免在较低层的每包 NAT 操作开销。&lt;/p&gt;
&lt;h3 id=&#34;带宽管理&#34;&gt;带宽管理&lt;/h3&gt;
&lt;p&gt;Cilium 通过高效的基于 EDT（Earlist Departure Time，最早离开时间）的速率限制来实现带宽管理，eBPF 适用于从节点流出的容器的流量。与传统的方法相比，如在 CNI 插件中使用的 HTB（Hierarchy Token Bucket，分层令牌桶）或 TBF（Token Bucket Filter，令牌桶过滤器），这可以大大减少应用的传输尾部延迟，并避免在多队列网卡下锁定。&lt;/p&gt;
&lt;h3 id=&#34;监控和故障排除&#34;&gt;监控和故障排除&lt;/h3&gt;
&lt;p&gt;可视性和故障排查是任何分布式系统运行的基础。虽然我们喜欢用 &lt;code&gt;tcpdump&lt;/code&gt; 和 &lt;code&gt;ping&lt;/code&gt;，它们很好用，但我们努力为故障排除提供更好的工具。包括以下工具：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;带有元数据的事件监测：当一个数据包被丢弃时，该工具不只是报告数据包的来源和目的地 IP，该工具还提供发送方和接收方的完整标签信息以及许多其他信息。&lt;/li&gt;
&lt;li&gt;通过 Prometheus 输出指标。关键指标通过 Prometheus 导出，以便与你现有的仪表盘整合。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/cilium/hubble/&#34; title=&#34;Hubble&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hubble&lt;/a&gt;
：一个专门为 Cilium 编写的可观测性平台。它提供服务依赖拓扑、监控和警报，以及基于流量日志的应用和安全可视性。&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;../concepts&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;下一章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Cilium 中文指南</title>
      <link>https://jimmysong.io/book/cilium-handbook/</link>
      <pubDate>Tue, 07 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/</guid>
      <description>
        
        
        &lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  注意
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  《Cilium 中文指南》除特殊说明，默认基于 Cilium 1.11  稳定版本。
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;《Cilium 中文指南》当前内容译自 &lt;a href=&#34;https://docs.cilium.io/en/v1.11/&#34; title=&#34;Cilium 官方文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cilium 官方文档&lt;/a&gt;
，节选了以下章节：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;概念：描述了 Cilium 的组件以及部署 Cilium 的不同模式。提供高层次的
运行一个完整的 Cilium 部署并理解其行为所需的高层次理解。&lt;/li&gt;
&lt;li&gt;开始：快速开始使用 Cilium。&lt;/li&gt;
&lt;li&gt;策略：详细介绍了策略语言结构和支持的格式。&lt;/li&gt;
&lt;li&gt;内部原理：介绍了一些组件的内部细节。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其他未翻译部分主要涉及命令、API 及运维，本指南未来会加入笔者个人观点及其他内容。&lt;/p&gt;
&lt;h2 id=&#34;大纲&#34;&gt;大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/intro/&#34;&gt;Cilium 和 Hubble 简介&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/clustermesh/&#34;&gt;多集群（集群网格）&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/concepts/&#34;&gt;Cilium 概念&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/networking/&#34;&gt;网络&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/security/&#34;&gt;网络安全&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/&#34;&gt;eBPF 数据路径&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/policy/&#34;&gt;网络策略&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/&#34;&gt;Kubernetes 集成&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;intro&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;开始阅读&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>网络策略模式</title>
      <link>https://jimmysong.io/book/cilium-handbook/policy/intro/</link>
      <pubDate>Tue, 07 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/policy/intro/</guid>
      <description>
        
        
        &lt;p&gt;Cilium 代理（agent）和 Cilium 网络策略的配置决定了一个端点（Endpoint）是否接受来自某个来源的流量。代理可以进入以下三种策略执行模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;default&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果任何规则选择了一个 Endpoint 并且该规则有一个入口部分，那么该端点就会在入口处进入默认拒绝状态。如果任何规则选择了一个 Endpoint 并且该规则有一个出口部分，那么该端点就会在出口处进入默认拒绝状态。这意味着端点开始时没有任何限制，一旦有规则限制其在入口处接收流量或在出口处传输流量的能力，那么端点就会进入白名单模式，所有流量都必须明确允许。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;always&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 always 模式下，即使没有规则选择特定的端点，也会在所有端点上启用策略执行。如果你想配置健康实体，在启动 cilium-agent 时用 &lt;code&gt;enable-policy=always&lt;/code&gt; 检查整个集群的连接性，你很可能想启用与健康端点的通信。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;never&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在“never&amp;quot; 模式下，即使规则选择了特定的端点，所有端点上的策略执行也被禁用。换句话说，所有流量都允许来自任何来源（入口处）或目的地（出口处）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要在运行时为 Cilium 代理管理的所有端点配置策略执行模式，请使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cilium config &lt;span class=&#34;nv&#34;&gt;PolicyEnforcement&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;default,always,never&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你想在启动时为一个特定的代理配置策略执行模式，在启动 Cilium 守护程序时提供以下标志：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cilium-agent --enable-policy&lt;span class=&#34;o&#34;&gt;={&lt;/span&gt;default,always,never&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;...&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样，你可以通过在 Cilium DaemonSet 中加入上述参数来启用整个 Kubernetes 集群的策略执行模式：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CILIUM_ENABLE_POLICY&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;always&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;规则基础知识&#34;&gt;规则基础知识&lt;/h2&gt;
&lt;p&gt;所有策略规则都是基于白名单模式，也就是说，策略中的每条规则都允许与该规则相匹配的流量。如果存在两条规则，其中一条可以匹配更广泛的流量，那么所有匹配更广泛规则的流量都将被允许。如果两个或更多的规则之间有一个交叉点，那么与这些规则的结合点相匹配的流量将被允许。最后，如果流量不匹配任何规则，它将根据网络策略执行模式被丢弃。&lt;/p&gt;
&lt;p&gt;策略规则共享一个共同的基本类型，指定规则适用于哪些端点，并共享元数据以识别规则。每条规则都被分割成一个入口部分和一个出口部分。入口部分包含必须应用于进入端点的流量的规则，出口部分包含应用于来自匹配端点选择器的端点的流量的规则。可以提供入口、出口或两者。如果入口和出口都被省略，规则就没有效果。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Rule&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// EndpointSelector 选择所有应该受此规则约束的端点。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// EndpointSelector 和 NodeSelector 不能同时为空，并且
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 互相排斥。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;EndpointSelector&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;EndpointSelector&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json: &amp;#34;endpointSelector,omitempty&amp;#34;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// NodeSelector 选择所有应该受此规则约束的节点。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// EndpointSelector 和 NodeSelector 不能同时为空，并且相互排斥的。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 只能在 CiliumClusterwideNetworkPolicies 中使用。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;NodeSelector&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;EndpointSelector&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json: &amp;#34;nodeSelector,omitempty&amp;#34;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Ingress 是一个 IngressRule 的列表，它在 Ingress 时被强制执行。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 如果省略或为空，则此规则不适用于入口处。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Ingress&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;IngressRule&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json: &amp;#34;ingress,omitempty&amp;#34;`&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;。&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Egress 是一个在出口处执行的 EgressRule 的列表。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 如果省略或为空，该规则不适用于出口处。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Egress&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;EgressRule&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json: &amp;#34;egress,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Labels 是一个可选的字符串列表，可以用来
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 重新识别该规则或存储元数据。它可以根据标签来查询
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 或删除基于标签的字符串。标签并不要求是
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 唯一的，多个规则可以有重叠的或相同的标签。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Labels&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;labels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;LabelArray&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json: &amp;#34;labels,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Description 是一个自由格式的字符串，它可以由规则的创建者使用。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 它可以被规则的创建者用来存储该规则目的的可读解释。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// 规则不能通过注释来识别。
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Description&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json: &amp;#34;description,omitempty&amp;#34;`&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;endpointSelector / nodeSelector&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;选择策略规则所适用的端点或节点。策略规则将被应用于所有符合选择器中指定标签的端点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ingress&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;必须在端点入口处适用的规则列表，即适用于进入端点的所有网络数据包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Egress&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;必须适用于端点出口的规则列表，即适用于离开端点的所有网络数据包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lebels&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;标签是用来识别规则的。规则可以通过标签列出和删除。通过以下方式导入的策略规则 kubernetes 自动获得 &lt;code&gt;io.cilium.k8s.policy.name=NAME&lt;/code&gt; 的标签，其中 &lt;code&gt;NAME&lt;/code&gt; 对应的是在 NetworkPolicy 或 CiliumNetworkPolicy 资源中指定的名称。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;描述是一个字符串，不被 Cilium 所解释。它可以用来以人类可读的形式描述规则的意图和范围。&lt;/p&gt;
&lt;h2 id=&#34;端点选择器&#34;&gt;端点选择器&lt;/h2&gt;
&lt;p&gt;端点选择器基于 &lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/%5c#label-selectors&#34; title=&#34;Kubernetes LabelSelector&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes LabelSelector&lt;/a&gt;
。它之所以被称为端点选择器，是因为它只适用于 Endpoint.&lt;/p&gt;
&lt;h2 id=&#34;节点选择器&#34;&gt;节点选择器&lt;/h2&gt;
&lt;p&gt;节点选择器也是基于端点选择器的，不过它不是与端点相关的标签相匹配，而是适用于与集群中的节点相关的标签。&lt;/p&gt;
&lt;p&gt;节点选择器只能用在 CiliumClusterwideNetworkPolicy。请参阅 Host Policies 以了解关于节点级策略范围的详细信息。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>组件概览</title>
      <link>https://jimmysong.io/book/cilium-handbook/concepts/overview/</link>
      <pubDate>Tue, 07 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/concepts/overview/</guid>
      <description>
        
        
        &lt;p&gt;本文将为你介绍 Cilium 和 Hubble 部署中包含的组件。&lt;/p&gt;
&lt;p&gt;Cilium 包含以下组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;代理&lt;/li&gt;
&lt;li&gt;客户端&lt;/li&gt;
&lt;li&gt;Operator&lt;/li&gt;
&lt;li&gt;CNI 插件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hubble 包含以下组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器&lt;/li&gt;
&lt;li&gt;中继器&lt;/li&gt;
&lt;li&gt;客户端&lt;/li&gt;
&lt;li&gt;图形用户界面&lt;/li&gt;
&lt;li&gt;eBPF&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外你还需要一个数据库来存储代理的状态。&lt;/p&gt;
&lt;p&gt;下图展示的 Cilium 部署的组件。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/concepts/overview/cilium-arch.png&#34; data-img=&#34;/book/cilium-handbook/concepts/overview/cilium-arch.png&#34; data-width=&#34;1619&#34; data-height=&#34;1443&#34; alt=&#34;image&#34; data-caption=&#34;&#34;&gt;
    
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;cilium&#34;&gt;Cilium&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;代理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cilium 代理（&lt;code&gt;cilium-agent&lt;/code&gt;）在集群的每个节点上运行。在高层次上，代理接受通过 Kubernetes 或 API 的配置，描述网络、服务负载均衡、网络策略、可视性和监控要求。&lt;/p&gt;
&lt;p&gt;Cilium 代理监听来自编排系统（如 Kubernetes）的事件，以了解容器或工作负载的启动和停止时间。它管理 eBPF 程序，Linux 内核用它来控制这些容器的所有网络访问。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;客户端（CLI）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cilium CLI 客户端（&lt;code&gt;cilium&lt;/code&gt;）是一个命令行工具，与 Cilium 代理一起安装。它与运行在同一节点上的 Cilium 代理的 REST API 互动。CLI 允许检查本地代理的状态。它还提供工具，直接访问 eBPF map 以验证其状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Operator&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Cilium Operator 负责管理集群中的职责，这些职责在逻辑上应该是为整个集群处理一次，而不是为集群中的每个节点处理一次。Cilium Operator 不在任何转发或网络策略决定的关键路径上。如果 Operator 暂时不可用，集群一般会继续运作。然而，根据配置的不同，Operator 的可用性失败可能导致：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP 地址管理（IPAM）的延迟，因此，如果 Operator 需要分配新的 IP 地址，那么新工作负载的调度也会延迟&lt;/li&gt;
&lt;li&gt;未能更新 kvstore 的心跳密钥，这将导致代理宣布 kvstore 不健康并重新启动。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CNI 插件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;CNI 插件（&lt;code&gt;cilium-cni&lt;/code&gt;）由 Kubernetes 在一个节点上调度或终止 pod 时调用。它与节点的 Cilium API 交互，以触发必要的数据通路配置，为 pod 提供网络、负载均衡和网络策略。&lt;/p&gt;
&lt;h2 id=&#34;hubble&#34;&gt;Hubble&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;服务器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hubble 服务器在每个节点上运行，从 Cilium 检索基于 eBPF 的可视性。它被嵌入到 Cilium 代理中，以实现高性能和低开销。它提供一个 gRPC 服务来检索流量和 Prometheus 指标。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中继器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;中继器（&lt;code&gt;hubble-relay&lt;/code&gt;）是一个独立的组件，它知道所有正在运行的 Hubble 服务器，并通过连接它们各自的 gRPC API 和提供代表集群中所有服务器的 API，提供集群范围内的可视性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;客户端（CLI）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Hubble CLI（&lt;code&gt;hubble&lt;/code&gt;）是一个命令行工具，能够连接到 &lt;code&gt;hubble-relay&lt;/code&gt; 的 gRPC API 或本地服务器来检索流量事件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;图形用户界面（GUI）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;图形用户界面（&lt;code&gt;hubble-ui&lt;/code&gt;）利用基于中继的可视性，提供一个图形化的服务依赖性和连接图。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;eBPF&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;eBPF 是一个 Linux 内核字节码解释器，最初是用来过滤网络数据包的，例如 tcpdump 和 socket 过滤器。此后，它被扩展为额外的数据结构，如 hashtable 和数组，以及额外的动作，以支持数据包的处理、转发、封装等。内核验证器确保 eBPF 程序安全运行，JIT 编译器将字节码转换为 CPU 架构的特定指令，以提高本地执行效率。eBPF 程序可以在内核的各种钩点上运行，如传入和传出数据包。&lt;/p&gt;
&lt;p&gt;eBPF 继续发展，并在每个新的 Linux 版本中获得额外的功能。Cilium 利用 eBPF 来执行核心数据通路过滤、处理、监控和重定向，并要求 eBPF 的功能在任何 Linux 内核 4.8.0 或更新的版本中。基于 4.8.x 已经宣布终结，4.9.x 已经被提名为稳定版本，我们建议至少运行内核 4.9.17（截至本文撰写时，当前最新的稳定 Linux 内核是 4.10.x）。&lt;/p&gt;
&lt;p&gt;Cilium 能够探测到 Linux 内核的可用功能，并在探测到时自动利用更多的最新功能。&lt;/p&gt;
&lt;h2 id=&#34;数据存储&#34;&gt;数据存储&lt;/h2&gt;
&lt;p&gt;Cilium 需要一个数据存储来传播代理之间的状态。它支持以下数据存储：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kubernetes CRD（默认）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;存储任何数据和传播状态的默认选择是使用 Kubernetes 自定义资源定义（CRD）。CRD 由 Kubernetes 提供，用于集群组件通过 Kubernetes 资源表示配置和状态。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;键值存储&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Cilium 的默认配置中配置的 Kubernetes CRD 可以满足状态存储和传播的所有要求。键值存储可以选择作为一种优化，以提高集群的可扩展性，因为直接使用键值存储的变化通知和存储要求更有效率。&lt;/p&gt;
&lt;p&gt;目前支持的键值存储是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/etcd-io/etcd&#34; title=&#34;etcd&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;etcd&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  可以直接利用 Kubernetes 的 etcd 集群或维护一个专门的 etcd 集群。
&lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>Cilium 术语说明</title>
      <link>https://jimmysong.io/book/cilium-handbook/concepts/terminology/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/concepts/terminology/</guid>
      <description>
        
        
        &lt;h2 id=&#34;labels&#34;&gt;标签&lt;/h2&gt;
&lt;p&gt;标签（Label）是一种通用的、灵活的和高度可扩展的方式，可以用来处理大量资源，因为我们可以用它来对事物任意分组和创建集合。每当需要描述、解决或选择某物时，它都是基于标签完成的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#endpoints&#34; title=&#34;端点&#34;&gt;端点&lt;/a&gt;
 被分配了从容器运行时、编排系统或其他来源派生的标签。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../policy/&#34; title=&#34;网络策略&#34;&gt;网络策略&lt;/a&gt;
 根据标签选择允许通信的 &lt;a href=&#34;#endpoints&#34; title=&#34;端点对&#34;&gt;端点对&lt;/a&gt;
，策略本身也由标签标识。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;what-is-a-label&#34;&gt;什么是标签？&lt;/h3&gt;
&lt;p&gt;标签是一对由 &lt;code&gt;key&lt;/code&gt; 和 &lt;code&gt;value&lt;/code&gt; 组成的字符串。可以将标签格式化为具有 &lt;code&gt;key=value&lt;/code&gt; 的单个字符串。&lt;code&gt;key&lt;/code&gt; 部分是强制性的，并且必须是唯一的。这通常是通过使用反向域名概念来实现的，例如 &lt;code&gt;io.cilium.mykey=myvalue&lt;/code&gt;。&lt;code&gt;value&lt;/code&gt; 部分是可选的，可以省略，例如 &lt;code&gt;io.cilium.mykey&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;键名通常应由字符集组成 &lt;code&gt;[a-z0-9-.]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;当使用标签选择资源时，键和值都必须匹配，例如，当一个策略应该应用于所有带有标签 &lt;code&gt;my.corp.foo&lt;/code&gt; 的端点时，标签 &lt;code&gt;my.corp.foo=bar&lt;/code&gt; 不会与该选择器匹配。&lt;/p&gt;
&lt;h3 id=&#34;label-source&#34;&gt;标签来源&lt;/h3&gt;
&lt;p&gt;标签可以来自各种来源。例如，&lt;a href=&#34;#endpoint&#34; title=&#34;端点&#34;&gt;端点&lt;/a&gt;
 将通过本地容器运行时派生与容器关联的标签，以及与 Kubernetes 提供的 pod 关联的标签。由于这两个标签命名空间彼此不知道，这可能会导致标签键冲突。&lt;/p&gt;
&lt;p&gt;为了解决这种潜在的冲突，Cilium 在导入标签时为所有标签键添加前缀 &lt;code&gt;source:&lt;/code&gt; 以指示标签的来源，例如 &lt;code&gt;k8s:role=frontend&lt;/code&gt;、&lt;code&gt;container:user=joe&lt;/code&gt;、&lt;code&gt;k8s:role=backend&lt;/code&gt;。这意味着当您使用 &lt;code&gt;docker run [...] -l foo=bar&lt;/code&gt; 运行 Docker 容器时，标签 &lt;code&gt;container:foo=bar&lt;/code&gt; 将出现在代表容器的 Cilium 端点上。类似地，以 &lt;code&gt;foo: bar&lt;/code&gt; 标签启动的 Kubernetes pod 将由与标签关联的 Cilium 端点表示。为每个潜在来源分配一个唯一名称。当前支持以下标签源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;container:&lt;/code&gt; 对于从本地容器运行时派生的标签&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k8s:&lt;/code&gt; 对于从 Kubernetes 派生的标签&lt;/li&gt;
&lt;li&gt;&lt;code&gt;reserved:&lt;/code&gt; 有关特殊保留标签，请参阅 &lt;a href=&#34;#reserved-labels&#34; title=&#34;特殊标识&#34;&gt;特殊标识&lt;/a&gt;
。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;unspec:&lt;/code&gt; 对于未指定来源的标签&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当使用标签来识别其他资源时，可以包含源以将标签匹配限制为特定类型。如果未提供源，则标签源默认为 &lt;code&gt;any:&lt;/code&gt;，将匹配所有标签，无论其来源如何。如果提供了来源，则选择和匹配标签的来源需要匹配。&lt;/p&gt;
&lt;h2 id=&#34;endpoints&#34;&gt;端点&lt;/h2&gt;
&lt;p&gt;Cilium 通过分配 IP 地址使应用程序容器在网络上可用。多个应用容器可以共享同一个 IP 地址；此模型的一个典型示例是 Kubernetes Pod。所有共享公共地址的应用程序容器都在 Cilium 所指的端点中分组在一起。&lt;/p&gt;
&lt;p&gt;分配单独的 IP 地址允许每个端点使用整个四层端口范围。这实质上允许在同一个集群节点上运行的多个应用程序容器都绑定到众所周知的端口，例如 &lt;code&gt;80&lt;/code&gt; 不会引起任何冲突。&lt;/p&gt;
&lt;p&gt;Cilium 的默认行为是为每个端点分配 IPv6 和 IPv4 地址。但是，可以将此行为配置为仅使用该 &lt;code&gt;--enable-ipv4=false&lt;/code&gt; 选项分配 IPv6 地址。如果同时分配了 IPv6 和 IPv4 地址，则任一地址都可用于到达端点。相同的行为将适用于策略规则、负载均衡等。&lt;/p&gt;
&lt;h3 id=&#34;identification&#34;&gt;身份识别&lt;/h3&gt;
&lt;p&gt;出于识别目的，Cilium 为集群节点上的所有端点分配一个内部端点 ID。端点 ID 在单个集群节点的上下文中是唯一的。&lt;/p&gt;
&lt;h3 id=&#34;endpoint-metadata&#34;&gt;端点元数据&lt;/h3&gt;
&lt;p&gt;端点自动从与端点关联的应用程序容器中派生元数据。然后可以使用元数据来识别端点，以实现安全 / 策略、负载均衡和路由目的。&lt;/p&gt;
&lt;p&gt;元数据的来源取决于使用的编排系统和容器运行时。当前支持以下元数据检索机制：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;系统&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Kubernetes&lt;/td&gt;
&lt;td&gt;Pod 标签（通过 Kubernetes API）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;containerd（Docker）&lt;/td&gt;
&lt;td&gt;容器标签（通过 Docker API）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;元数据以 &lt;a href=&#34;#labels&#34; title=&#34;标签&#34;&gt;标签&lt;/a&gt;
 的形式附加到端点。&lt;/p&gt;
&lt;p&gt;以下示例启动一个带有标签的容器，该标签 &lt;code&gt;app=benchmark&lt;/code&gt; 随后与端点相关联。标签带有前缀， &lt;code&gt;container:&lt;/code&gt; 表示标签是从容器运行时派生的。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ docker run --net cilium -d -l &lt;span class=&#34;nv&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;benchmark tgraf/netperf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;aaff7190f47d071325e7af06577f672beff64ccc91d2b53c42262635c063cf1c
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$  cilium endpoint list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ENDPOINT   POLICY        IDENTITY   LABELS &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;source:key &lt;span class=&#34;o&#34;&gt;[=&lt;/span&gt;value&lt;span class=&#34;o&#34;&gt;])&lt;/span&gt;   IPv6                   IPv4            STATUS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           ENFORCEMENT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;62006&lt;/span&gt;      Disabled      &lt;span class=&#34;m&#34;&gt;257&lt;/span&gt;        container:app&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;benchmark       f00d::a00:20f:0:f236   10.15.116.202   ready
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一个端点可以有来自多个源的元数据。例如使用 containerd 作为容器运行时的 Kubernetes 集群。端点将派生 Kubernetes pod 标签（以&lt;code&gt;k8s:&lt;/code&gt;源前缀为前缀）和容器标签（以&lt;code&gt;container:&lt;/code&gt; 源前缀为前缀）。&lt;/p&gt;
&lt;h2 id=&#34;identity&#34;&gt;身份&lt;/h2&gt;
&lt;p&gt;所有 &lt;a href=&#34;#endpoints&#34; title=&#34;端点&#34;&gt;端点&lt;/a&gt;
 都分配了一个身份。身份用于端点之间的基本连接。在传统的网络术语中，这运行在三层。&lt;/p&gt;
&lt;p&gt;身份由 &lt;a href=&#34;#labels&#34; title=&#34;标签&#34;&gt;标签&lt;/a&gt;
 标识，并被赋予一个集群范围的唯一标识符。端点被分配与端点的 &lt;a href=&#34;#security-relevant-labels&#34; title=&#34;安全相关标签&#34;&gt;安全相关标签&lt;/a&gt;
 匹配的身份，即共享同一组 &lt;a href=&#34;#security-relevant-labels&#34; title=&#34;安全相关标签&#34;&gt;安全相关标签&lt;/a&gt;
 的所有端点将共享相同的身份。此概念允许将策略实施扩展到大量端点，因为随着应用程序的扩展，许多单独的端点通常会共享同一组安全 &lt;a href=&#34;#labels&#34; title=&#34;标签&#34;&gt;标签&lt;/a&gt;
。&lt;/p&gt;
&lt;h3 id=&#34;what-is-an-identity&#34;&gt;什么是身份？&lt;/h3&gt;
&lt;p&gt;端点的身份是基于与派生到 &lt;a href=&#34;#endpoint&#34; title=&#34;端点&#34;&gt;端点&lt;/a&gt;
 的 pod 或容器关联的 &lt;a href=&#34;#labels&#34; title=&#34;标签&#34;&gt;标签&lt;/a&gt;
 派生的。当一个 pod 或容器启动时，Cilium 会根据容器运行时收到的事件创建一个 &lt;a href=&#34;#endpoint&#34; title=&#34;端点&#34;&gt;端点&lt;/a&gt;
 来代表网络上的 pod 或容器。下一步，Cilium 将解析 &lt;a href=&#34;#endpoint&#34; title=&#34;端点&#34;&gt;端点&lt;/a&gt;
 创建的身份。每当 Pod 或容器的 &lt;a href=&#34;#labels&#34; title=&#34;标签&#34;&gt;标签&lt;/a&gt;
 发生变化时，都会重新确认身份并根据需要自动修改。&lt;/p&gt;
&lt;h3 id=&#34;security-relevant-labels&#34;&gt;安全相关标签&lt;/h3&gt;
&lt;p&gt;在派生 &lt;a href=&#34;#identity&#34; title=&#34;身份&#34;&gt;身份&lt;/a&gt;
 时，并非所有与容器或 pod 关联的 &lt;a href=&#34;#labels&#34; title=&#34;标签&#34;&gt;标签&lt;/a&gt;
 都有意义。标签可用于存储元数据，例如容器启动时的时间戳。Cilium 需要知道哪些标签是有意义的，知道在推导身份时需要考虑哪些标签。为此，用户需要指定有意义标签的字符串前缀列表。标准行为是包含所有以 &lt;code&gt;id&lt;/code&gt; 为前缀开头的标签，例如，&lt;code&gt;id.service1&lt;/code&gt;、&lt;code&gt;id.service2&lt;/code&gt;、&lt;code&gt;id.groupA.service44&lt;/code&gt;。启动代理时可以指定有意义的标签前缀列表。&lt;/p&gt;
&lt;h3 id=&#34;special-identities&#34;&gt;特殊身份&lt;/h3&gt;
&lt;p&gt;Cilium 管理的所有端点都将被分配一个身份。为了允许与不由 Cilium 管理的网络端点进行通信，存在特殊的身份来表示它们。特殊保留标识以 &lt;code&gt;reserved:&lt;/code&gt; 字符串为前缀。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;身份&lt;/th&gt;
&lt;th&gt;数字 ID&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:unknown&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;无法推导出身份。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;本地主机。源自或指定到本地主机 IP 之一的任何流量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:world&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;集群外的任何网络端点。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:unmanaged&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;不受 Cilium 管理的端点，例如在安装 Cilium 之前启动的 Kubernetes pod。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:health&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;这是 Cilium 代理生成的健康检查流量。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:init&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;尚未解析身份的端点被分配了初始身份。这代表了一个端点的阶段，在该阶段中，派生安全身份所需的一些元数据仍然缺失。这通常是引导阶段的情况。仅当端点的标签在创建时未知时才分配初始化标识。Docker 插件可能就是这种情况。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:remote-node&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;所有远程集群主机的集合。源自或指定到任何连接集群中任何主机的 IP 之一的任何流量，而不是本地节点。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;reserved:kube-apiserver&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;具有为 kube-apiserver 运行的后端的远程节点。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  Cilium 曾经在 &lt;code&gt;reserved:host&lt;/code&gt; 身份中同时包含本地和所有远程主机。除非使用最近的默认 ConfigMap，否则这仍然是默认选项。可以通过 &lt;code&gt;enable-remote-node-identity&lt;/code&gt; 选项启用远程节点身份。
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;知名身份&#34;&gt;知名身份&lt;/h3&gt;
&lt;p&gt;以下是 Cilium 自动识别的知名身份列表，Cilium 将分发安全身份，而无需联系任何外部依赖项，例如 kvstore。这样做的目的是允许引导 Cilium 并通过集群中的策略强制实现网络连接，以实现基本服务，而无需任何依赖项。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;部署&lt;/th&gt;
&lt;th&gt;命名空间&lt;/th&gt;
&lt;th&gt;服务账户&lt;/th&gt;
&lt;th&gt;集群名称&lt;/th&gt;
&lt;th&gt;数字 ID&lt;/th&gt;
&lt;th&gt;标签&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;kube-dns&lt;/td&gt;
&lt;td&gt;kube-system&lt;/td&gt;
&lt;td&gt;kube-dns&lt;/td&gt;
&lt;td&gt;cilium-cluster&lt;/td&gt;
&lt;td&gt;102&lt;/td&gt;
&lt;td&gt;&lt;code&gt;k8s-app=kube-dns&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;kube-dns（EKS）&lt;/td&gt;
&lt;td&gt;kube-system&lt;/td&gt;
&lt;td&gt;kube-dns&lt;/td&gt;
&lt;td&gt;cilium-cluster&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;&lt;code&gt;k8s-app=kube-dns&lt;/code&gt;,&lt;code&gt;eks.amazonaws.com/component=kube-dns&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;core-dns&lt;/td&gt;
&lt;td&gt;kube-system&lt;/td&gt;
&lt;td&gt;coredns&lt;/td&gt;
&lt;td&gt;cilium-cluster&lt;/td&gt;
&lt;td&gt;104&lt;/td&gt;
&lt;td&gt;&lt;code&gt;k8s-app=kube-dns&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;core-dns（EKS）&lt;/td&gt;
&lt;td&gt;kube-system&lt;/td&gt;
&lt;td&gt;coredns&lt;/td&gt;
&lt;td&gt;cilium-cluster&lt;/td&gt;
&lt;td&gt;106&lt;/td&gt;
&lt;td&gt;&lt;code&gt;k8s-app=kube-dns&lt;/code&gt;,&lt;code&gt;eks.amazonaws.com/component=coredns&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cilium-operator&lt;/td&gt;
&lt;td&gt;cilium-namspace&lt;/td&gt;
&lt;td&gt;cilium-operator&lt;/td&gt;
&lt;td&gt;cilium-cluster&lt;/td&gt;
&lt;td&gt;105&lt;/td&gt;
&lt;td&gt;&lt;code&gt;name=cilium-operator&lt;/code&gt;,&lt;code&gt;io.cilium/app=operator&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-提示 py-1 px-2&#34;&gt;
  如果 &lt;code&gt;cilium-cluster&lt;/code&gt; 未定义该 &lt;code&gt;cluster-name&lt;/code&gt; 选项，则默认值将设置为  &lt;code&gt;default&lt;/code&gt;。
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;dentity-management-in-the-cluster&#34;&gt;集群中的身份管理&lt;/h3&gt;
&lt;p&gt;身份在整个集群中都是有效的，这意味着如果在多个集群节点上启动了多个 pod 或容器，如果它们共享身份相关标签，那么它们都将解析并共享同一个身份。这需要集群节点之间的协调。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/concepts/terminology/identity_store.png&#34; data-img=&#34;/book/cilium-handbook/concepts/terminology/identity_store.png&#34; data-width=&#34;1450&#34; data-height=&#34;795&#34; alt=&#34;image&#34; data-caption=&#34;集群中的身份管理示意图&#34;&gt;
    
  
  &lt;figcaption&gt;集群中的身份管理示意图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;解析端点身份的操作是在分布式键值存储的帮助下执行的，如果之前没有看到以下值，则允许以生成新的唯一标识符的形式执行原子操作。这允许每个集群节点创建与身份相关的标签子集，然后查询键值存储以派生身份。根据之前是否查询过这组标签，要么创建一个新的身份，要么返回初始查询的身份。&lt;/p&gt;
&lt;h2 id=&#34;node&#34;&gt;节点&lt;/h2&gt;
&lt;p&gt;Cilium 将节点称为集群的单个成员。每个节点都必须运行 &lt;code&gt;cilium-agent&lt;/code&gt; 并且将以自主的方式运行。为了简单和规模化，在不同节点上运行的 Cilium 代理之间的状态同步保持在最低限度。它仅通过键值存储或数据包元数据发生。&lt;/p&gt;
&lt;h3 id=&#34;node-address&#34;&gt;节点地址&lt;/h3&gt;
&lt;p&gt;Cilium 会自动检测节点的 IPv4 和 IPv6 地址。当 &lt;code&gt;cilium-agent&lt;/code&gt; 启动时打印出检测到的节点地址：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ini&#34; data-lang=&#34;ini&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;Local node-name: worker0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;Node-IPv6: f00d::ac10:14:0:1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;External-Node IPv4: 172.16.0.20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;na&#34;&gt;Internal-Node IPv4: 10.200.28.238&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>IP 地址管理（IPAM）</title>
      <link>https://jimmysong.io/book/cilium-handbook/networking/ipam/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/networking/ipam/</guid>
      <description>
        
        
        &lt;p&gt;IP 地址管理（IPAM）负责分配和管理由 Cilium 管理的网络端点（容器和其他）使用的 IP 地址。Cilium 支持以下各种 IPAM 模式，以满足不同用户的需求。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#cluster-scope&#34; title=&#34;集群范围（默认）&#34;&gt;集群范围（默认）&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#kubernetes-host-scope&#34; title=&#34;Kubernetes 主机范围&#34;&gt;Kubernetes 主机范围&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/networking/ipam/azure/&#34; title=&#34;Azure IPAM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Azure IPAM&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/networking/ipam/eni/&#34; title=&#34;AWS ENI&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AWS ENI&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/networking/ipam/gke/&#34; title=&#34;Google Kubernetes Engine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google Kubernetes Engine&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#crd-backed&#34; title=&#34;CRD 支持&#34;&gt;CRD 支持&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cluster-scope&#34;&gt;集群范围&lt;/h2&gt;
&lt;p&gt;集群范围 IPAM 模式将 PodCIDR 分配给每个节点，并使用每个节点上的主机范围分配器分配 IP。因此它类似于 &lt;a href=&#34;#kubernetes-host-scope&#34; title=&#34;Kubernetes 主机范围&#34;&gt;Kubernetes 主机范围&lt;/a&gt;
模式。区别在于 Kubernetes 不是通过 Kubernetes &lt;code&gt;v1.Node&lt;/code&gt;资源分配每个节点的 PodCIDR，而是 Cilium Operator 通过 &lt;code&gt;v2.CiliumNode&lt;/code&gt; 资源管理每个节点的 PodCIDR。这种模式的优点是它不依赖于 Kubernetes 被配置为分发每个节点的 PodCIDR。&lt;/p&gt;
&lt;h3 id=&#34;架构&#34;&gt;架构&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/networking/ipam/cluster_pool.webp&#34; data-img=&#34;/book/cilium-handbook/networking/ipam/cluster_pool.webp&#34; data-width=&#34;714&#34; data-height=&#34;175&#34; alt=&#34;image&#34; data-caption=&#34;&#34;&gt;
    
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;如果无法将 Kubernetes 配置为分发 PodCIDR 或需要更多控制，这将非常有用。&lt;/p&gt;
&lt;p&gt;在这种模式下，Cilium 代理将在启动时等待，直到 &lt;code&gt;PodCIDRs&lt;/code&gt; 范围通过 Cilium 节点 &lt;code&gt;v2.CiliumNode&lt;/code&gt; 对象，通过 &lt;code&gt;v2.CiliumNode&lt;/code&gt; 中设置的资源字段为所有启用的地址族提供：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Spec.IPAM.PodCIDRs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IPv4 和/或 IPv6 PodCIDR 范围&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;集群范围配置&#34;&gt;集群范围配置&lt;/h3&gt;
&lt;p&gt;有关如何在 Cilium 中启用此模式的实用教程，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/stable/gettingstarted/ipam-cluster-pool/#gsg-ipam-crd-cluster-pool&#34; title=&#34;由 Cilium 集群池 IPAM 支持的 CRD&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;由 Cilium 集群池 IPAM 支持的 CRD&lt;/a&gt;
。&lt;/p&gt;
&lt;h3 id=&#34;故障排除&#34;&gt;故障排除&lt;/h3&gt;
&lt;h4 id=&#34;查找分配错误&#34;&gt;查找分配错误&lt;/h4&gt;
&lt;p&gt;检查 &lt;code&gt;Error&lt;/code&gt; 字段中的 &lt;code&gt;Status.Operator&lt;/code&gt; 字段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kubectl get ciliumnodes -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;range .items&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;*&lt;span class=&#34;o&#34;&gt;]}{&lt;/span&gt;.metadata.name&lt;span class=&#34;o&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\t&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}{&lt;/span&gt;.status.operator.error&lt;span class=&#34;o&#34;&gt;}{&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;}{&lt;/span&gt;end
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;kubernetes-host-scope&#34;&gt;Kubernetes 主机范围&lt;/h2&gt;
&lt;p&gt;Kubernetes 主机范围 IPAM 模式启用 &lt;code&gt;ipam: kubernetes&lt;/code&gt; 并将地址分配委托给集群中的每个单独节点。Kubernetes 分配的 IP 超出了与每个节点关联的 &lt;code&gt;PodCIDR&lt;/code&gt; 范围。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/networking/ipam/k8s_hostscope.webp&#34; data-img=&#34;/book/cilium-handbook/networking/ipam/k8s_hostscope.webp&#34; data-width=&#34;1488&#34; data-height=&#34;454&#34; alt=&#34;image&#34; data-caption=&#34;Kubernetes 主机范围模式 IPAM 架构图&#34;&gt;
    
  
  &lt;figcaption&gt;Kubernetes 主机范围模式 IPAM 架构图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;在这种模式下，Cilium 代理将在启动时等待，直到 &lt;code&gt;PodCIDR&lt;/code&gt; 范围通过 Kubernetes &lt;code&gt;v1.Node&lt;/code&gt; 对象通过以下方法之一为所有启用的地址家族提供：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过 v1.Node 资源字段&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spec.podCIDRs&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IPv4 和 / 或 IPv6 PodCIDR 范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;spec.podCIDR&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IPv4 或 IPv6 PodCIDR 范围&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  &lt;code&gt;kube-controller-manager&lt;/code&gt; 使用 &lt;code&gt;--allocate-node-cidrs&lt;/code&gt; 标志运行 &lt;code&gt;kube-controller-manager&lt;/code&gt; 以指示 Kubernetes  应该分配的 PodCIDR 范围。
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;通过 v1.Node 注释&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;注解&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.cilium.network.ipv4-pod-cidr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IPv4 PodCIDR 范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.cilium.network.ipv6-pod-cidr&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;IPv6 PodCIDR 范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.cilium.network.ipv4-cilium-host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;cilium 主机接口的 IPv4 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.cilium.network.ipv6-cilium-host&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;cilium 主机接口的 IPv6 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.cilium.network.ipv4-health-ip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;cilium-health 端点的 IPv4 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;io.cilium.network.ipv6-health-ip&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;cilium-health 端点的 IPv6 地址&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  基于注解的机制主要与旧的 Kubernetes 版本结合使用，这些版本尚不支持&lt;code&gt;spec.podCIDRs&lt;/code&gt;但同时支持 IPv4 和 IPv6。
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;主机范围配置&#34;&gt;主机范围配置&lt;/h3&gt;
&lt;p&gt;存在以下 ConfigMap 选项来配置 Kubernetes 主机范围：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ipam: kubernetes&lt;/code&gt;：启用 Kubernetes IPAM 模式。启用此选项将自动启用&lt;code&gt;k8s-require-ipv4-pod-cidr&lt;/code&gt; 如何  &lt;code&gt;enable-ipv4&lt;/code&gt; 是 &lt;code&gt;true&lt;/code&gt; 和 &lt;code&gt;k8s-require-ipv6-pod-cidr&lt;/code&gt; 如何  &lt;code&gt;enable-ipv6&lt;/code&gt; 是  &lt;code&gt;true&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k8s-require-ipv4-pod-cidr: true&lt;/code&gt;：指示 Cilium 代理等待，直到 IPv4 PodCIDR 通过 Kubernetes 节点资源可用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k8s-require-ipv6-pod-cidr: true&lt;/code&gt;：指示 Cilium 代理等待，直到 IPv6 PodCIDR 通过 Kubernetes 节点资源可用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用 helm 之前的选项可以定义为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ipam: kubernetes&lt;/code&gt;：&lt;code&gt;--set ipam.mode=kubernetes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k8s-require-ipv4-pod-cidr: true&lt;/code&gt;：&lt;code&gt;--set k8s.requireIPv4PodCIDR=true&lt;/code&gt;，仅适用于 &lt;code&gt;--set ipam.mode=kubernetes&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k8s-require-ipv6-pod-cidr: true&lt;/code&gt;：&lt;code&gt;--set k8s.requireIPv6PodCIDR=true&lt;/code&gt;，仅适用于 &lt;code&gt;--set ipam.mode=kubernetes&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crd-backed&#34;&gt;CRD 支持&lt;/h2&gt;
&lt;p&gt;CRD 支持的 IPAM 模式提供了一个可扩展的接口，以通过 Kubernetes 自定义资源定义 (CRD) 控制 IP 地址管理。这允许将 IPAM 委托给外部运营商或使其用户可配置每个节点。&lt;/p&gt;
&lt;h3 id=&#34;架构-1&#34;&gt;架构&lt;/h3&gt;
&lt;p&gt;启用此模式后，每个 Cilium 代理将开始监视 &lt;code&gt;ciliumnodes.cilium.io&lt;/code&gt;名称与运行代理的 Kubernetes 节点匹配的 Kubernetes 自定义资源。&lt;/p&gt;
&lt;p&gt;每当更新自定义资源时，每个节点的分配池都会更新为 &lt;code&gt;spec.ipam.available&lt;/code&gt; 字段中列出的所有地址。移除当前分配的 IP 后，该 IP 将继续使用，但在释放后无法重新分配。&lt;/p&gt;
&lt;p&gt;在分配池中分配 IP 后，将 IP 添加到  &lt;code&gt;status.ipam.inuse&lt;/code&gt; 字段中。&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  节点状态更新被限制为最多每 15 秒运行一次。因此，如果同时调度多个 Pod，状态部分的更新可能会滞后。
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;crd-支持配置&#34;&gt;CRD 支持配置&lt;/h3&gt;
&lt;p&gt;通过在 &lt;code&gt;cilium-config&lt;/code&gt; ConfigMap 中设置 &lt;code&gt;ipam: crd&lt;/code&gt; 或指定选项 &lt;code&gt;--ipam=crd&lt;/code&gt;，可以启用 CRD 支持的 IPAM 模式。启用后，代理将等待与 Kubernetes 节点名称相匹配的 &lt;code&gt;CiliumNode&lt;/code&gt; 自定义资源变得可用，并且至少有一个 IP 地址被列为可用。当连接性健康检查被启用时，必须有至少两个 IP 地址可用。&lt;/p&gt;
&lt;p&gt;在等待期间，代理将打印以下日志消息：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Waiting for initial IP to become available in &amp;#39;&amp;lt;node-name&amp;gt;&amp;#39; custom resource
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;有关如何使用 Cilium 启用 CRD IPAM 模式的实用教程，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/stable/gettingstarted/ipam-crd/#gsg-ipam-crd&#34; title=&#34;CRD 支持的 IPAM&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CRD 支持的 IPAM&lt;/a&gt;
部分。&lt;/p&gt;
&lt;h3 id=&#34;权限&#34;&gt;权限&lt;/h3&gt;
&lt;p&gt;为了使自定义资源发挥作用，需要以下额外权限。使用标准 Cilium 部署工件时会自动授予这些权限：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rbac.authorization.k8s.io/v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ClusterRole&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cilium&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;apiGroups&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;cilium.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;ciliumnodes&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;ciliumnodes/status&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;verbs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;s1&#34;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;crd-定义&#34;&gt;CRD 定义&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;CilumNode&lt;/code&gt; 自定义资源以标准 Kubernetes 资源为模型，分为一个 &lt;code&gt;spec&lt;/code&gt; 和 &lt;code&gt;status&lt;/code&gt; 部分：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CiliumNode&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Spec is the specification of the node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Spec&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NodeSpec&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;spec&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Status it the status of the node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Status&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NodeStatus&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;status&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ipam-规范&#34;&gt;IPAM 规范&lt;/h3&gt;
&lt;p&gt;该 &lt;code&gt;spec&lt;/code&gt; 部分嵌入了一个 IPAM 特定字段，该字段允许定义节点可用于分配的所有 IP 的列表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// AllocationMap is a map of allocated IPs indexed by IP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AllocationMap&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;AllocationIP&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// NodeSpec is the configuration specific to a node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NodeSpec&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// [...]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// IPAM is the address management specification. This section can be
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// populated by a user or it can be automatically populated by an IPAM
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// operator
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;IPAM&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IPAMSpec&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;ipam,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// IPAMSpec is the IPAM specification of the node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IPAMSpec&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Pool is the list of IPs available to the node for allocation. When
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// an IP is used, the IP will remain on this list but will be added to
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// Status.IPAM.InUse
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Pool&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AllocationMap&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;pool,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// AllocationIP is an IP available for allocation or already allocated
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AllocationIP&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Owner is the owner of the IP, this field is set if the IP has been
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// allocated. It will be set to the pod name or another identifier
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// representing the usage of the IP
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// The owner field is left blank for an entry in Spec.IPAM.Pool
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// and filled out as the IP is used and also added to
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// Status.IPAM.InUse.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Owner&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;owner,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Resource is set for both available and allocated IPs, it represents
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// what resource the IP is associated with, e.g. in combination with
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// AWS ENI, this will refer to the ID of the ENI
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Resource&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;resource,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ipam-状态&#34;&gt;IPAM 状态&lt;/h3&gt;
&lt;p&gt;该 &lt;code&gt;status &lt;/code&gt;部分包含一个 IPAM 特定字段。IPAM 状态报告该节点上所有使用的地址：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// NodeStatus is the status of a node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;NodeStatus&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// [...]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// IPAM is the IPAM status of the node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;IPAM&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IPAMStatus&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;ipam,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// IPAMStatus is the IPAM status of a node
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;IPAMStatus&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// InUse lists all IPs out of Spec.IPAM.Pool which have been
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// allocated and are in use.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;InUse&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AllocationMap&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;used,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;technical-deep-dive&#34;&gt;技术详解&lt;/h2&gt;
&lt;h3 id=&#34;cilium-容器网络控制流程&#34;&gt;Cilium 容器网络控制流程&lt;/h3&gt;
&lt;p&gt;下面的控制流程图概述了端点如何为 Cilium 支持的每种不同的地址管理模式从 IPAM 获取其 IP 地址。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/networking/ipam/cilium_container_networking_control_flow.webp&#34; data-img=&#34;/book/cilium-handbook/networking/ipam/cilium_container_networking_control_flow.webp&#34; data-width=&#34;960&#34; data-height=&#34;540&#34; alt=&#34;image&#34; data-caption=&#34;Cilium 容器网络控制流程图&#34;&gt;
    
  
  &lt;figcaption&gt;Cilium 容器网络控制流程图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>概念</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/concepts/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/concepts/</guid>
      <description>
        
        
        &lt;h2 id=&#34;部署&#34;&gt;部署&lt;/h2&gt;
&lt;p&gt;标准 Cilium Kubernetes 部署的配置包括几个 Kubernetes 资源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DaemonSet &lt;/code&gt; 资源：描述部署到每个 Kubernetes 节点的 Cilium pod。这个 pod 运行 &lt;code&gt;cilium-agent&lt;/code&gt; 和相关的守护进程。这个 DaemonSet 的配置包括指示 Cilium docker 容器的确切版本（例如 v1.0.0）的镜像标签和传递给 &lt;code&gt;cilium-agent&lt;/code&gt; 的命令行选项。&lt;/li&gt;
&lt;li&gt;资源：描述传递给 &lt;code&gt;cilium-agent&lt;/code&gt; 的&lt;code&gt;ConfigMap&lt;/code&gt; 常用配置值，例如 kvstore 端点和凭据、启用/禁用调试模式等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ServiceAccount&lt;/code&gt;、&lt;code&gt;ClusterRole&lt;/code&gt; 和 &lt;code&gt;ClusterRoleBindings 资源：当启用 Kubernetes RBAC 时，&lt;/code&gt;cilium-agent` 用于访问 Kubernetes API 服务器的身份和权限。&lt;/li&gt;
&lt;li&gt;资源：如果 &lt;code&gt;Secret&lt;/code&gt; 需要，描述用于访问 etcd kvstore 的凭据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;现有-pod-的联网&#34;&gt;现有 Pod 的联网&lt;/h2&gt;
&lt;p&gt;如果在部署 Cilium 之前 pod 已经在运行 &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-daemonset&#34; title=&#34;DaemonSet&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DaemonSet&lt;/a&gt;
，这些 pod 仍将根据 CNI 配置使用以前的网络插件连接。一个典型的例子是默认运行在 &lt;code&gt;kube-system&lt;/code&gt; 命名空间中的  &lt;code&gt;kube-dns&lt;/code&gt;  服务。&lt;/p&gt;
&lt;p&gt;改变这种现有 pod 的网络的一个简单方法是依靠 Kubernetes 在 Deployment 中的 pod 被删除时自动重新启动的事实，所以我们可以简单地删除原来的 &lt;code&gt;kube-dns&lt;/code&gt; pod，紧接着启动的替换 pod 将由 Cilium 管理网络。在生产部署中，这个步骤可以作为 &lt;code&gt;kube-dns&lt;/code&gt; pod 的滚动更新来执行，以避免 DNS 服务的停机。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl --namespace kube-system delete pods -l k8s-app&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;kube-dns
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pod &lt;span class=&#34;s2&#34;&gt;&amp;#34;kube-dns-268032401-t57r2&amp;#34;&lt;/span&gt; deleted
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行 &lt;code&gt;kubectl get pods&lt;/code&gt; 将显示 Kubernetes 启动了一组新的 &lt;code&gt;kube-dns&lt;/code&gt; pod，同时终止了旧的 pod：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl --namespace kube-system get pods
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                          READY     STATUS        RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cilium-5074s                  1/1       Running       &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          58m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kube-addon-manager-minikube   1/1       Running       &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          59m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kube-dns-268032401-j0vml      3/3       Running       &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          9s
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;kube-dns-268032401-t57r2      3/3       Terminating   &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;          57m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;默认允许本地主机的入口流量&#34;&gt;默认允许本地主机的入口流量&lt;/h2&gt;
&lt;p&gt;Kubernetes 具有&lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/&#34; title=&#34;通过存活探针和就绪探针&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;通过存活探针和就绪探针&lt;/a&gt;
向用户指示其应用程序当前运行状况的功能。为了让 &lt;code&gt;kubelet&lt;/code&gt; 对每个 pod 运行这些健康检查，默认情况下，Cilium 将始终允许从本地主机到每个 pod 的所有入口流量。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>基于身份</title>
      <link>https://jimmysong.io/book/cilium-handbook/security/identity/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/security/identity/</guid>
      <description>
        
        
        &lt;p&gt;Kubernetes 等容器管理系统部署了一个网络模型，该模型为每个 pod（容器组）分配一个单独的 IP 地址。这确保了架构的简单性，避免了不必要的网络地址转换（NAT），并为每个单独的容器提供了全范围的端口号以供使用。这种模型的逻辑结果是，根据集群的大小和 pod 的总数，网络层必须管理大量的 IP 地址。&lt;/p&gt;
&lt;p&gt;在传统上，安全策略基于 IP 地址过滤器。下面是一个简单的例子。如果所有具有标签 &lt;code&gt;role=frontend&lt;/code&gt; 的 pod 应该被允许发起与所有具有标签 &lt;code&gt;role=backend&lt;/code&gt; 的 pod 的连接，那么每个运行至少一个具有标签 &lt;code&gt;role=backend&lt;/code&gt; 的 pod 的集群节点必须安装一个相应的过滤器，允许所有 &lt;code&gt;role=frontend&lt;/code&gt; pod 的所有 IP 地址发起与所有本地 &lt;code&gt;role=backend&lt;/code&gt; pod 的 IP 地址的连接。所有其他的连接请求都应该被拒绝。这可能看起来像这样。如果目标地址是 &lt;code&gt;10.1.1.2&lt;/code&gt;，那么只有当源地址是下列之一时才允许连接 &lt;code&gt;[10.1.2.2,10.1.2.3,20.4.9.1]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;每次启动或停止带有 &lt;code&gt;role=frontend&lt;/code&gt; 或 &lt;code&gt;role=backend&lt;/code&gt; 标签的新 pod 时，必须更新运行任何此类 pod 的每个集群节点的规则，从允许的 IP 地址列表中添加或删除相应的 IP 地址。在大型分布式应用中，这可能意味着每秒多次更新数以千计的集群节点，这取决于部署的 pod 的流失率。更糟糕的是，新的 &lt;code&gt;role=frontend&lt;/code&gt; pod 的启动必须推迟到所有运行 &lt;code&gt;role=backend&lt;/code&gt; pod 的服务器都被更新了新的安全规则之后，否则来自新 pod 的连接尝试可能会被错误地放弃。这使得它难以有效地扩展。&lt;/p&gt;
&lt;p&gt;为了避免这些可能限制扩展性和灵活性的复杂情况，Cilium 将安全与网络寻址分开。相反，安全是基于 pod 的身份，它是通过标签得出的。这个身份可以在 pod 之间共享。这意味着，当第一个 &lt;code&gt;role=frontend&lt;/code&gt; pod 启动时，Cilium 会给该 pod 分配一个身份，然后允许它与 &lt;code&gt;role=backend&lt;/code&gt; pod 的身份发起连接。随后启动额外的 &lt;code&gt;role=frontend&lt;/code&gt; pod 只需要通过键值存储来解决这个身份，不需要在任何承载 &lt;code&gt;role=backend&lt;/code&gt; pod 的集群节点上执行任何操作。一个新的 pod 的启动必须只延迟到 pod 的身份被解决，这比更新所有其他集群节点上的安全规则要简单得多。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/security/identity/identity.png&#34; data-img=&#34;/book/cilium-handbook/security/identity/identity.png&#34; data-width=&#34;1346&#34; data-height=&#34;632&#34; alt=&#34;image&#34; data-caption=&#34;基于身份的安全示意图&#34;&gt;
    
  
  &lt;figcaption&gt;基于身份的安全示意图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>七层可视性</title>
      <link>https://jimmysong.io/book/cilium-handbook/policy/visibility/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/policy/visibility/</guid>
      <description>
        
        
        &lt;p&gt;虽然&lt;a href=&#34;https://docs.cilium.io/en/stable/operations/troubleshooting/#monitor&#34; title=&#34;监控&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;监控&lt;/a&gt;
数据路径状态提供对数据路径状态的自省，但默认情况下它只会提供对三层/四层数据包事件的可视性。如果配置了 &lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#l7-policy&#34; title=&#34;七层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;七层示例&lt;/a&gt;
，则可以查看七层协议，但这需要编写每个选定端点的完整策略。为了在不配置完整策略的情况下获得对应用程序的更多可视性，Cilium 提供了一种在与 Kubernetes 一起运行时通过&lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/&#34; title=&#34;注解&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;注解&lt;/a&gt;
来规定可视性的方法。&lt;/p&gt;
&lt;p&gt;可视性信息由注解中以逗号分隔的元组列表表示：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;{Traffic Direction}/{L4 Port}/{L4 Protocol}/{L7 Protocol}&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Egress/53/UDP/DNS&amp;gt;,&amp;lt;Egress/80/TCP/HTTP&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;为此，你可以在 Kubernetes YAML 中或通过命令行提供注释，例如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;kubectl annotate pod foo -n bar io.cilium.proxy-visibility=&amp;#34;&amp;lt;Egress/53/UDP/DNS&amp;gt;,&amp;lt;Egress/80/TCP/HTTP&amp;gt;&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cilium 将拾取 pod 已收到这些注释，并将透明地将流量重定向到代理，以便显示 &lt;code&gt;cilium monitor&lt;/code&gt; 流量的输出被重定向到代理，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-&amp;gt; Request http from 1474 ([k8s:id=app2 k8s:io.kubernetes.pod.namespace=default k8s:appSecond=true k8s:io.cilium.k8s.policy.cluster=default k8s:io.cilium.k8s.policy.serviceaccount=app2-account k8s:zgroup=testapp]) to 244 ([k8s:io.cilium.k8s.policy.cluster=default k8s:io.cilium.k8s.policy.serviceaccount=app1-account k8s:io.kubernetes.pod.namespace=default k8s:zgroup=testapp k8s:id=app1]), identity 30162-&amp;gt;42462, verdict Forwarded GET http://app1-service/ =&amp;gt; 0
-&amp;gt; Response http to 1474 ([k8s:zgroup=testapp k8s:id=app2 k8s:io.kubernetes.pod.namespace=default k8s:appSecond=true k8s:io.cilium.k8s.policy.cluster=default k8s:io.cilium.k8s.policy.serviceaccount=app2-account]) from 244 ([k8s:io.cilium.k8s.policy.serviceaccount=app1-account k8s:io.kubernetes.pod.namespace=default k8s:zgroup=testapp k8s:id=app1 k8s:io.cilium.k8s.policy.cluster=default]), identity 30162-&amp;gt;42462, verdict Forwarded GET http://app1-service/ =&amp;gt; 200
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;您可以通过检查该 pod 的 Cilium 端点来检查可视性策略的状态，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get cep -n kube-system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                       ENDPOINT ID   IDENTITY ID   INGRESS ENFORCEMENT   EGRESS ENFORCEMENT   VISIBILITY POLICY   ENDPOINT STATE   IPV4           IPV6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;coredns-7d7f5b7685-wvzwb   &lt;span class=&#34;m&#34;&gt;1959&lt;/span&gt;          &lt;span class=&#34;m&#34;&gt;104&lt;/span&gt;           &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;                 &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;                                    ready            10.16.75.193   f00d::a10:0:0:2c77
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl annotate pod -n kube-system coredns-7d7f5b7685-wvzwb io.cilium.proxy-visibility&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;Egress/53/UDP/DNS&amp;gt;,&amp;lt;Egress/80/TCP/HTTP&amp;gt;&amp;#34;&lt;/span&gt; --overwrite
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pod/coredns-7d7f5b7685-wvzwb annotated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get cep -n kube-system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                       ENDPOINT ID   IDENTITY ID   INGRESS ENFORCEMENT   EGRESS ENFORCEMENT   VISIBILITY POLICY   ENDPOINT STATE   IPV4           IPV6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;coredns-7d7f5b7685-wvzwb   &lt;span class=&#34;m&#34;&gt;1959&lt;/span&gt;          &lt;span class=&#34;m&#34;&gt;104&lt;/span&gt;           &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;                 &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;                OK                  ready            10.16.75.193   f00d::a10:0:0:2c7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;故障排查&#34;&gt;故障排查&lt;/h2&gt;
&lt;p&gt;如果七层可视性未出现在 &lt;code&gt;cilium monitor&lt;/code&gt; 或 Hubble 组件中，则值得仔细检查：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;没有在注解中指定的方向应用强制策略&lt;/li&gt;
&lt;li&gt;CiliumEndpoint 中的“可视性策略”列显示 &lt;code&gt;OK&lt;/code&gt;。如果为空，则未配置注解；如果显示错误，则可视性注解存在问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下示例故意错误配置注解，以证明当可视性注解无法实现时，pod 的 CiliumEndpoint 会出现错误：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl annotate pod -n kube-system coredns-7d7f5b7685-wvzwb io.cilium.proxy-visibility&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;lt;Ingress/53/UDP/DNS&amp;gt;,&amp;lt;Egress/80/TCP/HTTP&amp;gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;pod/coredns-7d7f5b7685-wvzwb annotated
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get cep -n kube-system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                       ENDPOINT ID   IDENTITY ID   INGRESS ENFORCEMENT   EGRESS ENFORCEMENT   VISIBILITY POLICY                        ENDPOINT STATE   IPV4           IPV6
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;coredns-7d7f5b7685-wvzwb   &lt;span class=&#34;m&#34;&gt;1959&lt;/span&gt;          &lt;span class=&#34;m&#34;&gt;104&lt;/span&gt;           &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;                 &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;                dns not allowed with direction Ingress   ready            10.16.75.193   f00d::a10:0:0:2c77
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;限制&#34;&gt;限制&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;如果导入的规则选择了被注解的 pod，则可视性注解将不适用。&lt;/li&gt;
&lt;li&gt;DNS 可视性仅在 egress 上可用。&lt;/li&gt;
&lt;li&gt;不支持 Proxylib 解析器，包括 Kafka。要获得对这些协议的可视性，你必须创建一个允许所有七层流量的网络策略，方法是遵循 &lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#l7-policy&#34; title=&#34;七层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;七层示例&lt;/a&gt;
（&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#kafka-policy&#34; title=&#34;Kafka&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kafka&lt;/a&gt;
）或 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/security/proxy/envoy/#envoy&#34; title=&#34;Envoy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Envoy&lt;/a&gt;
 proxylib 扩展指南。此限制见 &lt;a href=&#34;https://github.com/cilium/cilium/issues/14072&#34; title=&#34;GitHub Issue 14072&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Issue 14072&lt;/a&gt;
。&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>数据包流程</title>
      <link>https://jimmysong.io/book/cilium-handbook/ebpf/lifeofapacket/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/ebpf/lifeofapacket/</guid>
      <description>
        
        
        &lt;h2 id=&#34;端点到端点&#34;&gt;端点到端点&lt;/h2&gt;
&lt;p&gt;首先，我们使用可选的七层出口和入口策略显示本地端点到端点的流程。随后是启用了套接字层强制的同一端点到端点流。为 TCP 流量启用套接字层实施后，启动连接的握手将遍历端点策略对象，直到 TCP 状态为 ESTABLISHED。然后在建立连接后，只需要七层策略对象。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/lifeofapacket/cilium_bpf_endpoint.svg&#34; data-img=&#34;/book/cilium-handbook/ebpf/lifeofapacket/cilium_bpf_endpoint.svg&#34; alt=&#34;image&#34; data-caption=&#34;&#34;&gt;
    
  
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;端点到出口&#34;&gt;端点到出口&lt;/h2&gt;
&lt;p&gt;接下来，我们使用可选的 overlay 网络显示本地端点到出口。在可选的覆盖网络中，网络流量被转发到与 overlay 网络对应的 Linux 网络接口。在默认情况下，overlay 接口名为 &lt;code&gt;cilium_vxlan&lt;/code&gt;。与上面类似，当启用套接字层强制并使用七层代理时，我们可以避免在端点和 TCP 流量的七层策略之间运行端点策略块。如果启用，可选的 L3 加密块将加密数据包。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/lifeofapacket/cilium_bpf_egress.svg&#34; data-img=&#34;/book/cilium-handbook/ebpf/lifeofapacket/cilium_bpf_egress.svg&#34; alt=&#34;image&#34; data-caption=&#34;端点到出口的流程&#34;&gt;
    
  
  &lt;figcaption&gt;端点到出口的流程&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;h2 id=&#34;入口到端点&#34;&gt;入口到端点&lt;/h2&gt;
&lt;p&gt;最后，我们还使用可选的 overlay 网络显示到本地端点的入口。与上述套接字层强制类似，可用于避免代理和端点套接字之间的一组策略遍历。如果数据包在接收时被加密，则首先将其解密，然后通过正常流程进行处理。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/lifeofapacket/cilium_bpf_ingress.svg&#34; data-img=&#34;/book/cilium-handbook/ebpf/lifeofapacket/cilium_bpf_ingress.svg&#34; alt=&#34;image&#34; data-caption=&#34;入口到端点流程&#34;&gt;
    
  
  &lt;figcaption&gt;入口到端点流程&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;这样就完成了数据路径概述。更多 BPF 细节可以在 &lt;a href=&#34;../../../bpf/&#34; title=&#34;BPF 和 XDP 参考指南&#34;&gt;BPF 和 XDP 参考指南&lt;/a&gt;
中找到。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>eBPF Map</title>
      <link>https://jimmysong.io/book/cilium-handbook/ebpf/maps/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/ebpf/maps/</guid>
      <description>
        
        
        &lt;p&gt;所有 BPF Map 都是有使用容量上限的。超出限制的插入将失败，从而限制了数据路径的可扩展性。下表显示了映射的默认值。每个限制都可以在源代码中更改。如果需要，将根据要求添加配置选项。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Map 名称&lt;/th&gt;
&lt;th&gt;范围&lt;/th&gt;
&lt;th&gt;默认限制&lt;/th&gt;
&lt;th&gt;规模影响&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;连接跟踪&lt;/td&gt;
&lt;td&gt;节点或端点&lt;/td&gt;
&lt;td&gt;1M TCP/256k UDP&lt;/td&gt;
&lt;td&gt;最大 1M 并发 TCP 连接，最大 256k 预期 UDP 应答&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NAT&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;512k&lt;/td&gt;
&lt;td&gt;最大 512k NAT 条目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;邻居表&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;512k&lt;/td&gt;
&lt;td&gt;最大 512k 邻居条目&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;端点&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;64k&lt;/td&gt;
&lt;td&gt;每个节点最多 64k 个本地端点 + 主机 IP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP 缓存&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;512k&lt;/td&gt;
&lt;td&gt;最大 256k 端点（IPv4+IPv6），最大 512k 端点（IPv4 或 IPv6）跨所有集群&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;负载均衡器&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;64k&lt;/td&gt;
&lt;td&gt;跨所有集群的所有服务的最大 64k 累积后端&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;策略&lt;/td&gt;
&lt;td&gt;端点&lt;/td&gt;
&lt;td&gt;16k&lt;/td&gt;
&lt;td&gt;特定端点的最大允许身份 + 端口 + 协议对 16k&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;代理 Map&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;512k&lt;/td&gt;
&lt;td&gt;最大 512k 并发重定向 TCP 连接到代理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;隧道&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;64k&lt;/td&gt;
&lt;td&gt;跨所有集群最多 32k 节点（IPv4+IPv6）或 64k 节点（IPv4 或 IPv6）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IPv4 分片&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;8k&lt;/td&gt;
&lt;td&gt;节点上同时传输的最大 8k 个分段数据报&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;会话亲和性&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;64k&lt;/td&gt;
&lt;td&gt;来自不同客户端的最大 64k 关联&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;IP 掩码&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;16k&lt;/td&gt;
&lt;td&gt;基于 BPF 的 ip-masq-agent 使用的最大 16k IPv4 cidrs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;服务源范围&lt;/td&gt;
&lt;td&gt;节点&lt;/td&gt;
&lt;td&gt;64k&lt;/td&gt;
&lt;td&gt;跨所有服务的最大 64k 累积 LB 源范围&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Egess 策略&lt;/td&gt;
&lt;td&gt;端点&lt;/td&gt;
&lt;td&gt;16k&lt;/td&gt;
&lt;td&gt;跨所有集群的所有目标 CIDR 的最大 16k 端点&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;对于某些 BPF 映射，可以使用命令行选项 &lt;code&gt;cilium-agent&lt;/code&gt; 覆盖容量上限。可以使用 &lt;code&gt;--bpf-lb-map-max&lt;/code&gt;、 &lt;code&gt;--bpf-ct-global-tcp-max&lt;/code&gt;、&lt;code&gt;--bpf-ct-global-any-max&lt;/code&gt;、 &lt;code&gt;--bpf-nat-global-max&lt;/code&gt;、&lt;code&gt;--bpf-neigh-global-max&lt;/code&gt;、&lt;code&gt;--bpf-policy-map-max&lt;/code&gt;和 &lt;code&gt;--bpf-fragments-map-max&lt;/code&gt; 来设置给定容量。&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  如果指定了&lt;code&gt;--bpf-ct-global-tcp-max&lt;/code&gt;和 / 或&lt;code&gt;--bpf-ct-global-any-max&lt;/code&gt; ，则 NAT 表大小 ( &lt;code&gt;--bpf-nat-global-max&lt;/code&gt;) 不得超过组合 CT 表大小（TCP + UDP）的 2/3。&lt;code&gt;--bpf-nat-global-max&lt;/code&gt; 如果未显式设置或使用动态 BPF Map 大小（见下文），这将自动设置。
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;使用 &lt;code&gt;--bpf-map-dynamic-size-ratio&lt;/code&gt; 标志，几个大型 BPF Map 的容量上限在代理启动时根据给定的总系统内存比率确定。例如，给定的 0.0025 比率导致 0.25% 的总系统内存用于这些映射。&lt;/p&gt;
&lt;p&gt;此标志会影响以下消耗系统中大部分内存的 BPF Map： &lt;code&gt;cilium_ct_{4,6}_global&lt;/code&gt;、&lt;code&gt;cilium_ct_{4,6}_any&lt;/code&gt;、 &lt;code&gt;cilium_nodeport_neigh{4,6}&lt;/code&gt;、&lt;code&gt;cilium_snat_v{4,6}_external&lt;/code&gt; 和 &lt;code&gt;cilium_lb{4,6}_reverse_sk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;kube-proxy&lt;/code&gt;根据机器拥有的内核数设置为 linux 连接跟踪表中的最大条目数。无论机器有多少内核，&lt;code&gt;kube-proxy&lt;/code&gt; 默认每个内核的最大条目数是 32768 和最小条目数是 131072。&lt;/p&gt;
&lt;p&gt;Cilium 有自己的连接跟踪表作为 BPF Map，并且此类映射的条目数是根据节点中的总内存量计算的，无论机器有多少内存，条目最少数是 131072。&lt;/p&gt;
&lt;p&gt;下表介绍了当 Cilium 配置为 &lt;code&gt;-bpf-map-dynamic-size-ratio: 0.0025&lt;/code&gt; 时，&lt;code&gt;kube-proxy&lt;/code&gt; 和 Cilium 为自己的连接跟踪表设置的数值：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;虚拟 CPU&lt;/th&gt;
&lt;th&gt;内存 (GiB)&lt;/th&gt;
&lt;th&gt;Kube-proxy CT 条目&lt;/th&gt;
&lt;th&gt;Cilium CT 条目&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;3.75&lt;/td&gt;
&lt;td&gt;131072&lt;/td&gt;
&lt;td&gt;131072&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;7.5&lt;/td&gt;
&lt;td&gt;131072&lt;/td&gt;
&lt;td&gt;131072&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;td&gt;131072&lt;/td&gt;
&lt;td&gt;131072&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;td&gt;262144&lt;/td&gt;
&lt;td&gt;284560&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16&lt;/td&gt;
&lt;td&gt;60&lt;/td&gt;
&lt;td&gt;524288&lt;/td&gt;
&lt;td&gt;569120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;120&lt;/td&gt;
&lt;td&gt;1048576&lt;/td&gt;
&lt;td&gt;1138240&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;240&lt;/td&gt;
&lt;td&gt;2097152&lt;/td&gt;
&lt;td&gt;2276480&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;96&lt;/td&gt;
&lt;td&gt;360&lt;/td&gt;
&lt;td&gt;3145728&lt;/td&gt;
&lt;td&gt;4552960&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>IP 地址伪装</title>
      <link>https://jimmysong.io/book/cilium-handbook/networking/masquerading/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/networking/masquerading/</guid>
      <description>
        
        
        &lt;p&gt;用于 Pod 的 IPv4 地址通常是从 RFC1918 私有地址块分配的，因此不可公开路由。Cilium 会自动将离开集群的所有流量的源 IP 地址伪装成节点的 IPv4 地址，因为节点的 IP 地址已经可以在网络上路由。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/networking/masquerading/masquerade.png&#34; data-img=&#34;/book/cilium-handbook/networking/masquerading/masquerade.png&#34; data-width=&#34;768&#34; data-height=&#34;472&#34; alt=&#34;image&#34; data-caption=&#34;IP 地址伪装示意图&#34;&gt;
    
  
  &lt;figcaption&gt;IP 地址伪装示意图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;对于 IPv6 地址，只有在使用 iptables 实现模式时才会执行伪装。&lt;/p&gt;
&lt;p&gt;可以使用 IPv4 选项和离开主机的 IPv6 流量禁用此行为。&lt;code&gt;enable-ipv4-masquerade: false``enable-ipv6-masquerade: false&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;配置&#34;&gt;配置&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;设置可路由 CIDR&lt;/p&gt;
&lt;p&gt;默认行为是排除本地节点的 IP 分配 CIDR 内的任何目标。如果 pod IP 可在更广泛的网络中路由，则可以使用以下选项指定该网络：&lt;code&gt;ipv4-native-routing-cidr: 10.0.0.0/8 &lt;/code&gt;，在这种情况下，该 CIDR 内的所有目的地都 &lt;strong&gt;不会&lt;/strong&gt; 被伪装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;设置伪装接口&lt;/p&gt;
&lt;p&gt;请参阅&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/networking/masquerading/#masq-modes&#34; title=&#34;实现模式&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;实现模式&lt;/a&gt;
以配置伪装接口。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;masq-modes&#34;&gt;实现模式&lt;/h2&gt;
&lt;h3 id=&#34;基于-ebpf&#34;&gt;基于 eBPF&lt;/h3&gt;
&lt;p&gt;基于 eBPF 的实现是最有效的实现。它需要 Linux 内核 4.19，并且可以使用 &lt;code&gt;bpf.masquerade=true&lt;/code&gt; helm 选项启用。&lt;/p&gt;
&lt;p&gt;当前的实现依赖于 &lt;a href=&#34;https://docs.cilium.io/en/stable/gettingstarted/kubeproxy-free/#kubeproxy-free&#34; title=&#34;BPF NodePort 特性&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BPF NodePort 特性&lt;/a&gt;
。将来会删除该依赖项（&lt;a href=&#34;https://github.com/cilium/cilium/issues/13732&#34; title=&#34;GitHub Issue 13732&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Issue 13732&lt;/a&gt;
）。&lt;/p&gt;
&lt;p&gt;伪装只能在那些运行 eBPF 伪装程序的设备上进行。这意味着如果输出设备运行程序，从 pod 发送到外部的数据包将被伪装（到输出设备 IPv4 地址）。如果未指定，程序将自动附加到 &lt;a href=&#34;https://docs.cilium.io/en/stable/gettingstarted/kubeproxy-free/#nodeport-devices&#34; title=&#34;BPF NodePort 设备检测机制&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;BPF NodePort 设备检测机制&lt;/a&gt;
选择的设备上。要手动更改此设置，请使用 &lt;code&gt;devices&lt;/code&gt; helm 选项。使用 &lt;code&gt;cilium status&lt;/code&gt; 确定程序在哪些设备上运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -it -n kube-system cilium-xxxxx -- cilium status &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; grep Masquerading
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Masquerading:   BPF &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;ip-masq-agent&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;eth0, eth1&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;  10.0.0.0/16
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;从上面的输出可以看出，程序正在 &lt;code&gt;eth0&lt;/code&gt; 和 &lt;code&gt;eth1&lt;/code&gt; 设备上运行。&lt;/p&gt;
&lt;p&gt;基于 eBPF 的伪装可以伪装以下 IPv4 四层协议的数据包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TCP&lt;/li&gt;
&lt;li&gt;UDP&lt;/li&gt;
&lt;li&gt;ICMP（仅 Echo 请求和 Echo 回复）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认情况下，来自 pod 的所有发往  &lt;code&gt;ipv4-native-routing-cidr&lt;/code&gt; 范围外 IP 地址的数据包都会被伪装，但发往其他集群节点的数据包除外。排除 CIDR 显示在（&lt;code&gt;cilium status&lt;/code&gt; ) 的上述输出中（&lt;code&gt;10.0.0.0/16&lt;/code&gt;）。&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  启用 eBPF 伪装后，从 Pod 到集群节点外部 IP 的流量也不会被伪装。eBPF 实现在这方面不同于基于 iptables 的伪装。此限制在 &lt;a href=&#34;https://github.com/cilium/cilium/issues/17177&#34; title=&#34;GitHub Issue 17177&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Issue 17177&lt;/a&gt;
 中进行了跟踪。
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;为了实现更细粒度的控制，Cilium 在 eBPF 中实现了&lt;a href=&#34;https://github.com/kubernetes-sigs/ip-masq-agent&#34; title=&#34;ip-masq-agent&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ip-masq-agent&lt;/a&gt;
，可以通过&lt;code&gt;ipMasqAgent.enabled=true&lt;/code&gt; helm 选项启用。&lt;/p&gt;
&lt;p&gt;基于 eBPF 的 &lt;code&gt;ip-masq-agent&lt;/code&gt; 支持配置文件中设置的 &lt;code&gt;nonMasqueradeCIDRs&lt;/code&gt; 和  &lt;code&gt;masqLinkLocal&lt;/code&gt; 选项。从 pod 发送到属于任何 CIDR 的目的地的数据包 &lt;code&gt;nonMasqueradeCIDRs&lt;/code&gt; 不会被伪装。如果配置文件为空，代理将配置以下非伪装 CIDR：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;10.0.0.0/8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;172.16.0.0/12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.168.0.0/16&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;100.64.0.0/10&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.0.0.0/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.0.2.0/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;192.88.99.0/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;198.18.0.0/15&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;198.51.100.0/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;203.0.113.0/24&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;240.0.0.0/4&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，如果 &lt;code&gt;masqLinkLocal&lt;/code&gt; 未设置或设置为 false，则 &lt;code&gt;169.254.0.0/16&lt;/code&gt; 附加到非伪装 CIDR 列表中。&lt;/p&gt;
&lt;p&gt;代理使用 Fsnotify 跟踪配置文件的更新，因此 &lt;code&gt;resyncInterval&lt;/code&gt; 不需要原始选项。&lt;/p&gt;
&lt;p&gt;下面的示例显示了如何通过配置代理 &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-configmap&#34; title=&#34;&amp;lt;code&amp;gt;ConfigMap&amp;lt;/code&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;ConfigMap&lt;/code&gt;&lt;/a&gt;
 并对其进行验证：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cat agent-config/config
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;nonMasqueradeCIDRs:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 172.16.0.0/12
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- 192.168.0.0/16
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;masqLinkLocal: &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl create configmap ip-masq-agent --from-file&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;agent-config --namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;kube-system
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;c1&#34;&gt;# Wait ~60s until the ConfigMap is mounted into a cilium pod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl -n kube-system &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -ti cilium-xxxxx -- cilium bpf ipmasq list
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;IP PREFIX/ADDRESS
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;10.0.0.0/8
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;169.254.0.0/16
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;172.16.0.0/12
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;192.168.0.0/16
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  注意
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  IPv6 流量当前不支持基于 eBPF 的伪装。
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;基于-iptables&#34;&gt;基于 iptables&lt;/h3&gt;
&lt;p&gt;这是适用于所有内核版本的遗留实现。&lt;/p&gt;
&lt;p&gt;默认行为将伪装所有离开非 Cilium 网络设备的流量。这通常会导致正确的行为。为了限制应在其上执行伪装的网络接口，可以使用&lt;code&gt;egress-masquerade-interfaces: eth0&lt;/code&gt; 选项。&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  也可以指定接口前缀 &lt;code&gt;eth+&lt;/code&gt;，匹配前缀的所有接口 &lt;code&gt;eth&lt;/code&gt; 都将用于伪装。
&lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>策略执行</title>
      <link>https://jimmysong.io/book/cilium-handbook/security/policyenforcement/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/security/policyenforcement/</guid>
      <description>
        
        
        &lt;p&gt;所有安全策略的描述都是假设基于会话协议的有状态策略执行。这意味着策略的意图是描述允许的连接建立方向。如果策略允许&lt;code&gt;A =&amp;gt; B&lt;/code&gt;，那么从 B 到 A 的回复数据包也会被自动允许。但是，并不自动允许 B 向 A 发起连接。如果希望得到这种结果，那么必须明确允许这两个方向。&lt;/p&gt;
&lt;p&gt;安全策略可以在 ingress 或 egress 处执行。对于 ingress，这意味着每个集群节点验证所有进入的数据包，并确定数据包是否被允许传输到预定的终端。相应地，对于 egress，每个集群节点验证出站数据包，并确定是否允许将数据包传输到预定目的地。&lt;/p&gt;
&lt;p&gt;为了在多主机集群中执行基于身份的安全，发送端点的身份被嵌入到集群节点之间传输的每个网络数据包中。然后，接收集群节点可以提取该身份，并验证一个特定的身份是否被允许与任何本地端点进行通信。&lt;/p&gt;
&lt;h2 id=&#34;默认安全策略&#34;&gt;默认安全策略&lt;/h2&gt;
&lt;p&gt;如果没有加载任何策略，默认行为是允许所有通信，除非明确启用了策略执行。一旦加载了第一条策略规则，就会自动启用策略执行，然后任何通信必须是白名单，否则相关数据包将被丢弃。&lt;/p&gt;
&lt;p&gt;同样，如果一个端点不受制于四层策略，则允许与所有端口进行通信。将至少一个 四层策略与一个端点相关联，将阻止与端口的所有连接，除非明确允许。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>端点生命周期</title>
      <link>https://jimmysong.io/book/cilium-handbook/policy/lifecycle/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/policy/lifecycle/</guid>
      <description>
        
        
        &lt;p&gt;本节指定 Cilium 端点的生命周期。&lt;/p&gt;
&lt;p&gt;Cilium 中的端点状态包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;restoring&lt;/code&gt;：端点在 Cilium 启动之前启动，Cilium 正在恢复其网络配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;waiting-for-identity&lt;/code&gt;：Cilium 正在为端点分配一个唯一的身份。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;waiting-to-regenerate&lt;/code&gt;：端点接收到一个身份并等待（重新）生成其网络配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;regenerating&lt;/code&gt;：正在（重新）生成端点的网络配置。这包括为该端点编程 eBPF。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ready&lt;/code&gt;：端点的网络配置已成功（重新）生成。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disconnecting&lt;/code&gt;：正在删除端点。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;disconnected&lt;/code&gt;：端点已被删除。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/policy/lifecycle/cilium-endpoint-lifecycle.png&#34; data-img=&#34;/book/cilium-handbook/policy/lifecycle/cilium-endpoint-lifecycle.png&#34; data-width=&#34;1455&#34; data-height=&#34;955&#34; alt=&#34;image&#34; data-caption=&#34;端点状态生命周期&#34;&gt;
    
  
  &lt;figcaption&gt;端点状态生命周期&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;cilium endpoint list&lt;/code&gt; 和 &lt;code&gt;cilium endpoint get&lt;/code&gt; CLI 命令查询端点的状态。&lt;/p&gt;
&lt;p&gt;当端点运行时，它会在 &lt;code&gt;waiting-for-identity&lt;/code&gt;、&lt;code&gt;waiting-to-regenerate&lt;/code&gt;、&lt;code&gt;regenerating&lt;/code&gt; 和 &lt;code&gt;ready&lt;/code&gt; 状态之间转换。进入 &lt;code&gt;waiting-for-identity&lt;/code&gt; 状态的转换表明端点改变了它的身份。转换到 &lt;code&gt;waiting-to-regenerate&lt;/code&gt; 或者 &lt;code&gt;regenerating&lt;/code&gt; 状态表示要在端点上实施的策略由于身份、策略或配置的更改而发生了更改。&lt;/p&gt;
&lt;p&gt;端点在被删除时转换为 &lt;code&gt;disconnecting&lt;/code&gt;  状态，无论其当前状态如何。&lt;/p&gt;
&lt;h2 id=&#34;初始化标识&#34;&gt;初始化标识&lt;/h2&gt;
&lt;p&gt;在某些情况下，Cilium 无法在端点创建时立即确定端点的标签，因此无法在此时为端点分配身份。在知道端点的标签之前，Cilium 会暂时将一个特殊的单一标签 &lt;code&gt;reserved:init&lt;/code&gt; 与端点相关联。当端点的标签变得已知时，Cilium 然后用端点的标签替换那个特殊的标签，并为端点分配一个适当的身份。&lt;/p&gt;
&lt;p&gt;这可能在以下情况下在端点创建期间发生：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过 libnetwork 使用 docker 运行 Cilium&lt;/li&gt;
&lt;li&gt;当 Kubernetes API 服务器不可用时使用 Kubernetes&lt;/li&gt;
&lt;li&gt;在对应的 kvstore 不可用时处于 etcd 模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要在初始化时允许进出端点的流量，您可以创建选择 &lt;code&gt;reserved:init&lt;/code&gt; 标签的策略规则和/或允许进出特殊 &lt;code&gt;init&lt;/code&gt; 实体的流量的规则。&lt;/p&gt;
&lt;p&gt;例如，编写一个规则，允许所有初始化端点从主机接收连接并执行 DNS 查询，可以如下完成：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;specs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#34;reserved:init&amp;#34;: &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEntities&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;host&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEntities&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;all&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;53&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;UDP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同样，编写允许端点接收来自初始化端点的 DNS 查询的规则可以如下完成：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;from-init&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;myService&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEntities&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;53&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;UDP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果任何入口（&lt;code&gt;resp.egress&lt;/code&gt;）策略规则选择了 &lt;code&gt;reserved:init&lt;/code&gt; 标签，那么所有到（&lt;code&gt;resp.from&lt;/code&gt;）初始化端点（这些规则未明确允许）的入口（&lt;code&gt;resp.egress&lt;/code&gt;）流量都将被丢弃。否则，如果策略执行模式是 &lt;code&gt;never&lt;/code&gt; 或 &lt;code&gt;default&lt;/code&gt;，则允许所有入口（或出口）流量（或来自）初始化端点。否则，所有入口（或出口）流量都会被丢弃。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>多集群（集群网格）</title>
      <link>https://jimmysong.io/book/cilium-handbook/clustermesh/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/clustermesh/</guid>
      <description>
        
        
        &lt;p&gt;集群网格将网络数据路径扩展到多个集群。它允许所有连接集群中的端点进行通信，同时提供完整的策略执行。负载均衡可通过 Kubernetes 注解获得。&lt;/p&gt;
&lt;p&gt;请参阅如何&lt;a href=&#34;https://docs.cilium.io/en/stable/gettingstarted/clustermesh/clustermesh/#gs-clustermesh&#34; title=&#34;设置集群网格&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;设置集群网格&lt;/a&gt;
的说明。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>可观测性</title>
      <link>https://jimmysong.io/book/cilium-handbook/concepts/observability/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/concepts/observability/</guid>
      <description>
        
        
        &lt;p&gt;可观测性由 Hubble 提供，它可以以完全透明的方式深入了解服务的通信和行为以及网络基础设施。&lt;a href=&#34;../clustermesh/&#34; title=&#34;Hubble 能够在多集群（集群网格）&#34;&gt;Hubble 能够在多集群（集群网格）&lt;/a&gt;
 场景中提供节点级别、集群级别甚至跨集群的可视性。有关 Hubble 的介绍以及它与 Cilium 的关系，请阅读 &lt;a href=&#34;../../intro/&#34; title=&#34;Cilium 和 Hubble 简介&#34;&gt;Cilium 和 Hubble 简介&lt;/a&gt;
部分。&lt;/p&gt;
&lt;p&gt;默认情况下，Hubble API 的范围仅限于 Cilium 代理运行的每个单独节点。换句话说，网络可视性仅提供给本地 Cilium 代理观察到的流量。在这种情况下，与 Hubble API 交互的唯一方法是使用 Hubble CLI（&lt;code&gt;hubble&lt;/code&gt;）查询通过本地 Unix Domain Socket 提供的 Hubble API。Hubble CLI 二进制文件默认安装在 Cilium 代理 pod 上。&lt;/p&gt;
&lt;p&gt;部署 Hubble Relay 后，Hubble 提供完整的网络可视性。在这种情况下，Hubble Relay 服务提供了一个 Hubble API，它在 ClusterMesh 场景中涵盖整个集群甚至多个集群。可以通过将 Hubble CLI（&lt;code&gt;hubble&lt;/code&gt;）指向 Hubble Relay 服务或通过 Hubble UI 访问 Hubble 数据。Hubble UI 是一个 Web 界面，可以自动发现三层/四层甚至七层的服务依赖图，允许用户友好的可视化和过滤数据流作为服务图。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;../../networking&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;下一章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>要求</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/requirements/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/requirements/</guid>
      <description>
        
        
        &lt;h2 id=&#34;kubernetes-版本&#34;&gt;Kubernetes 版本&lt;/h2&gt;
&lt;p&gt;以下列出的所有 Kubernetes 版本都经过 e2e 测试，并保证与此 Cilium 版本兼容。此处未列出的旧 Kubernetes 版本不支持 Cilium。较新的 Kubernetes 版本未列出，这取决于新版本的的向后兼容性。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.16&lt;/li&gt;
&lt;li&gt;1.17&lt;/li&gt;
&lt;li&gt;1.18&lt;/li&gt;
&lt;li&gt;1.19&lt;/li&gt;
&lt;li&gt;1.20&lt;/li&gt;
&lt;li&gt;1.21&lt;/li&gt;
&lt;li&gt;1.22&lt;/li&gt;
&lt;li&gt;1.23&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;系统要求&#34;&gt;系统要求&lt;/h2&gt;
&lt;p&gt;Cilium 需要 Linux 内核 &lt;code&gt;&amp;gt;= 4.9&lt;/code&gt;。有关所有系统要求的完整详细信息，请参阅&lt;a href=&#34;https://docs.cilium.io/en/stable/operations/system_requirements/#admin-system-reqs&#34; title=&#34;系统要求&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;系统要求&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;在-kubernetes-中启用-cni&#34;&gt;在 Kubernetes 中启用 CNI&lt;/h2&gt;
&lt;p&gt;CNI（容器网络接口）是 Kubernetes 用来委托网络配置的插件层。必须在 Kubernetes 集群中启用 CNI 才能安装 Cilium。这是通过将 &lt;code&gt;--network-plugin=cni&lt;/code&gt; 参数在所有节点上传递给 kubelet 来完成的。有关更多信息，请参阅&lt;a href=&#34;https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/network-plugins/&#34; title=&#34;Kubernetes CNI 网络插件文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Kubernetes CNI 网络插件文档&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;启用自动节点-cidr-分配推荐&#34;&gt;启用自动节点 CIDR 分配（推荐）&lt;/h2&gt;
&lt;p&gt;Kubernetes 具有自动分配每个节点 IP CIDR 的能力。如果启用，Cilium 会自动使用此功能。这是在 Kubernetes 集群中处理 IP 分配的最简单方法。要启用此功能，只需在启动时添加以下标志 &lt;code&gt;kube-controller-manager&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;--allocate-node-cidrs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此选项不是必需的，但强烈推荐。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Cilium 概念</title>
      <link>https://jimmysong.io/book/cilium-handbook/concepts/</link>
      <pubDate>Tue, 07 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/concepts/</guid>
      <description>
        
        
        &lt;p&gt;概念一章对 Cilium 和 Hubble 的所有方面进行了更深入的介绍。如果你想了解 Cilium 和 Hubble 的概要介绍，请参阅 &lt;a href=&#34;../intro&#34; title=&#34;Cilium 和 Hubble 简介&#34;&gt;Cilium 和 Hubble 简介&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;本章大纲&#34;&gt;本章大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/concepts/overview/&#34;&gt;组件概览&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/concepts/terminology/&#34;&gt;Cilium 术语说明&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/concepts/observability/&#34;&gt;可观测性&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;overview&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;阅读本章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Iptables 用法</title>
      <link>https://jimmysong.io/book/cilium-handbook/ebpf/iptables/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/ebpf/iptables/</guid>
      <description>
        
        
        &lt;p&gt;根据所使用的 Linux 内核版本，eBPF 数据路径可以完全在 eBPF 中实现不同的功能集。如果某些所需功能不可用，则使用旧版 iptables 实现提供该功能。有关详细信息，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/stable/operations/system_requirements/#features-kernel-matrix&#34; title=&#34;IPsec 要求。&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;IPsec 要求。&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;kube-proxy-互操作性&#34;&gt;kube-proxy 互操作性&lt;/h2&gt;
&lt;p&gt;下图显示了 &lt;code&gt;kube-proxy&lt;/code&gt; 安装的 iptables 规则和 Cilium 安装的 iptables 规则的集成。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/iptables/kubernetes_iptables.svg&#34; data-img=&#34;/book/cilium-handbook/ebpf/iptables/kubernetes_iptables.svg&#34; alt=&#34;image&#34; data-caption=&#34;kube-proxy 与 Cilium 的 iptables 规则集成&#34;&gt;
    
  
  &lt;figcaption&gt;kube-proxy 与 Cilium 的 iptables 规则集成&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;../../policy&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;下一章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>IPv4 分片处理</title>
      <link>https://jimmysong.io/book/cilium-handbook/networking/fragmentation/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/networking/fragmentation/</guid>
      <description>
        
        
        &lt;p&gt;默认情况下，Cilium 将 eBPF 数据路径配置为执行 IP 分片跟踪，以允许不支持分片的协议（例如 UDP）通过网络透明地传输大型消息。IP 分片跟踪在 eBPF 中使用 LRU（最近最少使用）映射实现，需要 Linux 4.10 或更高版本。可以使用以下选项配置此功能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--enable-ipv4-fragment-tracking&lt;/code&gt;：启用或禁用 IPv4 分片跟踪。默认启用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--bpf-fragments-map-max&lt;/code&gt;：控制使用 IP 分片的最大活动并发连接数。对于默认值，请参阅&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/ebpf/maps/#bpf-map-limitations&#34; title=&#34;eBPF Maps&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;eBPF Maps&lt;/a&gt;
。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;当使用 &lt;code&gt;kube-proxy&lt;/code&gt; 运行 Cilium 时，碎片化的 NodePort 流量可能会由于内核错误而中断，其中路由 MTU 不受转发数据包的影响。Cilium 碎片跟踪需要第一个逻辑碎片首先到达。由于内核错误，可能会在外部封装层上发生额外的碎片，从而导致数据包重新排序并导致无法跟踪碎片。&lt;/p&gt;
&lt;p&gt;内核错误已被 &lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=02a1b175b0e92d9e0fa5df3957ade8d733ceb6a0&#34; title=&#34;修复&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;修复&lt;/a&gt;
 并向后移植到所有维护的内核版本。如果您发现连接问题，请确保您的节点上的内核包最近已升级，然后再报告问题。&lt;/p&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  这是一个测试版功能。如果你遇到任何问题，请提供反馈并提交 GitHub Issue。
&lt;/div&gt;
&lt;/div&gt;

&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;../../security&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;下一章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>代理注入</title>
      <link>https://jimmysong.io/book/cilium-handbook/security/proxy/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/security/proxy/</guid>
      <description>
        
        
        &lt;p&gt;Cilium 能够透明地将四层代理注入任何网络连接中。这被用作执行更高级别网络策略的基础（请参阅&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#dns-based&#34; title=&#34;基于 DNS &#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;基于 DNS &lt;/a&gt;
和 &lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#l7-policy&#34; title=&#34;七层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;七层示例&lt;/a&gt;
）。&lt;/p&gt;
&lt;p&gt;可以注入以下代理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Envoy&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;注入-envoy-代理&#34;&gt;注入 Envoy 代理&lt;/h2&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  注意
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  此功能目前正处于测试阶段。
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;如果你有兴趣编写 Envoy 代理的 Go 扩展，请参考&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/security/proxy/envoy/&#34; title=&#34;开发者指南&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;开发者指南&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;&lt;figure class=&#34;mx-auto text-center&#34;&gt;
  
  
  
  
    
    &lt;img src=&#34;https://jimmysong.io/book/cilium-handbook/security/proxy/proxylib_logical_flow.png&#34; data-img=&#34;/book/cilium-handbook/security/proxy/proxylib_logical_flow.png&#34; data-width=&#34;1090&#34; data-height=&#34;627&#34; alt=&#34;image&#34; data-caption=&#34;Envoy 代理注入示意图&#34;&gt;
    
  
  &lt;figcaption&gt;Envoy 代理注入示意图&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;如上所述，该框架允许开发人员编写少量 Go 代码（绿色框），专注于解析新的 API 协议，并且该 Go 代码能够充分利用 Cilium 功能，包括高性能重定向 Envoy、丰富的七层感知策略语言和访问日志记录，以及通过 kTLS 对加密流量的可视性（即将推出）。总而言之，作为开发者的你只需要关心解析协议的逻辑，Cilium + Envoy + eBPF 就完成了繁重的工作。&lt;/p&gt;
&lt;p&gt;本指南基于假设的 &lt;code&gt;r2d2&lt;/code&gt; 协议（参见 &lt;a href=&#34;https://github.com/cilium/cilium/blob/master/proxylib/r2d2/r2d2parser.go&#34; title=&#34;proxylib/r2d2/r2d2parser.go&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;proxylib/r2d2/r2d2parser.go&lt;/a&gt;
）的简单示例，该协议可用于很久以前在遥远的星系中与简单的协议机器人对话。但它也指向了 &lt;code&gt;cilium/proxylib&lt;/code&gt; 目录中已经存在的其他真实协议，例如 Memcached 和 Cassandra。&lt;/p&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;../../ebpf&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;下一章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>故障排除</title>
      <link>https://jimmysong.io/book/cilium-handbook/policy/troubleshooting/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/policy/troubleshooting/</guid>
      <description>
        
        
        &lt;h2 id=&#34;策略规则到端点映射&#34;&gt;策略规则到端点映射&lt;/h2&gt;
&lt;p&gt;确定哪些策略规则当前对端点有效，并且可以将来自  &lt;code&gt;cilium endpoint list&lt;/code&gt; 和 &lt;code&gt;cilium endpoint get&lt;/code&gt; 的数据与 &lt;code&gt;cilium policy get&lt;/code&gt; 配对。&lt;code&gt;cilium endpoint get&lt;/code&gt; 将列出适用于端点的每个规则的标签。可以传递标签列表给 &lt;code&gt;cilium policy get&lt;/code&gt; 以显示确切的源策略。请注意，不能单独获取没有标签的规则（无标签会返回节点上的完整策略）。具有相同标签的规则将一起返回。&lt;/p&gt;
&lt;p&gt;在下面的示例中，其中一个 &lt;code&gt;deathstar&lt;/code&gt; pod 的端点 id 是 568。我们可以打印应用于它的所有策略：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;c1&#34;&gt;# Get a shell on the Cilium pod&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl &lt;span class=&#34;nb&#34;&gt;exec&lt;/span&gt; -ti cilium-88k78 -n kube-system -- /bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;c1&#34;&gt;# print out the ingress labels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;c1&#34;&gt;# clean up the data&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;c1&#34;&gt;# fetch each policy via each set of labels&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;c1&#34;&gt;# (Note that while the structure is &amp;#34;...l4.ingress...&amp;#34;, it reflects all L3, L4 and L7 policy.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cilium endpoint get &lt;span class=&#34;m&#34;&gt;568&lt;/span&gt; -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{range ..status.policy.realized.l4.ingress[*].derived-from-rules}{@}{&amp;#34;\n&amp;#34;}{end}&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;tr -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;][&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -I&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; bash -c &lt;span class=&#34;s1&#34;&gt;&amp;#39;echo &amp;#34;Labels: {}&amp;#34;; cilium policy get {}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Labels: k8s:io.cilium.k8s.policy.name&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;rule1 k8s:io.cilium.k8s.policy.namespace&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;default
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;endpointSelector&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;s2&#34;&gt;&amp;#34;matchLabels&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;any:class&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;deathstar&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;any:org&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;empire&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s:io.kubernetes.pod.namespace&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;ingress&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;fromEndpoints&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;matchLabels&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;s2&#34;&gt;&amp;#34;any:org&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;empire&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s:io.kubernetes.pod.namespace&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;toPorts&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;s2&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;80&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;s2&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;TCP&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;s2&#34;&gt;&amp;#34;rules&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;s2&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;path&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;/v1/request-landing&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                  &lt;span class=&#34;s2&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;POST&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;s2&#34;&gt;&amp;#34;labels&amp;#34;&lt;/span&gt;: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;io.cilium.k8s.policy.name&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;rule1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;io.cilium.k8s.policy.namespace&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;: &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Revision: &lt;span class=&#34;m&#34;&gt;217&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ &lt;span class=&#34;c1&#34;&gt;# repeat for egress&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ cilium endpoint get &lt;span class=&#34;m&#34;&gt;568&lt;/span&gt; -o &lt;span class=&#34;nv&#34;&gt;jsonpath&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;{range ..status.policy.realized.l4.egress[*].derived-from-rules}{@}{&amp;#34;\n&amp;#34;}{end}&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; tr -d &lt;span class=&#34;s1&#34;&gt;&amp;#39;][&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; xargs -I&lt;span class=&#34;o&#34;&gt;{}&lt;/span&gt; bash -c &lt;span class=&#34;s1&#34;&gt;&amp;#39;echo &amp;#34;Labels: {}&amp;#34;; cilium policy get {}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tofqdns-规则故障排除&#34;&gt;&lt;code&gt;toFQDNs&lt;/code&gt; 规则故障排除&lt;/h2&gt;
&lt;p&gt;随着 DNS 数据的变化，在应用策略很长时间后，效果 &lt;code&gt;toFQDNs&lt;/code&gt; 可能会发生变化。这会使调试意外阻塞的连接或瞬时故障变得困难。Cilium 提供 CLI 工具来内省在多个守护进程层中应用 FQDN 策略的状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;cilium policy get&lt;/code&gt; 应显示导入的 FQDN 策略：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;endpointSelector&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;matchLabels&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;any:class&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;mediabot&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;any:org&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;empire&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;k8s:io.kubernetes.pod.namespace&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;egress&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;toFQDNs&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;matchName&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;api.twitter.com&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;toEndpoints&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;matchLabels&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;k8s:io.kubernetes.pod.namespace&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kube-system&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;k8s:k8s-app&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;kube-dns&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;toPorts&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;ports&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nt&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;53&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;nt&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;ANY&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;nt&#34;&gt;&amp;#34;rules&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;nt&#34;&gt;&amp;#34;dns&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;nt&#34;&gt;&amp;#34;matchPattern&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;          &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nt&#34;&gt;&amp;#34;labels&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;io.cilium.k8s.policy.derived-from&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;CiliumNetworkPolicy&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;io.cilium.k8s.policy.name&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;fqdn&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;io.cilium.k8s.policy.namespace&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;key&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;io.cilium.k8s.policy.uid&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;fc9d6022-2ffa-4f72-b59e-b9067c3cfecf&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;source&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;发出 DNS 请求后，应通过以下方式获得 FQDN 到 IP 的映射：&lt;code&gt;cilium fqdn cache list&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# cilium fqdn cache list&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Endpoint   FQDN                TTL      ExpirationTime             IPs
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2761&lt;/span&gt;       help.twitter.com.   &lt;span class=&#34;m&#34;&gt;604800&lt;/span&gt;   2019-07-16T17:57:38.179Z   104.244.42.67,104.244.42.195,104.244.42.3,104.244.42.131
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;2761&lt;/span&gt;       api.twitter.com.    &lt;span class=&#34;m&#34;&gt;604800&lt;/span&gt;   2019-07-16T18:11:38.627Z   104.244.42.194,104.244.42.130,104.244.42.66,104.244.42.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果允许流量，则这些 IP 应通过以下方式具有相应的本地身份：&lt;code&gt;cilium identity list | grep &amp;lt;IP&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# cilium identity list | grep -A 1 104.244.42.194&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;m&#34;&gt;16777220&lt;/span&gt;   cidr:104.244.42.194/32
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;           reserved:world
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;

      </description>
    </item>
    
    <item>
      <title>网络</title>
      <link>https://jimmysong.io/book/cilium-handbook/networking/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/networking/</guid>
      <description>
        
        
        &lt;h2 id=&#34;本章大纲&#34;&gt;本章大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/networking/routing/&#34;&gt;路由&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/networking/ipam/&#34;&gt;IP 地址管理（IPAM）&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/networking/masquerading/&#34;&gt;IP 地址伪装&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/networking/fragmentation/&#34;&gt;IPv4 分片处理&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;routing&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;阅读本章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>网络安全</title>
      <link>https://jimmysong.io/book/cilium-handbook/security/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/security/</guid>
      <description>
        
        
        &lt;h2 id=&#34;本章大纲&#34;&gt;本章大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/security/intro/&#34;&gt;介绍&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/security/identity/&#34;&gt;基于身份&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/security/policyenforcement/&#34;&gt;策略执行&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/security/proxy/&#34;&gt;代理注入&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;intro&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;阅读本章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>eBPF 数据路径</title>
      <link>https://jimmysong.io/book/cilium-handbook/ebpf/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/ebpf/</guid>
      <description>
        
        
        &lt;h2 id=&#34;本章大纲&#34;&gt;本章大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/intro/&#34;&gt;介绍&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/lifeofapacket/&#34;&gt;数据包流程&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/maps/&#34;&gt;eBPF Map&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/ebpf/iptables/&#34;&gt;Iptables 用法&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;intro&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;阅读本章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Kubernetes 网络策略</title>
      <link>https://jimmysong.io/book/cilium-handbook/policy/kubernetes/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/policy/kubernetes/</guid>
      <description>
        
        
        &lt;p&gt;本节介绍 Kubernetes 的网络策略方面。&lt;/p&gt;
&lt;h2 id=&#34;命名空间&#34;&gt;命名空间&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/&#34; title=&#34;命名空间&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;命名空间&lt;/a&gt;
 用于在 Kubernetes 中创建虚拟集群。包括 NetworkPolicy 和 CiliumNetworkPolicy 在内的所有 Kubernetes 对象都属于一个特定的命名空间。根据定义和创建策略的方式，会自动考虑 Kubernetes 命名空间：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumnetworkpolicy&#34; title=&#34;作为 CiliumNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;作为 CiliumNetworkPolicy&lt;/a&gt;
 CRD 和 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#networkpolicy&#34; title=&#34;NetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetworkPolicy&lt;/a&gt;
 创建和导入的网络策略适用于命名空间内，即该策略仅适用于该命名空间内的 pod。但是，可以授予对其他命名空间中的 pod 的访问权限，如下所述。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/api/#api-ref&#34; title=&#34;通过 API 参考&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;通过 API 参考&lt;/a&gt;
 直接导入的网络策略适用于所有命名空间，除非如下所述指定命名空间选择器。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  虽然有意支持通过 &lt;code&gt;fromEndpoints&lt;/code&gt; 和 &lt;code&gt;toEndpoints&lt;/code&gt; 中的 &lt;code&gt;k8s:io.kubernetes.pod.namespace&lt;/code&gt; 标签指定命名空间。禁止在 &lt;code&gt;endpointSelector&lt;/code&gt; 中指定命名空间，因为这将违反 Kubernetes 的命名空间隔离原则。&lt;code&gt;endpointSelector&lt;/code&gt; 总是适用于与 &lt;code&gt;CiliumNetworkPolicy&lt;/code&gt; 资源本身相关的命名空间的 pod。
&lt;/div&gt;
&lt;/div&gt;

&lt;h3 id=&#34;示例强制命名空间边界&#34;&gt;示例：强制命名空间边界&lt;/h3&gt;
&lt;p&gt;此示例演示如何为命名空间强制实施基于 Kubernetes 命名空间的边界，&lt;code&gt;ns1&lt;/code&gt; 和 &lt;code&gt;ns2&lt;/code&gt; 通过在任一命名空间的所有 pod 上启用默认拒绝，然后允许来自同一命名空间内的所有 pod 的通信。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;isolate-ns1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ns1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nn&#34;&gt;---&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;isolate-ns1&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ns2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;示例跨命名空间公开-pod&#34;&gt;示例：跨命名空间公开 pod&lt;/h3&gt;
&lt;p&gt;以下示例将所有 &lt;code&gt;ns1&lt;/code&gt; 命名空间所有具有 &lt;code&gt;name=leia&lt;/code&gt; 标签的 pod 暴露给 &lt;code&gt;ns2&lt;/code&gt; 命名空间具有 &lt;code&gt;name=luke&lt;/code&gt; 标签的 pod。&lt;/p&gt;
&lt;p&gt;请参阅&lt;a href=&#34;https://raw.githubusercontent.com/cilium/cilium/1.11.6/examples/policies/kubernetes/namespace/demo-pods.yaml&#34; title=&#34;示例 YAML 文件&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;示例 YAML 文件&lt;/a&gt;
 以获取完整的功能示例，包括部署到不同命名空间的 pod。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s-expose-across-namespace&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ns1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;leia&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k8s:io.kubernetes.pod.namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ns2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;luke&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;示例允许-egress-到-kube-system-命名空间中的-kube-dns&#34;&gt;示例：允许 egress 到 kube-system 命名空间中的 kube-dns&lt;/h3&gt;
&lt;p&gt;以下示例允许 &lt;code&gt;public&lt;/code&gt; 创建策略的命名空间中的所有 pod 与 &lt;code&gt;kube-system&lt;/code&gt; 空间中 53/UDP  端口上的 kube-dns 通信。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;allow-to-kubedns&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;{}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k8s:io.kubernetes.pod.namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k8s-app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-dns&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;53&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;UDP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;服务账户&#34;&gt;服务账户&lt;/h2&gt;
&lt;p&gt;Kubernetes &lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/assign-pod-node/&#34; title=&#34;服务账户&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;服务账户&lt;/a&gt;
用于将身份与 Kubernetes 管理的 pod 或进程相关联，并授予身份对 Kubernetes 资源和机密的访问权限。Cilium 支持基于 Pod 的服务账户身份来规范网络安全策略。&lt;/p&gt;
&lt;p&gt;Pod 的服务账户可以通过&lt;a href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/#serviceaccount&#34; title=&#34;服务账户准入控制器&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;服务账户准入控制器&lt;/a&gt;
定义，也可以直接在 Pod、Deployment、ReplicationController 资源中指定，如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;v1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-pod&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;serviceAccountName&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;leia&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;...&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;例子&#34;&gt;例子&lt;/h3&gt;
&lt;p&gt;以下示例授予在“luke”服务账户下运行的任何 pod 向与“leia”服务账户关联的所有运行的 pod 发出 TCP 80 端口 80 上的 &lt;code&gt;HTTP GET /public&lt;/code&gt; 请求。&lt;/p&gt;
&lt;p&gt;请参阅&lt;a href=&#34;https://raw.githubusercontent.com/cilium/cilium/1.11.6/examples/policies/kubernetes/serviceaccount/demo-pods.yaml&#34; title=&#34;示例 YAML 文件&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;示例 YAML 文件&lt;/a&gt;
 以获取完整的功能示例，包括部署和服务账户资源。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;k8s-svc-account&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.cilium.k8s.policy.serviceaccount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;leia&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.cilium.k8s.policy.serviceaccount&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;luke&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;80&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;TCP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;rules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;http&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;method&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;GET&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/public$&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;多集群&#34;&gt;多集群&lt;/h2&gt;
&lt;p&gt;当使用集群网格操作多个集群时，集群名称通过标签公开 &lt;code&gt;io.cilium.k8s.policy.cluster&lt;/code&gt;，可用于将策略限制到特定集群。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;allow-cross-cluster&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Allow x-wing in cluster1 to contact rebel-base in cluster2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;x-wing&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.cilium.k8s.policy.cluster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cluster1&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;rebel-base&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.kubernetes.pod.namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;default&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;io.cilium.k8s.policy.cluster&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;cluster2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意策略规则中的 &lt;code&gt;io.kubernetes.pod.namespace: default&lt;/code&gt;。它确保策略适用于 cluster2 默认命名空间中的 &lt;code&gt;rebel-base&lt;/code&gt;，而不考虑 &lt;code&gt;x-wing&lt;/code&gt; 部署在 cluster1 中的命名空间。如果政策规则的命名空间标签被省略，它默认为策略本身应用的相同命名空间，这可能不是部署跨集群策略时想要的。&lt;/p&gt;
&lt;h2 id=&#34;集群范围的策略&#34;&gt;集群范围的策略&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumnetworkpolicy&#34; title=&#34;CiliumNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumNetworkPolicy&lt;/a&gt;
 只允许绑定限制到特定命名空间的策略。在某些情况下，可以使用 Cilium 的 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumclusterwidenetworkpolicy&#34; title=&#34;CiliumClusterwideNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumClusterwideNetworkPolicy&lt;/a&gt;
 Kubernetes 自定义资源来实现集群范围内的策略效果。该策略的规范与&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumnetworkpolicy&#34; title=&#34;CiliumNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumNetworkPolicy&lt;/a&gt;
 的规范相同，只是它没有命名空间。&lt;/p&gt;
&lt;p&gt;在集群中，这个策略将允许从任何命名空间中匹配标签 &lt;code&gt;name=luke&lt;/code&gt; 的 pod 到任何命名空间中匹配标签 &lt;code&gt;name=leia&lt;/code&gt; 的 pod 的入站流量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumClusterwideNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;clusterwide-policy-example&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Policy for selective ingress allow to a pod from only a pod with given label&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;leia&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;luke&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;示例允许所有流量进入-kube-dns&#34;&gt;示例：允许所有流量进入 kube-dns&lt;/h3&gt;
&lt;p&gt;以下示例允许集群中的所有 Cilium 托管端点与 &lt;code&gt;kube-system&lt;/code&gt; 命名空间中 53/UDP 端口上的 kube-dns 通信。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumClusterwideNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;wildcard-from-endpoints&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;description&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Policy for ingress allow to kube-dns from all Cilium managed endpoints in the cluster&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k8s:io.kubernetes.pod.namespace&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-system&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;k8s-app&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;kube-dns&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEndpoints&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- {}&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;toPorts&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;ports&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;port&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;53&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;protocol&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;UDP&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;示例添加健康端点&#34;&gt;示例：添加健康端点&lt;/h3&gt;
&lt;p&gt;以下示例将健康实体添加到所有 Cilium 托管端点，以检查集群连接健康状况。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;apiVersion&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium.io/v2&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;kind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;CiliumClusterwideNetworkPolicy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;metadata&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;cilium-health-checks&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;endpointSelector&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;matchLabels&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;&amp;#39;reserved:health&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ingress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;fromEntities&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;remote-node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;egress&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;toEntities&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;- &lt;span class=&#34;l&#34;&gt;remote-node&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;../../kubernetes&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;下一章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>网络策略</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/policy/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/policy/</guid>
      <description>
        
        
        &lt;p&gt;如果你在 Kubernetes 上运行 Cilium，你可以从 Kubernetes 为你分发的策略中受益。在这种模式下，Kubernetes 负责在所有节点上分发策略，Cilium 会自动应用这些策略。三种格式可用于使用 Kubernetes 本地配置网络策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在撰写本文时，标准的 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#networkpolicy&#34; title=&#34;NetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetworkPolicy&lt;/a&gt;
 资源支持指定三层/四层入口策略，并带有标记为 beta 的有限出口支持。&lt;/li&gt;
&lt;li&gt;扩展的 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumnetworkpolicy&#34; title=&#34;CiliumNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumNetworkPolicy&lt;/a&gt;
 格式可用作 &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-customresourcedefinition&#34; title=&#34;CustomResourceDefinition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CustomResourceDefinition&lt;/a&gt;
 支持入口和出口的三层到七层层策略规范。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CiliumClusterwideNetworkPolicy&lt;/code&gt; 格式，&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumclusterwidenetworkpolicy&#34; title=&#34;它&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;它&lt;/a&gt;
是集群范围的&lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-customresourcedefinition&#34; title=&#34;CustomResourceDefinition&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CustomResourceDefinition&lt;/a&gt;
，用于指定由 Cilium 强制执行的集群范围的策略。规范与 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumnetworkpolicy&#34; title=&#34;CiliumNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumNetworkPolicy&lt;/a&gt;
 相同，没有指定命名空间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cilium 支持同时运行多个策略类型。但是，在同时使用多种策略类型时应谨慎，因为理解跨多种策略类型的完整允许流量集可能会令人困惑。如果不注意，这可能会导致意外的策略允许行为。&lt;/p&gt;
&lt;h2 id=&#34;网络策略&#34;&gt;网络策略&lt;/h2&gt;
&lt;p&gt;有关详细信息，请参阅官方 &lt;a href=&#34;https://kubernetes.io/docs/concepts/services-networking/network-policies/&#34; title=&#34;NetworkPolicy 文档&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetworkPolicy 文档&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;Kubernetes 网络策略的已知缺失功能：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特征&lt;/th&gt;
&lt;th&gt;GItHub Issue&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;ipBlock&lt;/code&gt;使用 pod IP 设置&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/cilium/cilium/issues/9209&#34; title=&#34;GitHub Issue 9209&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Issue 9209&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SCTP&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/cilium/cilium/issues/5719&#34; title=&#34;GitHub Issue 5719&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub Issue 5719&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;cilium-网络策略&#34;&gt;Cilium 网络策略&lt;/h2&gt;
&lt;p&gt;CiliumNetworkPolicy 与 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#networkpolicy&#34; title=&#34;标准 NetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;标准 NetworkPolicy&lt;/a&gt;
 非常相似。目的是提供 NetworkPolicy 尚不支持的功能。理想情况下，所有功能都将合并到标准资源格式中，并且不再需要此 CRD。&lt;/p&gt;
&lt;p&gt;Go 中资源的原始规范如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CiliumNetworkPolicy&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// +deepequal-gen=false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;metav1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;TypeMeta&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;,inline&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// +deepequal-gen=false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;metav1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ObjectMeta&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;metadata&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Spec is the desired Cilium specific rule specification.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Spec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Rule&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;spec,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Specs is a list of desired Cilium specific rule specification.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Specs&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Rules&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;specs,omitempty&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Status is the status of the Cilium policy rule
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +deepequal-gen=false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +kubebuilder:validation:Optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Status&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CiliumNetworkPolicyStatus&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`json:&amp;#34;status&amp;#34;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;metadata&lt;/p&gt;
&lt;p&gt;描述策略。这包括：策略的名称，在命名空间中是唯一的注入策略的命名空间一组标签来识别 Kubernetes 中的资源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;spec&lt;/p&gt;
&lt;p&gt;包含&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/intro/#policy-rule&#34; title=&#34;规则基础的字段&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;规则基础的字段&lt;/a&gt;
。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Specs&lt;/p&gt;
&lt;p&gt;包含&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/intro/#policy-rule&#34; title=&#34;Rule Basics&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rule Basics&lt;/a&gt;
列表的字段。如果必须自动删除或添加多个规则，则此字段很有用。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Status&lt;/p&gt;
&lt;p&gt;提供有关策略是否已成功应用的可视性。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;例子&#34;&gt;例子&lt;/h2&gt;
&lt;p&gt;有关示例策略的详细列表，请参阅 &lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#policy-examples&#34; title=&#34;三层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;三层示例&lt;/a&gt;
、&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#l4-policy&#34; title=&#34;四层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;四层示例&lt;/a&gt;
和 &lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#l7-policy&#34; title=&#34;七层&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;七层&lt;/a&gt;
 示例。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumclusterwidenetworkpolicy&#34; title=&#34;CiliumClusterwideNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumClusterwideNetworkPolicy&lt;/a&gt;
 类似于 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumnetworkpolicy&#34; title=&#34;CiliumNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumNetworkPolicy&lt;/a&gt;
，除了&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumclusterwidenetworkpolicy&#34; title=&#34; CiliumClusterwideNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt; CiliumClusterwideNetworkPolicy&lt;/a&gt;
 定义的策略是非命名空间和集群范围的&lt;/li&gt;
&lt;li&gt;它允许使用&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/intro/#nodeselector&#34; title=&#34;节点选择器&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;节点选择器&lt;/a&gt;
。在内部，该策略与 &lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/kubernetes/policy/#ciliumnetworkpolicy&#34; title=&#34;CiliumNetworkPolicy&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CiliumNetworkPolicy&lt;/a&gt;
 相同，因此该策略规范的效果也相同。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;go 中资源的原始规范如下所示：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CiliumClusterwideNetworkPolicy&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Spec is the desired Cilium specific rule specification.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Spec&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Rule&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Specs is a list of desired Cilium specific rule specification.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Specs&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;api&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Rules&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;c1&#34;&gt;// Status is the status of the Cilium policy rule.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// The reason this field exists in this structure is due a bug in the k8s
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// code-generator that doesn&amp;#39;t create a `UpdateStatus` method because the
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// field does not exist in the structure.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;c1&#34;&gt;// +kubebuilder:validation:Optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;nx&#34;&gt;Status&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;CiliumNetworkPolicyStatus&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>端点 CRD</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/ciliumendpoint/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/ciliumendpoint/</guid>
      <description>
        
        
        &lt;p&gt;在 Kubernetes 中管理 pod 时，Cilium 将创建一个 &lt;code&gt;CiliumEndpoint&lt;/code&gt; 的自定义资源定义（CRD）。每个由 Cilium 管理的 pod 都会创建一个 &lt;code&gt;CiliumEndpoint&lt;/code&gt;，名称相同且在同一命名空间。&lt;code&gt;CiliumEndpoint&lt;/code&gt; 对象包含的信息与 &lt;code&gt;cilium endpoint get&lt;/code&gt; 在&lt;code&gt;.status&lt;/code&gt; 字段下的 json 输出相同，但可以为集群中的所有 pod 获取。添加 &lt;code&gt;-o json&lt;/code&gt; 将导出每个端点的更多信息。这包括端点的标签、安全身份和对其有效的策略。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ kubectl get ciliumendpoints --all-namespaces
NAMESPACE     NAME                     AGE
default       app1-55d7944bdd-l7c8j    1h
default       app1-55d7944bdd-sn9xj    1h
default       app2                     1h
default       app3                     1h
kube-system   cilium-health-minikube   1h
kube-system   microscope               1h
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;alert&#34;&gt;

&lt;div class=&#34;alert-note-title py-1 px-2&#34;&gt;
  提示
&lt;/div&gt;

&lt;div class=&#34;alert-note py-1 px-2&#34;&gt;
  每个 &lt;code&gt;cilium-agent&lt;/code&gt; pod 都会创建一个 &lt;code&gt;CiliumEndpoint&lt;/code&gt; 来代表自己的 agent 间健康检查端点。这些不是 Kubernetes 中的 pod，而是在 &lt;code&gt;kube-system&lt;/code&gt; 命名空间中。它们被命名为 &lt;code&gt;cilium-health-&amp;lt;节点名&amp;gt;&lt;/code&gt;。
&lt;/div&gt;
&lt;/div&gt;


      </description>
    </item>
    
    <item>
      <title>端点切片 CRD</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/ciliumendpointslice/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/ciliumendpointslice/</guid>
      <description>
        
        
        &lt;p&gt;在 Kubernetes 中管理 pod 时，Cilium 将为 Cilium 管理的每个 pod 创建一个 &lt;a href=&#34;../ciliumendpoint&#34; title=&#34;&amp;lt;code&amp;gt;CiliumEndpoint&amp;lt;/code&amp;gt;&#34;&gt;&lt;code&gt;CiliumEndpoint&lt;/code&gt;&lt;/a&gt;
（CEP）的自定义资源定义（CRD）。如果启用了 &lt;code&gt;enable-cilium-endpoint-slice&lt;/code&gt;，那么 Cilium 还会创建一个 &lt;code&gt;CiliumEndpointSlice&lt;/code&gt; （CES）类型的 CRD，将一组具有相同&lt;a href=&#34;https://docs.cilium.io/en/stable/concepts/security/identity/#arch-id-security&#34; title=&#34;安全身份&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;安全身份&lt;/a&gt;
的 CEP 对象分组到一个 CES 对象中，并广播 CES 对象来向其他代理传递身份，而不是通过广播 CEP 来实现。在大多数情况下，这减少了控制平面上的负载，可以使用相同的主资源维持更大规模的集群。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl get ciliumendpointslices --all-namespaces
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME                  AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ces-548bnpgsf-56q9f   171m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ces-dy4d8x6j2-qgc2z   171m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ces-f6qfylrxh-84vxm   171m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ces-k29rv92f5-qb4sw   171m
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ces-m9gs68csm-w2qg8   171m
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Kubernetes 兼容性</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/compatibility/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/compatibility/</guid>
      <description>
        
        
        &lt;p&gt;Cilium 与多个 Kubernetes API 组兼容。有些是废弃的或测试版的，可能只在 Kubernetes 的特定版本中可用。&lt;/p&gt;
&lt;p&gt;所有列出的 Kubernetes 版本都经过 e2e 测试，保证与 Cilium 兼容。本表中未列出的旧版 Kubernetes 不支持 Cilium。较新的 Kubernetes 版本，虽然没有列出，但将取决于 Kubernetes 提供的后向兼容性。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Kubernetes 版本&lt;/th&gt;
&lt;th&gt;Kubernetes NetworkPolicy API&lt;/th&gt;
&lt;th&gt;CiliumNetworkPolicy&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.16, 1.17, 1.18, 1.19, 1.20, 1.21, 1.22, 1.23&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.18/#networkpolicy-v1-networking-k8s-io&#34; title=&#34;networking.k8s.io/v1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;networking.k8s.io/v1&lt;/a&gt;
&lt;/td&gt;
&lt;td&gt;&lt;code&gt;cilium.io/v2&lt;/code&gt; 有一个 CRD&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Cilium 在 Kubernetes 中使用了一个网络策略的 CRD。这个 CRD 的模式验证可能会有变化，它可以验证 Cilium Clusterwide Network Policy（CCNP）或 Cilium Network Policy（CNP）的正确性。&lt;/p&gt;
&lt;p&gt;CRD 本身有一个注解，即 &lt;code&gt;io.cilium.k8s.crd.schema.version&lt;/code&gt;，有模式定义版本。默认情况下，Cilium 会自动更新 CRD 及其验证，使用较新的版本。&lt;/p&gt;
&lt;p&gt;下表列出了所有的 Cilium 版本和它们预期的 schema 验证版本。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Cilium 版本&lt;/th&gt;
&lt;th&gt;CNP 和 CCNP Schema 版本&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.0-rc0&lt;/td&gt;
&lt;td&gt;1.22.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.0-rc1&lt;/td&gt;
&lt;td&gt;1.22.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.0-rc2&lt;/td&gt;
&lt;td&gt;1.22.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.0-rc3&lt;/td&gt;
&lt;td&gt;1.22.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.0&lt;/td&gt;
&lt;td&gt;1.22.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.1&lt;/td&gt;
&lt;td&gt;1.22.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.2&lt;/td&gt;
&lt;td&gt;1.22.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.3&lt;/td&gt;
&lt;td&gt;1.22.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.4&lt;/td&gt;
&lt;td&gt;1.22.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.5&lt;/td&gt;
&lt;td&gt;1.22.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.6&lt;/td&gt;
&lt;td&gt;1.22.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.7&lt;/td&gt;
&lt;td&gt;1.22.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.8&lt;/td&gt;
&lt;td&gt;1.22.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.9&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.10&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.11&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.12&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.13&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.14&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.15&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9.16&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.9&lt;/td&gt;
&lt;td&gt;1.22.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.0-rc0&lt;/td&gt;
&lt;td&gt;1.23.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.0-rc1&lt;/td&gt;
&lt;td&gt;1.23.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.0-rc2&lt;/td&gt;
&lt;td&gt;1.23.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.0&lt;/td&gt;
&lt;td&gt;1.23.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.1&lt;/td&gt;
&lt;td&gt;1.23.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.2&lt;/td&gt;
&lt;td&gt;1.23.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.3&lt;/td&gt;
&lt;td&gt;1.23.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.4&lt;/td&gt;
&lt;td&gt;1.23.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.5&lt;/td&gt;
&lt;td&gt;1.23.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.6&lt;/td&gt;
&lt;td&gt;1.23.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.7&lt;/td&gt;
&lt;td&gt;1.23.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.8&lt;/td&gt;
&lt;td&gt;1.23.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.9&lt;/td&gt;
&lt;td&gt;1.23.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.10&lt;/td&gt;
&lt;td&gt;1.23.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10.11&lt;/td&gt;
&lt;td&gt;1.23.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.10&lt;/td&gt;
&lt;td&gt;1.23.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.0-rc0&lt;/td&gt;
&lt;td&gt;1.24.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.0-rc1&lt;/td&gt;
&lt;td&gt;1.24.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.0-rc2&lt;/td&gt;
&lt;td&gt;1.24.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.0-rc3&lt;/td&gt;
&lt;td&gt;1.24.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.0&lt;/td&gt;
&lt;td&gt;1.24.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.1&lt;/td&gt;
&lt;td&gt;1.24.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.2&lt;/td&gt;
&lt;td&gt;1.24.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.3&lt;/td&gt;
&lt;td&gt;1.24.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.4&lt;/td&gt;
&lt;td&gt;1.24.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11.5&lt;/td&gt;
&lt;td&gt;1.24.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v1.11&lt;/td&gt;
&lt;td&gt;1.24.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;latest / master&lt;/td&gt;
&lt;td&gt;1.25.4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>故障排除</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/troubleshooting/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/troubleshooting/</guid>
      <description>
        
        
        &lt;h2 id=&#34;验证安装&#34;&gt;验证安装&lt;/h2&gt;
&lt;p&gt;检查 &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-daemonset&#34; title=&#34;&amp;lt;code&amp;gt;DaemonSet&amp;lt;/code&amp;gt;&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;DaemonSet&lt;/code&gt;&lt;/a&gt;
 的状态并验证所有需要的实例都处于 &lt;code&gt;ready&lt;/code&gt; 状态：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl --namespace kube-system get ds
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME      DESIRED   CURRENT   READY     NODE-SELECTOR   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cilium    &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;1&lt;/span&gt;         &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;         &amp;lt;none&amp;gt;          3s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在此示例中，我们看到 1 个期望的状态，0 个 ready 状态。这表明有问题。下一步是通过在  &lt;code&gt;k8s-app=cilium&lt;/code&gt; 标签上匹配列出所有 cilium pod，并根据每个 pod 的重启次数对列表进行排序，以便轻松识别失败的 pod：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl --namespace kube-system get pods --selector k8s-app&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;cilium &lt;span class=&#34;se&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;se&#34;&gt;&lt;/span&gt;          --sort-by&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;.status.containerStatuses[0].restartCount&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;NAME           READY     STATUS             RESTARTS   AGE
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cilium-813gf   0/1       CrashLoopBackOff   &lt;span class=&#34;m&#34;&gt;2&lt;/span&gt;          44s
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;cilium-813gf&lt;/code&gt; pod 失败并且已经重新启动了 2 次。让我们打印该 pod 的日志文件来调查原因：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ kubectl --namespace kube-system logs cilium-813gf
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO      _ _ _
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO  ___&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_ _ _____
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;  _&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;     &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;___&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;___&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;_&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;INFO Cilium 0.8.90 f022e2f Thu, &lt;span class=&#34;m&#34;&gt;27&lt;/span&gt; Apr &lt;span class=&#34;m&#34;&gt;2017&lt;/span&gt; 23:17:56 -0700 go version go1.7.5 linux/amd64
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;CRIT kernel version: NOT OK: minimal supported kernel version is &amp;gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; 4.8
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在此示例中，失败的原因是在工作节点上运行的 Linux 内核不符合&lt;a href=&#34;https://docs.cilium.io/en/stable/operations/system_requirements/#admin-system-reqs&#34; title=&#34;系统要求&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;系统要求&lt;/a&gt;
。&lt;/p&gt;
&lt;p&gt;如果根据这些简单的步骤无法发现问题的原因，请来我们的 &lt;a href=&#34;https://docs.cilium.io/en/stable/glossary/#term-slack-channel&#34; title=&#34;Slack channel&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Slack channel&lt;/a&gt;
。&lt;/p&gt;
&lt;h2 id=&#34;集群外的-apiserver&#34;&gt;集群外的 APIserver&lt;/h2&gt;
&lt;p&gt;如果你出于某种原因在集群外部运行 Kubernetes Apiserver（例如将主节点保留在防火墙后面），请确保您也在主节点上运行 Cilium。否则，由 Apiserver 创建的 Kubernetes pod 代理将无法路由到 pod IP，并且你在尝试将流量代理到 pod 时可能会遇到错误。&lt;/p&gt;
&lt;p&gt;你可以将 Cilium 作为&lt;a href=&#34;https://kubernetes.io/docs/tasks/configure-pod-container/static-pod/&#34; title=&#34;静态 pod&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;静态 pod&lt;/a&gt;
 运行，或者为 Cilium DaemonSet 设置&lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/&#34; title=&#34;容忍&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;容忍&lt;/a&gt;
，以确保将 Cilium pod 安排在你的主节点上。执行此操作的确切方法取决于你的设置。&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>网络策略</title>
      <link>https://jimmysong.io/book/cilium-handbook/policy/</link>
      <pubDate>Tue, 07 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/policy/</guid>
      <description>
        
        
        &lt;p&gt;本章记录了用于在 Cilium 中配置网络策略的策略语言。安全策略可以通过以下机制指定和导入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 Kubernetes NetworkPolicy、&lt;code&gt;CiliumNetworkPolicy&lt;/code&gt; 和 &lt;code&gt;CiliumClusterwideNetworkPolicy&lt;/code&gt; 资源。更多细节请参见网络策略一节。在这种模式下，Kubernetes 将自动向所有代理分发策略。&lt;/li&gt;
&lt;li&gt;通过代理的 CLI 或 API 参考直接导入到代理中。这种方法不会自动向所有代理分发策略。用户有责任在所有需要的代理中导入策略。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本章内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;intro/&#34; title=&#34;策略执行模式&#34;&gt;策略执行模式&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;intro/#rule-basics&#34; title=&#34;规则基础&#34;&gt;规则基础&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/&#34; title=&#34;三层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;三层示例&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#layer-4-examples&#34; title=&#34;四层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;四层示例&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#layer-7-examples&#34; title=&#34;七层示例&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;七层示例&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#deny-policies&#34; title=&#34;拒绝政策&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;拒绝政策&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.cilium.io/en/stable/policy/language/#host-policies&#34; title=&#34;主机策略&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;主机策略&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;visibility/&#34; title=&#34;七层协议可视性&#34;&gt;七层协议可视性&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;kubernetes/&#34; title=&#34;在策略中使用 Kubernetes 构造&#34;&gt;在策略中使用 Kubernetes 构造&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;lifecycle/&#34; title=&#34;端点生命周期&#34;&gt;端点生命周期&lt;/a&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;troubleshooting/&#34; title=&#34;故障排除&#34;&gt;故障排除&lt;/a&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;intro&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;阅读本章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
    <item>
      <title>Kubernetes 集成</title>
      <link>https://jimmysong.io/book/cilium-handbook/kubernetes/</link>
      <pubDate>Fri, 17 Jun 2022 12:00:00 +0800</pubDate>
      
      <guid>https://jimmysong.io/book/cilium-handbook/kubernetes/</guid>
      <description>
        
        
        &lt;h2 id=&#34;本章大纲&#34;&gt;本章大纲&lt;/h2&gt;


  &lt;ul&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/intro/&#34;&gt;介绍&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/concepts/&#34;&gt;概念&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/requirements/&#34;&gt;要求&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/policy/&#34;&gt;网络策略&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/ciliumendpoint/&#34;&gt;端点 CRD&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/ciliumendpointslice/&#34;&gt;端点切片 CRD&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/compatibility/&#34;&gt;Kubernetes 兼容性&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
      &lt;li&gt;
        &lt;p&gt;&lt;a href=&#34;https://jimmysong.io/book/cilium-handbook/kubernetes/troubleshooting/&#34;&gt;故障排除&lt;/a&gt;&lt;/p&gt;
        
      &lt;/li&gt;
    
  &lt;/ul&gt;


&lt;ul class=&#34;cta-group&#34;&gt;
  
  &lt;li&gt;
    &lt;a href=&#34;intro&#34;  class=&#34;btn btn-sm btn-primary&#34;&gt;阅读本章&lt;/a&gt;
  &lt;/li&gt;
  
  
&lt;/ul&gt;


      </description>
    </item>
    
  </channel>
</rss>
